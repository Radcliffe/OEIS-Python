# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A387852

from gmpy2 import digits, is_prime, mpz
def a(n):
    base, prevan = n, None
    an, aset, digset = 2, {2}, "".join(digits(i, base) for i in range(base))
    while an != -1:
        aset.add(an)
        prevan = an
        s = digits(an, base)
        D = set(p for i in range(len(s)) if len(t:=s[:i]+s[i+1:]) and is_prime(p:=mpz(t, base)))
        if D and (Dcands:=D-aset):
            an = min(D - aset)
            continue
        A = set(p for i in range(len(s)+1) for d in digset if is_prime(p:=mpz(s[:i]+d+s[i:], base)))
        an = min(Acands) if A and (Acands:=A-aset) else -1
    return int(prevan)
print([a(n) for n in range(2, 10)]) # _Michael S. Branicky_, Oct 21 2025

