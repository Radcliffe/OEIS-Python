# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A387398

import sys #only needed for printing large digits
sys.set_int_max_str_digits(0) #otherwise sys not needed
def a387398(n):
    if n < 0: raise ValueError("n>=0")
    if n == 0: return 1
    import math
    s=[1,1]; h=2; p=0; idx=0; r=1
    while True:
        while len(s) < p+2:
            t = 2 if (h & 1) == 0 else 1
            s += [t]*((s[h-1]*2)//t); h += 1
        if s[p]==2:
            p+=1; idx+=1
            if idx==n: return 2
            K=((r & -r).bit_length()-1)+1
            pk=math.comb(1<<(K+1),1<<K)-1
            idx+=1
            if idx==n: return pk
        elif p+1<len(s) and s[p]==1 and s[p+1]==1:
            p+=2; idx+=1
            if idx==n: return 1
            idx+=1
            if idx==n: return 1
            K=((r & -r).bit_length()-1)+1
            pk=math.comb(1<<(K+1),1<<K)-1
            idx+=1
            if idx==n: return pk
        else:
            continue
        r+=1

