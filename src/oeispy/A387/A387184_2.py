# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A387184

from math import prod
from itertools import count, islice
from sympy import factorint, integer_nthroot, isprime
def A387184_gen(): # generator of terms
    g, p, r = [set()], 0, {}
    for c in count(2):
        f = factorint(c)
        d = g[-1]^set(i for i, j in f.items() if j&1)
        for h in g:
            if (t:=prod(d^h)) not in r:
                r[t] = c-1
        g.append(d)
        x, y = integer_nthroot(c,2)
        if c>4 and y and isprime(x):
            yield c
        elif c>4 and max(f.values())>1:
            yield c
        else:
            for b in range(c-2,p,-1):
                e = prod(d^g[b])
                if e in r and r[e]<b:
                    yield c
                    break
        if isprime(c):
            p = c-2
A387184_list = list(islice(A387184_gen(),50)) # _Chai Wah Wu_, Sep 24 2025, updated Oct 05 2025

