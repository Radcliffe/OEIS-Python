# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A346026

from sympy import isprime, nextprime, prime, primerange
def isemirp(p): s = str(p); return s != s[::-1] and isprime(int(s[::-1]))
def aupto(limit, runlength=6):
  alst = []
  pvec = list(primerange(1, prime(runlength+2)+1))
  evec = [int(isemirp(p)) for p in pvec]
  target = [0] + [1 for i in range(runlength)] + [0]
  p = nextprime(pvec[-1])
  while pvec[1] <= limit:
    if evec == target: alst.append(pvec[1])
    pvec = pvec[1:] + [p]; evec = evec[1:] + [isemirp(p)]; p = nextprime(p)
    strp = str(p)
    if strp[0] in "24568": # skip large gaps (p is a prime, not an emirp)
      evec = [0 for i in range(runlength+2)]
      pvec = [0 for i in range(runlength+2)]
      p = nextprime(int(str(int(strp[0])+1)+'0'*(len(strp)-1)))
  return alst
print(aupto(3339943)) # _Michael S. Branicky_, Jul 14 2021

