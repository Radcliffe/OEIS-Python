# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A369351

from sympy import factorint
from functools import cache
from itertools import count, islice
from collections import Counter
kcount, kmax = Counter(), 0
@cache
def sopfr(n): return sum(p*e for p, e in factorint(n).items())
def f(n):   # revised based on comment by _David A. Corneth_, Feb 11 2024
    global kcount, kmax
    target = n - sopfr(n)
    for k in range(kmax+1, target+1):
        kcount[k+sopfr(k)] += 1
        kmax += 1
    return kcount[target]
def agen(): # generator of terms
    adict, n = dict(), 1
    for m in count(2):
        v = f(m)
        if v not in adict: adict[v] = m
        for i in range(n, v+1): yield m; n += 1
print(list(islice(agen(), 12))) # _Michael S. Branicky_, Feb 09 2024

