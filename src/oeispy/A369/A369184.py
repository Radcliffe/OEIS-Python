# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A369184

from sympy import primeomega
from sympy.utilities.iterables import multiset_permutations
from itertools import combinations_with_replacement, count, islice
def func(n): return sum(1 for p in multiset_permutations(str(n)) if p[0]!='0' and primeomega(int("".join(p)))==3)
def agen(): # generator of terms
    adict, n = dict(), 0
    for d in count(1):
        for f in "123456789":
            for r in combinations_with_replacement("0123456789", d-1):
                k = int(f+"".join(r))
                v = func(k)
                if v not in adict:
                    adict[v] = k
                    while n in adict: yield adict[n]; n += 1
print(list(islice(agen(), 44))) # _Michael S. Branicky_, Jan 15 2024

