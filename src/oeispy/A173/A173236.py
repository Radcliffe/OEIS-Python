# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A173236

from itertools import count, islice
from sympy import isprime, integer_log
def A173236_gen(): # generator of terms
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def g(n):
        def f(x): return n+x-sum(((x-1)//13**i).bit_length() for i in range(integer_log(x-1,13)[0]+1))
        return bisection(f,n+1,n+1)
    return filter(lambda n:isprime(n), map(g,count(1)))
A173236_list = list(islice(A173236_gen(),30)) # _Chai Wah Wu_, Mar 31 2025

