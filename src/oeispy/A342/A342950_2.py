# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A342950

from sympy import integer_log
def A342950(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        c = n+x
        for i in range(integer_log(x,7)[0]+1):
            for j in range(integer_log(m:=x//7**i,3)[0]+1):
                c -= (k:=m//3**j).bit_length()+integer_log(k,5)[0]
        return c
    return bisection(f,n,n) # _Chai Wah Wu_, Sep 17 2024

