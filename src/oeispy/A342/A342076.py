# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A342076

mustpair = set(range(10))
def pairsup(n, offset=0):
  digits = list(map(int, str(n)))[offset:]
  if len(digits) == 0: return True, False
  i = 0
  while i < len(digits) - 1:
    if digits[i] in mustpair:
      if digits[i] != digits[i+1]: return False, None
      else: i += 2
    else: i += 1
  unpaired = digits[-1] in mustpair and i != len(digits)
  return not (unpaired and digits[-1] == 0), unpaired
def aupton(terms, startswith=1):
  alst, unpaired = [startswith], startswith in mustpair
  for n in range(2, terms+1):
    m = 1
    while True:
      while m in alst: m += 1
      if not unpaired or int(str(m)[0]) == alst[-1]%10:
        passes, temp = pairsup(m, offset=int(unpaired))
        if passes: alst.append(m); unpaired = temp; break
      m += 1
  return alst
print(aupton(66)) # _Michael S. Branicky_, Feb 28 2021

