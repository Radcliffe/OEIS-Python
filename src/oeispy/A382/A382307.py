# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A382307

def binary_not(binary_string):
    return ''.join('1' if bit == '0' else '0' for bit in binary_string)
# !pip install gmpy2   # may be necessary
import gmpy2
gmpy2.get_context().precision = 12000000
pi = gmpy2.const_pi()
# Convert Pi to binary representation
binary_pi = gmpy2.digits(pi, 2)[0] # zero-th element is the string of bits
binary_pi = binary_pi[2:] # remove leading "11" left of decimal point
outVec = []
strSearch0 = "" # this substring starts with "0"
for lenRun in range(1,30):
  strSearch0 += "0" if lenRun%2==1 else "1"
  strSearch1 = binary_not(strSearch0)
  l0 = binary_pi.find(strSearch0)+1 # incr origin-0 result
  l1 = binary_pi.find(strSearch1)+1
  outVec.append(min(l0,l1))
print(outVec)

