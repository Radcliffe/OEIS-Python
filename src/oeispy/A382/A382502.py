# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A382502

from itertools import count
def A382502_generator():
    a_list = []
    spacings = {} # spacings[t] is the spacing (k) used by the triple t.
    pairs = {} # pairs[i] is a set of pairs (x,y) such that there exist j and k>0 with a(j)=x, a(j+k)=y, and i=j+2k.
    for n in count():
        for a in count(1):
            ok = True
            spacings_new = {}
            for k in range(1,n//2+1):
                t = a_list[n-2*k],a_list[n-k],a
                if t in spacings and k != spacings[t] or t in spacings_new:
                    ok = False
                    break
                spacings_new[t] = k
            if not ok: continue
            pairs_new = []
            for i,a0 in enumerate(reversed(a_list),n+1):
                p = (a0,a)
                if i <= 2*(n-1) and p in pairs[i]:
                    ok = False
                    break
                pairs_new.append(p)
            if ok: break
        yield a
        a_list.append(a)
        spacings.update(spacings_new)
        if n >= 3: del pairs[n+1]
        for i,p in enumerate(pairs_new[1:],n+2):
            if i <= 2*(n-1): pairs[i].add(p)
            else: pairs[i] = {p} # _Pontus von BrÃ¶mssen_, Apr 01 2025

