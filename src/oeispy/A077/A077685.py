# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A077685

from math import isqrt
from sympy import mobius
def A077685(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def g(x): return int(sum(mobius(k)*(x//k**2) for k in range(1, isqrt(x)+1)))
    def h(x): return 0 if x<9 else h(10**(len(s:=str(x))-1)-1)+(g(x)-g(9*10**(len(s)-1)-1) if s[0]=='9' else 0)
    def f(x): return n+x-h(x)
    return bisection(f,n,n) # _Chai Wah Wu_, May 06 2025

