# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A064219

from math import lcm
from itertools import product
from sympy.ntheory.modular import solve_congruence
def A064219(n):
    if n == 1: return 1
    alist, blist, c, klist = [], [], 1, list(range(n,1,-1))
    while klist:
        k = klist.pop(0)
        if not c%k:
            blist.append(k)
        else:
            c = lcm(c,k)
            alist.append(k)
            for m in klist.copy():
                if not k%m:
                   klist.remove(m)
    for d in product([0,1],repeat=len(alist)):
        x = solve_congruence(*list(zip(d,alist)))
        if x is not None:
            y = x[0]
            if y > 1:
                for b in blist:
                    if y%b > 1:
                        break
                else:
                    if y < c:
                        c = y
    return int(c-1) # _Chai Wah Wu_, Jun 19 2023

