# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A386005

def last_k_digits_tetration(base, height, k):
    mod = 10 ** k
    result = base
    for _ in range(height - 1):
        result = pow(base, result, mod)
    return str(result).zfill(k)
def count_stable_digits(base, k=500):
    try:
        x = last_k_digits_tetration(base, base, k)
        y = last_k_digits_tetration(base, base + 1, k)
        count = 0
        for i in range(1, k + 1):
            if x[-i] == y[-i]:
                count += 1
            else:
                break
        return count
    except:
        return -1
for n in range(2, 101):
    if n % 10 == 0:
        print(f"n = {n}: -1")
    else:
        print(f"n = {n}: {count_stable_digits(n)}")

