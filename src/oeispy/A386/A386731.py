# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A386731

from math import log10
from gmpy2 import is_prime
l2, l3 = log10(2), log10(3)
upto_digits = 200
sum_limit = 2 + int((upto_digits - l3)/l2)
def TP_pi_2_upto_sum(limit): # Search all partitions up to the given exponent sum.
    unsorted_result = [(2, log10(4)), (1, log10(6))]
    for exponent_sum in range(3, limit+1, 2):
        for i in range(1, exponent_sum):
            j = exponent_sum - i
            log_N = i*l2 + j*l3
            if log_N <= upto_digits:
                N = 2**i * 3**j
                if is_prime(N-1) and is_prime(N+1):
                     unsorted_result.append((i+j, log_N))
    sorted_result = sorted(unsorted_result, key=lambda x: x[1])
    return sorted_result
print([s for s, _ in TP_pi_2_upto_sum(sum_limit) ])

