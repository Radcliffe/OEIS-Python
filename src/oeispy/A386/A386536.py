# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A386536

from math import isqrt
from sympy import integer_nthroot, mobius
def A386536(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while f(kmin) < kmin: kmin >>= 1
        kmin = max(kmin,kmax >> 1)
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return int(n+x+sum(mobius(k)*(x//k**2-x//k**3) for k in range(1, integer_nthroot(x,3)[0]+1))+sum(mobius(k)*(x//k**2) for k in range(integer_nthroot(x,3)[0]+1,isqrt(x)+1)))
    return ((m:=bisection(f,n,n))-1&~m).bit_length() # _Chai Wah Wu_, Jul 25 2025

