# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A386499

from math import log10
from gmpy2 import is_prime
l2, l3, l5 = log10(2), log10(3), log10(5)
upto_digits = 100
sum_limit = 3 + int((upto_digits - l3 - l5)/l2)
def TP_pi_3_upto_sum(limit): # Search all partitions up to the given exponent sum.
    unsorted_result = []
    for exponent_sum in range(3, limit+1):
        for i in range(1, exponent_sum -1):
             for j in range(1, exponent_sum - i):
                k = exponent_sum - i - j
                log_N = i*l2 + j*l3 + k*l5
                if log_N <= upto_digits:
                    N = 2**i * 3**j * 5**k
                    if is_prime(N-1) and is_prime(N+1):
                        unsorted_result.append((k, log_N))
    sorted_result = sorted(unsorted_result, key=lambda x: x[1])
    return sorted_result
print([k for k, _ in TP_pi_3_upto_sum(sum_limit) ])

