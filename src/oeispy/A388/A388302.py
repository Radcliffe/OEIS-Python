# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A388302

from math import prod, factorial
from sympy.ntheory import factorint
from sympy.utilities.iterables import multiset_partitions
def a(n):
    prime_factors = [factors for prime in [[i for _ in range(j)] for i, j in factorint(factorial(n)).items()] for factors in prime]
    best_m = float('inf')
    for partition in multiset_partitions(prime_factors):
        factors = sorted([prod(group) for group in partition])
        if len(factors) != len(set(factors)): continue
        test_m = factors[-1] - factors[0]
        if test_m < best_m and len(factors) >= 2: best_m = test_m
    return best_m
print([a(n) for n in range(3, 13)])

