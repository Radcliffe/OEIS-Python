# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A331261

# a program to arrive at Pell-Fermat type Pythagorean triples up to the square of a given number.
from math import isqrt
squareList = [i**2 for i in range(1, 1000)]
subPythagoreanTriple= []
for i in squareList:
    firstSide = 2*i - 1
    secondSide = 2*i + 1
    if isqrt(firstSide) ** 2 == firstSide or isqrt(secondSide) ** 2 == secondSide :
        if i%2 == 1:
            subPythagoreanTriple += [i-1, i]
        else:
            subPythagoreanTriple += [i, i+1]
print(subPythagoreanTriple)

