# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A331889

from itertools import combinations, permutations
from sympy import factorial
def T(n,k): # T(n,k) for A331889
    if k == 1:
        return n*(n+1)//2
    if n == 1:
        return int(factorial(k))
    if k == 2:
        return n*(n+1)*(2*n+1)//3
    nk = n*k
    nktuple = tuple(range(1,nk+1))
    nkset = set(nktuple)
    count = int(factorial(nk))
    for firsttuple in combinations(nktuple,n):
        nexttupleset = nkset-set(firsttuple)
        for s in permutations(sorted(nexttupleset),nk-2*n):
            llist = sorted(nexttupleset-set(s),reverse=True)
            t = list(firsttuple)
            for i in range(0,k-2):
                itn = i*n
                for j in range(n):
                        t[j] *= s[itn+j]
            t.sort()
            v = 0
            for i in range(n):
                v += llist[i]*t[i]
            if v < count:
                count = v
    return count

