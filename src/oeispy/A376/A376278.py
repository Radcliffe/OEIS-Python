# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A376278

from itertools import count, islice
def A376278_gen(): # generator of terms
    def f(x):
        c = 0
        i7 = 1
        m = x
        for i in count(0):
            if i7 > x:
                break
            j5 = 1
            r = m
            for j in count(0):
                 if j5 > m:
                     break
                 k3 = 1
                 t = r
                 for k in count(0):
                     if k3 > r:
                         break
                     c += t.bit_length()
                     k3 *= 3
                     t //= 3
                 j5 *= 5
                 r //= 5
            i7 *= 7
            m //= 7
        return c
    c = 1
    yield 1
    for n in count(2):
        for l in count(0):
            kmin, kmax = n*10**l-1, (n+1)*10**l-1
            mmin, mmax = f(kmin), f(kmax)
            if mmax>mmin:
                while kmax-kmin > 1:
                    kmid = kmax+kmin>>1
                    mmid = f(kmid)
                    if mmid > mmin:
                        kmax, mmax = kmid, mmid
                    else:
                        kmin, mmin = kmid, mmid
                break
        if kmax > c:
            yield n
            c = kmax
A376278_list = list(islice(A376278_gen(),30)) # _Chai Wah Wu_, Sep 20 2024

