# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A262222

from itertools import count,product
# every string of d characters with exactly one 'e' in it, and all the other characters digits 0-9, in ascending lexicographic order
def mids(d):
    if d<1:
        raise Exception("d<1")
    if d==1:
        yield 'e'
        return
    for i in range(0,10):
        for m in mids(d-1):
            yield str(i)+m
    for i in range(10**(d-1)):
        yield 'e'+str(i).zfill(d-1)
def a_generator():
    for d in count(1):
        for start in range(1,10): # for each leading digit 1-9
            for mid in mids(d): # for all possible middles made of d characters, containing exactly one 'e'
                for end in range(10): #for each possible final digit, 0-9
                    s = '{}{}{}'.format(start,''.join(mid),end)
                    i = int(s,16)
                    yield i
a262222 = a_generator()
[next(a262222) for _ in range(48)] # _Christian Perfect_, Oct 20 2015

