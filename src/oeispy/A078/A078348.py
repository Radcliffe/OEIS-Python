# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A078348

from sympy import isprime
from itertools import chain, combinations as C, count, islice
from sympy.utilities.iterables import multiset_permutations as mp
def powerset(s):
    return chain.from_iterable(C(s, r) for r in range(len(s)+1))
def agen():
    sumlst = [[] for i in range(46)]
    for s in powerset(range(1, 10)): sumlst[sum(s)].append(s)
    for numdigits in count(1):
        found = set()
        for t in sumlst[numdigits]:
            diglst = "".join(str(i)*i for i in t)
            for m in mp(diglst, numdigits):
                t = int("".join(m))
                if isprime(t): found.add(t)
        yield from sorted(found)
print(list(islice(agen(), 30))) # _Michael S. Branicky_, Aug 10 2022

