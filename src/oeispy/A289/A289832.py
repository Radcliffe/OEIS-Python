# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A289832

from math import gcd
def countObliques(a,b,c,d,n,k):
    if(gcd(a, b) == 1): #avoid double counting
        boundingBox={'width':(b * c) + (a * d),'height':(a * c) + (b * d)}
        if(boundingBox['width']<n and boundingBox['height']<k):
            return (n - boundingBox['width']) * (k - boundingBox['height'])
    return 0
def totalRectangles(n,k):
    #rectangles parallel to axes: A096948
    ret=(n*(n-1)*k*(k-1))/4
    #oblique rectangles
    ret+=sum(countObliques(a,b,c,d,n,k) for a in range(1,n) \
                                        for b in range(1,n) \
                                        for c in range(1,k) \
                                        for d in range(1,k))
    return ret
Tnk=[[totalRectangles(n+1,k+1) for k in range(1, n+1)] for n in range(1, 20)]
print(Tnk)

