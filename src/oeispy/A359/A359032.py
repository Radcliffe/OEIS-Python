# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A359032

bitToIndex = {}
indexToBit = {}
def addToBoard(board, bit, n):
    (i, j) = bitToIndex[bit]
    for k in range(n - j):
        board |= indexToBit[(k, j)]
    for k in range(n - i):
        board |= indexToBit[(i, k)]
    for k in range(-min(i, j), (n - abs(i - j) + 1) // 2 - min(i, j)):
        board |= indexToBit[(i + k, j + k)]
    for k in range(i + j + 1):
        board |= indexToBit[(k, i + j - k)]
    return board
def r(start, board, n):
    result = 1
    for i in range(start, n * (n + 1) // 2):
        bit = 1 << i
        if board & bit == 0:
            newBoard = addToBoard(board, bit, n)
            result += r(i + 1, newBoard, n)
    return result
# Number of peaceful queens boards in a triangular square grid with size n
def a(n):
    bit = 1
    for j in range(n):
        for k in range(n - j):
            bitToIndex[bit] = (j, k)
            indexToBit[(j, k)] = bit
            bit *= 2
    return r(0, 0, n)
for n in range(21):
    print(a(n))

