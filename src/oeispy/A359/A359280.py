# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A359280

from math import isqrt
from sympy import mobius, integer_nthroot
def A359280(n):
    def squarefreepi(n): return int(sum(mobius(k)*(n//k**2) for k in range(1, isqrt(n)+1)))
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        j = isqrt(x)
        c, l = n+x+3-(y:=x.bit_length())+squarefreepi(j)+sum(squarefreepi(integer_nthroot(x, k)[0]) for k in range(4, y)), 0
        while j>1:
            k2 = integer_nthroot(x//j**2,3)[0]+1
            w = squarefreepi(k2-1)
            c -= j*(w-l)
            l, j = w, isqrt(x//k2**3)
        return c+l
    return bisection(f,n,n) # _Chai Wah Wu_, Feb 09 2025

