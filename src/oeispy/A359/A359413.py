# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A359413

from itertools import permutations
def ps(lst):  # pop-stack sorting operator [cf. Claesson, Guðmundsson]
    out, stack = [], []
    for i in range(len(lst)):
        if len(stack) == 0 or stack[-1] < lst[i]:
            out.extend(stack[::-1])
            stack = []
        stack.append(lst[i])
    return out + stack[::-1]
def psops(t):
    c, lst, srtdlst = 0, list(t), sorted(t)
    if lst == srtdlst: return 0
    while lst != srtdlst:
        lst = ps(lst)
        c += 1
    return c
def T(n,k):
    return sum(1 for p in permutations(range(n), n) if psops(p) == k)
print([T(n,k) for n in range(1, 9) for k in range(n)]) # _Michael S. Branicky_, Nov 09 2021 (adapted from A348905 by _Bjarki Ágúst Guðmundsson_, Dec 30 2022)

