# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A359857

from math import gcd
from sympy import isprime
from itertools import count, islice
def agen():
    i, j, pi, pj, mink, aset = 1, 2, 0, 1, 3, {1, 2}
    yield from [i, j]
    while True:
        if pi^pj:
            k, m = max(mink//(i+j), 1), i+j
            while m*k in aset: k += 1
        elif pi&pj:
            k, m = max(mink//(i*j), 1), i*j
            while m*k in aset: k += 1
        else:
            k, m = mink, 1
            while k in aset or gcd(k, i) != 1 or gcd(k, j) != 1: k += 1
        an = m*k
        i, j, pi, pj = j, an, pj, int(isprime(an)); yield an; aset.add(an)
        while mink in aset: mink += 1
print(list(islice(agen(), 36))) # _Michael S. Branicky_, Jan 16 2023

