# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A365686

from sympy import isprime
from sympy.ntheory.primetest import is_square
from sympy.core.intfunc import isqrt
A002378 = lambda n: n * (n + 1)
A046092 = lambda n: A002378(n) << 1
isA046092 = lambda n: (n & 1 == 0) and is_square((n << 1) + 1)
def isok(k):
    if isprime(k): return False
    if isA046092(k): return True
    k2 = k * k
    for m in range(1, (isqrt(k) >> 1) + 1):
        h, m2, m_2 = k+1, m * m, m << 1
        S = k2 - k * A046092(m)
        while S > 0:
            S -= m2 + (h * m_2)
            h += 1
            if S == 0: return True
print([k for k in range(1, 3256) if isok(k)])

