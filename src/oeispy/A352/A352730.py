# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A352730

n = 2
KM = [(n, 1), (1, n), (-1, n), (-n, 1), (-n, -1), (-1, -n), (1, -n), (n, -1)]
def idx(loc):
    i, j = loc
    return (i + j - 1) * (i + j - 2) // 2 + j
def next_move(loc, visited):
    i, j = loc
    moves = [(i + io, j + jo) for io, jo in KM if i + io > 0 and j + jo > 0]
    available = [m for m in moves if m not in visited]
    return min(available, default=None, key=lambda x: idx(x))
def aseq():
    locs = [[], []]
    loc, s, turn, alst = [(1, 1), (1, 1)], {(1, 1)}, 0, [1]
    m = next_move(loc[turn], s)
    while m != None:
        loc[turn], s, turn, alst = m, s | {m}, 0, alst + [idx(m)]
        locs[turn] += [loc[turn]]
        m = next_move(loc[turn], s)
        if len(s) % 10000 == 0:
            print('{steps} moves in'.format(steps = len(s)))
    return alst
print(aseq())

