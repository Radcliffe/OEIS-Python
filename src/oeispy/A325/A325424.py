# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A325424

from itertools import count
def A325424(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        c = n
        for i in range(x.bit_length()+1):
            i2 = 1<<i
            for j in count(i&1,2):
                k = i2*3**j
                if k>x:
                    break
                m = x//k
                c += (m-1)//6+(m-5)//6+2
        return c
    return bisection(f,n,n) # _Chai Wah Wu_, Jan 28 2025

