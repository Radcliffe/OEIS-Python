# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A338671

import numpy as np
# This sets the number of terms:
nits = 20
# This list will contain the sequence
seq = []
# The indices of the sequence:
for i in range(1,nits + 1):
    # This variable counts the pairs found for each total area i
    count = 0
    # The longest side of either rectangle:
    for a in range(1,i):
        # The other side of the same rectangle:
        for b in np.arange(1,1 + min(a,np.floor(i/a))):
            # Calculate the area of this rectangle and the remaining area:
            area1    = a*b
            rem_area = i - a*b
            # The longer side of the second rectangle:
            for c in np.arange(1,1 + min(a,rem_area)):
                # The shorter side of the second rectangle:
                d = rem_area / c
                # Check that the solution is valid and not double counted:
                if d != int(d) or d > min(a,c) or (a == c and d > b):
                    continue
                # Count the new pair found:
                count += 1
    # Add to the sequence:
    seq.append(count)
for an in seq:
    print(an)

