# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A338407

from sympy.ntheory import legendre_symbol, isprime, sieve
def A338407(N):
    def BBS_primes():
        p = 1
        S = sieve
        while True:
            p += 1
            if p in S:
                if p%4 == 3:
                    a = (p-1)//2
                    b = (a-1)//2
                    if a%2 == 1 and b % 2 == 1:
                        if isprime(a) and isprime(b):
                            yield p
    S = []
    K = {}
    T = []
    ctr = 0
    for s in BBS_primes():
        S.append(s)
        K[s] = legendre_symbol(2,(s-1)//2)
        while len(T) > 0 and T[0] < s*S[0]:
            print(T.pop(0))
            ctr += 1
            if ctr >= N:
                return None
        for t in S[:-1]:
            if K[t] + K[s] != 2:
                T.append(t*s)
        T.sort()

