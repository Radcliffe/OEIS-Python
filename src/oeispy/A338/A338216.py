# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A338216

from sympy import isprime, prime
from itertools import chain, combinations as C
def powerset(s): # skip empty set & singletons
  return chain.from_iterable(C(s, r) for r in range(2, len(s)+1))
def a(n):
  alst, next_set = [prime(i+1) for i in range(1, n)], {prime(n+1)}
  while len(next_set):
    alst.append(min(next_set)); next_set = set()
    for s in powerset(alst[-n:]):
      ss = sum(s)
      if len(next_set):
        if ss > min(next_set): continue
      if ss > alst[-1]:
        if isprime(ss): next_set.add(ss)
  return len(alst) # return alst on a(11) for A338134
for n in range(1, 12):
  print(a(n), end=", ") # _Michael S. Branicky_, Dec 17 2020

