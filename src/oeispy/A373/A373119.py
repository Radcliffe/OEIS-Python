# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A373119

from math import isqrt
def is_square(n):
    return isqrt(n) ** 2 == n
def valid_subset(A):
    length = len(A)
    for i in range(length):
        for j in range(i + 1, length):
            for k in range(j + 1, length):
                for l in range(k + 1, length):
                    if is_square(A[i] * A[j] * A[k] * A[l]):
                        return False
    return True
def largest_subset_size(N):
    from itertools import combinations
    for size in reversed(range(1, N + 1)):
        for subset in combinations(range(1, N + 1), size):
            if valid_subset(subset):
                return size
for N in range(1, 23):
    print(largest_subset_size(N))

