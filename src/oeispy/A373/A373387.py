# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A373387

def v2(n):
    count = 0
    while n % 2 == 0 and n > 0:
        n //= 2
        count += 1
    return count
def v5(n):
    count = 0
    while n % 5 == 0 and n > 0:
        n //= 5
        count += 1
    return count
def V(a):
    mod_20 = a % 20
    mod_10 = a % 10
    if mod_20 == 1:
        return min(v2(a - 1), v5(a - 1))
    elif mod_20 == 11:
        return min(v2(a + 1), v5(a - 1))
    elif mod_10 in {2, 8}:
        return v5(a ** 2 + 1)
    elif mod_20 in {3, 7}:
        return min(v2(a + 1), v5(a ** 2 + 1))
    elif mod_20 in {13, 17}:
        return min(v2(a - 1), v5(a ** 2 + 1))
    elif mod_10 == 4:
        return v5(a + 1)
    elif mod_20 == 5:
        return v2(a - 1)
    elif mod_20 == 15:
        return v2(a + 1)
    elif mod_10 == 6:
        return v5(a - 1)
    elif mod_20 == 9:
        return min(v2(a - 1), v5(a + 1))
    elif mod_20 == 19:
        return min(v2(a + 1), v5(a + 1))
def generate_sequence():
    sequence = []
    for a in range(1026):
        if a == 0 or a == 1:
            sequence.append(0)
        elif a % 10 == 0:
            sequence.append(-1)
        else:
            sequence.append(V(a))
    return sequence
sequence = generate_sequence()
print("a(0), a(1), a(2), ..., a(1025) =", ", ".join(map(str, sequence)))

