# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A273888

from itertools import count, islice
def newdiffs(s, alen, locs, diffs):
    out = set(alen+i-j for i, c in enumerate(s, 1) if c == '0' for j in locs)
    out |= set(i-j for j in range(len(s)-1) for i in range(j+1, len(s)) if '0' == s[i] == s[j])
    return out
def agen(): # generator of terms
    an, locs, diffs, mink, aset, alen = 0, [1], set(), 1, {0}, 1
    while True:
        yield an
        an = next(k for k in count(mink) if k not in aset and ('0' not in (s:=str(k)) or not newdiffs(s, alen, locs, diffs)&diffs))
        stran = str(an)
        if '0' in stran:
            diffs |= newdiffs(stran, alen, locs, diffs)
            locs.extend([alen+i for i, c in enumerate(stran, 1) if c == '0'])
        alen += len(stran)
        aset.add(an)
        while mink in aset: mink += 1
print(list(islice(agen(), 79))) # _Michael S. Branicky_, Oct 01 2025

