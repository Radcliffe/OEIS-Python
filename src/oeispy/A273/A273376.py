# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A273376

from itertools import count, islice
def newdiffs(s, alen, locs1, diffs1):
    out = set(alen+i-j for i, c in enumerate(s, 1) if c == '1' for j in locs1)
    out |= set(i-j for j in range(len(s)-1) for i in range(j+1, len(s)) if '1' == s[i] == s[j])
    return out
def agen(): # generator of terms
    an, locs1, diffs1, mink, aset, alen = 0, [], set(), 1, {0}, 1
    while True:
        yield an
        an = next(k for k in count(mink) if k not in aset and ('1' not in (s:=str(k)) or not newdiffs(s, alen, locs1, diffs1)&diffs1))
        stran = str(an)
        if '1' in stran:
            diffs1 |= newdiffs(stran, alen, locs1, diffs1)
            locs1.extend([alen+i for i, c in enumerate(stran, 1) if c == '1'])
        alen += len(stran)
        aset.add(an)
        while mink in aset: mink += 1
print(list(islice(agen(), 100))) # _Michael S. Branicky_, Oct 01 2025

