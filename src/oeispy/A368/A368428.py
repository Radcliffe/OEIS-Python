# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A368428

from itertools import islice
from functools import reduce
def uniq(r): return reduce(lambda u, e: u if e in u else u+[e], r, [])
def A368427gen(): # generator of terms of A368427
    R = [["1"]]
    while R:
        r = R.pop(0)
        yield from map(lambda b: int(b, 2), r)
        if len(r) > 1: R.append(uniq([r[k]+"0" for k in range(1, len(r))]))
        R.append(uniq([r[0]+"0", r[0]+"1"] + [r[k]+"1" for k in range(1, len(r))]))
def agen(): # generator of terms
    adict, n = dict(), 1
    for i, k in enumerate(A368427gen(), 1):
        if k not in adict:
            adict[k] = i
        while n in adict: yield adict[n]; n += 1
print(list(islice(agen(), 66))) # _Michael S. Branicky_, Dec 24 2023

