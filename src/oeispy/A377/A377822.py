# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A377822

# create a list to hold the first 257 terms
max_root = 16
max_int = max_root**2
squoot = [0] * (max_int + 1)
# populate all the integer square roots, then hunt for approximations for the rest.
for n in range(max_root):
    i = n+1
    s = i**2
    squoot[s] = { "p" : i, "q" : 1, "delta" : 0 }
q = 2
while squoot.count(0) > 0:
    max_p = q * max_int + 1
    for p in range(q + 1, max_p):
        n = (p / q) ** 2
        n_int = round(n)
        if n_int > max_int:
            q += 1
            break
        if squoot[n_int] == 0 and abs(n - n_int) <= 0.25:
            squoot[n_int] = { "p" : p, "q" : q, "delta" : n - n_int }
# Print out the sequence:
print(*[ squoot[n]['q'] for n in range(max_int + 1) ], sep=', ')

