# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A377125

from itertools import count
from sympy import perfect_power
from functools import cache
def cond(s): return bool(s == 1 or perfect_power(s))
@cache
def u(n):
    if n == 1: return 1
    return next(k for k in count(u(n-1)+1) if perfect_power(k))
@cache
def b(n, s):
    assert type(s) == int, (n, s)
    if n == 0: return int(cond(s))
    return b(n-1, s) + b(n-1, s+u(n))
a = lambda n: b(n, 0)
print([a(n) for n in range(1, 41)]) # _Michael S. Branicky_, Oct 18 2024

