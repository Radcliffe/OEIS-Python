# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A261194

def getBitIndex(i, j):
  return (i+j)*(i+j+1)//2 + j
def getBit(mat, i, j):
  return (mat >> getBitIndex(i, j)) & 1
def setBit(mat, i, j):
  return mat | (1 << getBitIndex(i, j))
def noBitLeft(mat, i, j):
  return mat >> getBitIndex(i, j) == 0
def squarematrix(mat):
  result = 0;
  i = 0
  while True:
    if noBitLeft(mat, i, 0):
      return result
    j = 0;
    while True:
      if noBitLeft(mat, 0, j):
        break
      k = 0
      while True:
        if noBitLeft(mat, i, k):
          break
        if getBit(mat, i, k) & getBit(mat, k, j):
          result = setBit(result, i, j)
          break
        k += 1
      j += 1
    i += 1
  return result
index = 0
mat = 0
while True:
  if mat == squarematrix(mat):
    print(index, mat)
    index += 1
  mat += 1

