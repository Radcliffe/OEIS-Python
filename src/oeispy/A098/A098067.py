# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A098067

from itertools import count
def diggen():
    for k in count(1): yield from list(map(int, str(k)))
def aupton(terms):
    g = diggen()
    alst, aset, _, _, nextd = [12], {12}, next(g), next(g), next(g)
    for n in range(2, terms+1):
        an, nextd = nextd, next(g)
        while an in aset or an == n or nextd == 0:
            an, nextd = int(str(an) + str(nextd)), next(g)
        alst.append(an); aset.add(an)
    return alst
print(aupton(72)) # _Michael S. Branicky_, Dec 03 2021

