# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A361444

from sympy import isprime
from itertools import count, islice, product
def pals(): # generator of palindromes
    digits = "0123456789"
    for d in count(1):
        for p in product(digits, repeat=d//2):
            if d > 1 and p[0] == "0": continue
            left = "".join(p); right = left[::-1]
            for mid in [[""], digits][d%2]:
                yield int(left + mid + right)
def agen(): # generator of terms of sequence
    pg, passed = pals(), []
    an = next(p for p in pg if p > 0) # start at 1
    while True:
        yield an
        for p in passed:
            if isprime(an+p):
                passed.remove(p)
                break
        else:
             while not isprime(an + (p:=next(pg))):
                 passed.append(p)
        an = p
print(list(islice(agen(), 57))) # _Michael S. Branicky_, Mar 12 2023

