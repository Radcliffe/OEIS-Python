# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A361340

from itertools import count
from sympy.ntheory import digits
from functools import lru_cache
def fd(d, b): # from_digits
    return sum(di*b**i for i, di in enumerate(d[::-1]))
@lru_cache(maxsize=None)
def f(n, b):
    if n < b: return {n}
    s = digits(n, b)[1:]
    return {e for i in range(1, len(s)) if s[i]!=0 or i==len(s)-1 for e in f(fd(s[:i], b)*fd(s[i:], b), b)}
def a(n, printat=False):
    return next(k for k in count(1) if len(f(k, n))==n)
print([a(n) for n in range(2, 18)]) # _Michael S. Branicky_, Apr 04 2023

