# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A378821

from itertools import count, islice
def c(k, m, a): return sum(1 for i in range(min(k, m)+1, max(k, m)) if i not in a)
def agen(): # generator of terms
    a, d, an, m = set(), set(), 1, 2
    while True:
        yield an
        a.add(an)
        found, k = False, m
        if m < an:
            ck = c(k, an, a)
            for k in range(m, an):
                if k not in a:
                    if ck not in d:
                        found = True
                        break
                    ck -= 1
        if not found:
            kk = max(m, an+1)
            ck = c(kk, an, a)
            for k in count(kk):
                if k not in a:
                    if ck not in d:
                        found = True
                        break
                    ck += 1
        d.add(c(an, k, a))
        an = k
        while m in a: m += 1
print(list(islice(agen(), 66))) # _Michael S. Branicky_, Dec 09 2024

