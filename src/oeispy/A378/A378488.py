# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A378488

from sympy.combinatorics import Permutation
def queens(n, i = 0, cols=0, pos_diags=0, neg_diags=0, sol=None):
    if sol is None: sol = []
    if i == n: yield sol[:]
    else:
        neg_diag_mask_ = 1 << (i+n)
        col_mask = 1
        for j in range(n):
            col_mask <<= 1
            pos_diag_mask = col_mask << i
            neg_diag_mask = neg_diag_mask_ >> (j+1)
            if not (cols & col_mask or pos_diags & pos_diag_mask or neg_diags &
neg_diag_mask):
                sol.append(j)
                yield from queens(n, i + 1,
                                  cols | col_mask,
                                  pos_diags | pos_diag_mask,
                                  neg_diags | neg_diag_mask,
                                  sol)
                sol.pop()
row = lambda n: [Permutation(sol).rank() for sol in queens(n)]  if n >= 4 else [0]

