# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A378726

from math import floor,log
def to_base(number, base): # Converts number to a base
   digits = []
   while number:
      digits.append(number % base)
      number //= base
   return list(digits)
def c(m,k,convert): # Calculates the c function
   try:
      num = to_base(convert,k)[m]
   except:
      num = 0
   return num+1
def F(N,k): # Calculated the F function
   n = floor(log(N*(k-1)+1)/log(k))
   convert = N - int((k**n-1)/(k-1))
   ans = 0
   for m in range(1,n):
      ans += (m*(k**(m+1))-(m+1)*(k**m)+1)*c(m,k,convert)
   return int(ans/((k-1)**2))
seq = []
for i in range(1,3*100+1,3): # Change this number to get more terms in the sequence
   seq.append(F(i+1,3))
print(', '.join(map(str,seq)),end='\n\n')

