# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A350559

from fractions import Fraction
from itertools import count, islice
def rfind(lst, item): # find item in list before last index
    idx = len(lst) - 2
    while lst[idx] != None and lst[idx] != item: idx -= 1
    return idx
def agen(): # generator of terms
    f = [None, Fraction(1, 1), Fraction(0, 1)]
    yield from [1, 0]
    for n in count(2):
        m = rfind(f, f[n])
        if m > 0: fp = Fraction(1, n-m) if f[n] == 1 else f[n] + f[m]*(n-m)
        else: fp = Fraction(1, 1)
        f.append(fp)
        yield fp.numerator
print(list(islice(agen(), 82))) # _Michael S. Branicky_, Jan 16 2022

