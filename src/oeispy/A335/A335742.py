# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A335742

# Pseudoperfect (or semiperfect) numbers having more than one set of contiguous proper divisors whose sum equals n.
import sympy
A335742_list = []
for n in range(1, (10**7)+1):
    # create an ascending list of divisors of n.
    n_divs = list(sympy.divisors(n))
    # pop last divisor, which equals n, so only proper divisors are examined.
    n_divs.pop()
    # reset iterator for sets of contiguous proper divisors whose sum equals n.
    itr = 0
    # run the outer loop for each proper divisor of n.
    for i in range(len(n_divs)+1):
        # run the inner loop for each divisor >= i.
        for j in range(i, len(n_divs)+1):
            # if sum of divisors i:j is greater than n; continue to next n.
            if sum(n_divs[i:j]) > n:
                continue
            # elif sum of divisors i:j equals n; increment itr; if itr > 1; append n to sequence.
            elif sum(n_divs[i:j]) == n:
                itr += 1
                if itr > 1:
                    A335742_list.append(n)

