# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A304178

from itertools import product
def pals(n):
    for p in product("01", repeat=n//2):
        left = "".join(p)
        right = left[::-1]
        if n%2==0: yield left+right
        else:
            yield left+"0"+right
            yield left+"1"+right
def pal_prefix_lengths(s): # skip length 1 since it is in all sets
    return [i for i in range(2, len(s)+1) if s[:i]==(s[:i])[::-1]]
def a(n):
    sets = set()
    for p in pals(n):
        if p[0]=="1": break # skip by symmetry
        sets.add(tuple(pal_prefix_lengths(p)))
    return len(sets)
print([a(n) for n in range(1,41)]) # _Michael S. Branicky_, Dec 05 2020

