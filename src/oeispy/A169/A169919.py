# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A169919

def digits(n): return list(map(int, str(n)))
def arith2(m, n):
    s, t, ans = digits(min(m, n))[::-1], digits(max(m, n))[::-1], 0
    for i, si in enumerate(s):
        u, carry = [0 for _ in range(i)], 0
        for ti in t:
            # below, if first + --> *, we obtain regular arithmetic
            carry, ui = divmod(si+ti + carry, 10)
            u.append(ui)
        if carry:
            u.append(carry)
        ans += int("".join(map(str, u))[::-1])
    return ans
def a(n): return arith2(n, n)
print([a(n) for n in range(53)]) # _Michael S. Branicky_, Jan 03 2022

