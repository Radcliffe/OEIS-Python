# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A326954

from itertools import product
from fractions import Fraction
def walk(steps):
    s = [(0, 0)]
    for dx, dy in steps:
        s.append((s[-1][0] + dx, s[-1][1] + dy))
    return s
moves = [(1, 2), (1, -2), (-1, 2), (-1, -2),
         (2, 1), (2, -1), (-2, 1), (-2, -1)]
A326954 = lambda n: Fraction(
        sum(len(set(walk(steps)))
            for steps in product(moves, repeat=n)),
        8**n
    ).numerator

