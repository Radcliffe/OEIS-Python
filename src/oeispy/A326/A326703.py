# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A326703

from itertools import chain, count, combinations, islice
from sympy.combinatorics.subsets import ksubsets
def subsets(x):
    for i in range(1,len(x)):
        for j in ksubsets(x,i):
            yield(list(j))
def a_gen(): #generator of terms
    yield 0
    for n in count(1):
        t,v,j = [[]],[],0
        for i in chain.from_iterable(combinations(range(1, n+1), r) for r in range(n+1)):
            if n in i:
                t[j].append([list(i)])
        while n:
            t.append([])
            for i in t[j]:
                if len(i[-1]) > 1:
                    for k in list(subsets(i[-1])):
                        t[j+1].append(i.copy()+[k])
            if len(t[j+1]) < 1:
                break
            j += 1
        for j in chain.from_iterable(t):
            v.append(sum(2**(sum(2**(m-1) for m in k)-1) for k in j))
        yield from sorted(v)
A326703_list = list(islice(a_gen(), 55)) # _John Tyler Rascoe_, Jun 07 2024

