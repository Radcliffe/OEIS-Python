# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A282133

def icf(s): # incrementally cubefree
    for l in range(1, len(s)//3 + 1):
        if s[-3*l:-2*l] == s[-2*l:-l] == s[-l:]: return False
    return True
def aupton(nn, verbose=False):
    alst, cfs = [], set("0")
    for n in range(1, nn+1):
        cfsnew = set()
        an = 0
        for c in cfs:
            maximal = True
            for i in "01":
                if icf(c+i):
                    cfsnew.add(c+i)
                    maximal = False
            if maximal: an += 2
        alst, cfs = alst+[an], cfsnew
        if verbose: print(n, an)
    return alst
print(aupton(30)) # _Michael S. Branicky_, Mar 18 2022

