# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A363188

from itertools import count, islice
from sympy import factorint, isprime
def semiprime(n): return sum(e for e in factorint(n).values()) == 2
def nextoddsemiprime(n): return next(k for k in count(n+1+(n&1), 2) if semiprime(k))
def agen(): # generator of terms
    osp = [9, 15, 21, 25]
    while True:
        q, r = divmod(sum(osp), len(osp))
        if r == 0 and isprime(q):
            yield q
        osp = osp[1:] + [nextoddsemiprime(osp[-1])]
print(list(islice(agen(), 53))) # _Michael S. Branicky_, May 21 2023

