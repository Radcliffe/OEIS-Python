# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A096168

# faster, but > memory, version for initial segment of sequence
def anagrams(b1, b2, b3): return sorted(b1) == sorted(b2) == sorted(b3)
def iacf(s): # incrementally abelian cubefree
    for l in range(1, len(s)//3 + 1):
        if anagrams(s[-3*l:-2*l], s[-2*l:-l], s[-l:]): return False
    return True
def aupton(nn, verbose=False):
    alst, acfs = [1], set("0")
    for n in range(1, nn+1):
        an = 3*len(acfs)
        acfsnew = set(c+i for c in acfs for i in "012" if iacf(c+i))
        alst, acfs = alst+[an], acfsnew
        if verbose: print(n, an)
    return alst
print(aupton(14)) # _Michael S. Branicky_, Jul 22 2021

