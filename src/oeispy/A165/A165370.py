# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A165370

# using dynamic programming
def A165370(n):
    # caching numbers,their tenth power (for fast concatenation) and cube sum
    cache = [(None, None, None)] * (n + 1)
    cache[0] = (0, 1, 0)
    cubes = [i**3 for i in range(10)]
    for i in range(1, min(n + 1, 5832)):
        for d in range(1, 10):
            if i - cubes[d] >= 0:
                sub_result, tenthpower, cubesum = cache[i - cubes[d]]
                if sub_result is not None:
                    current = d * tenthpower + sub_result
                    if cache[i][0] is None or current < cache[i][0]:
                        cache[i] = (current, 10 * tenthpower, cubesum + cubes[d])
    if n < 5832:
        return cache[n][0]
    sub_result, _, cubesum = cache[5103 + n % 729]
    nines = (n - cubesum) // 729
    return (sub_result + 1) * (10 ** nines) - 1 # _Ondrej Kutal_, Oct 06 2024

