# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A211031

import numpy as np
def A211031_gen(limit):
    yield 1
    offset = limit + 1
    size = offset * offset + 1
    # a[offset+k] is the number of solutions to i*j = k with i,j in {0, 1, 2, ..., n}
    a = np.zeros(size, dtype=np.int64)
    a[offset] = 1
    for n in range(1, offset):
        a[offset: offset + n*n: n] += 2
        a[offset + n*n] += 1
        lag = 2*n + 1
        c = np.cumsum(a)
        c = c[lag:] - c[:-lag]
        a1 = a[n+1: -n]
        yield int(a1 @ c)
print(list(A211031_gen(35))) # _David Radcliffe_, Aug 15 2025

