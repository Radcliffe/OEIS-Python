# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A344006

from itertools import combinations
from math import prod
from sympy import factorint
from sympy.ntheory.modular import crt
def A344006(n):
    if n == 1:
        return 2
    plist = [p**q for p, q in factorint(n).items()]
    if len(plist) == 1:
        return n-1
    else:
        m = int(min(min(crt([m,n//m],[0,-1])[0],crt([n//m,m],[0,-1])[0]) for m in (prod(d) for l in range(1,len(plist)//2+1) for d in combinations(plist,l))))
        return m*(m+1)//n # _Chai Wah Wu_, Jun 04 2021

