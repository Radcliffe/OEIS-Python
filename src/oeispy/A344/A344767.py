# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A344767

from itertools import combinations
from math import prod
from sympy import factorint, divisors
from sympy.ntheory.modular import crt
from sympy.ntheory import mobius
def A011772(n):
    plist = [p**q for p, q in factorint(2*n).items()]
    return 2*n-1 if len(plist) == 1 else min(min(crt([m,2*n//m],[0,-1])[0],crt([2*n//m,m],[0,-1])[0]) for m in (prod(d) for l in range(1,len(plist)//2+1) for d in combinations(plist,l)))
def A344767(n): return sum(mobius(n//d)*A011772(d) for d in divisors(n,generator=True)) # _Chai Wah Wu_, Jun 20 2021

