# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A345704

from itertools import count, islice
from sympy import divisors
def A345704_gen(startvalue=1): # generator of terms >= startvalue
    m = -20
    for n in count(max(startvalue,1)):
        d = divisors(n)
        s = sum(d)
        if s&1^1 and n<<1<=s:
            d = d[:-1]
            s2, ld = (s>>1)-n, len(d)
            z = [[0 for _ in range(s2+1)] for _ in range(ld+1)]
            for i in range(1, ld+1):
                y = min(d[i-1], s2+1)
                z[i][:y] = z[i-1][:y]
                for j in range(y,s2+1):
                    z[i][j] = max(z[i-1][j],z[i-1][j-y]+y)
                if z[i][s2] == s2:
                    if m == n-12:
                        yield m
                    m = n
                    break
A345704_list = list(islice(A345704_gen(),10)) # _Chai Wah Wu_, Feb 13 2023

