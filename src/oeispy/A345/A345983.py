# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A345983

from itertools import combinations, count, islice
from math import prod
from sympy import factorint
from sympy.ntheory.modular import crt
def A345983_gen(): # generator of terms
    c = 1
    for n in count(2):
        yield c
        plist = tuple(p**q for p, q in factorint(n).items())
        c += n-1 if len(plist) == 1 else int(min(min(crt((m, n//m), (0, -1))[0], crt((n//m, m), (0, -1))[0]) for m in (prod(d) for l in range(1, len(plist)//2+1) for d in combinations(plist, l))))
A345983_list = list(islice(A345983_gen(),25)) # _Chai Wah Wu_, Jun 01 2022

