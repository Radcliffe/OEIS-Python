# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A046807

from math import factorial
from itertools import count, islice, product
def palgen(): # generator of palindromic representations in the factorial base
    yield from [(0,), (1,)]
    for d in count(2):
        pp = []
        for i in range(2, (d+1)//2+1):
            pp.append(range(0, i+1))
        for t in product(*pp):
            right = t
            left = right[:-1][::-1] if d&1 else right[::-1]
            yield (1, ) + right + left + (1, )
def A046807_gen(): # generator of terms
    yield from (sum(dj*factorial(j) for j, dj in enumerate(t[::-1], 1)) for t in palgen())
print(list(islice(A046807_gen(), 51))) # _Michael S. Branicky_, Mar 09 2025

