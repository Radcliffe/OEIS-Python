# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A046304

from math import prod, isqrt
from sympy import primerange, primepi, integer_nthroot
def A046304(n):
    def bisection(f, kmin=0, kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def almostprimepi(n, k):
        if k==0: return int(n>=1)
        def g(x, a, b, c, m): yield from (((d, ) for d in enumerate(primerange(b, isqrt(x//c)+1), a)) if m==2 else (((a2, b2), )+d for a2, b2 in enumerate(primerange(b, integer_nthroot(x//c, m)[0]+1), a) for d in g(x, a2, b2, c*b2, m-1)))
        return int(sum(primepi(n//prod(c[1] for c in a))-a[-1][0] for a in g(n, 0, 1, 1, k)) if k>1 else primepi(n))
    def f(x): return n+1+sum(almostprimepi(x,k) for k in range(1,5))
    return bisection(f,n,n) # _Chai Wah Wu_, Mar 29 2025

