# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A357067

import math
from mpmath import *
# warning: 0.1 and mpf(1/10) are incorrect. Use mpf(1)/mpf(10)
mp.dps=60
def Cn(X):
    l=len(X)
    cn=1
    for i in range(1, int(l/2)+1):
        j=i
        while(X[l-j-1]==X[l-j-1+i]):
            j=j+1
            if j>=l:
                break
        candidate=int(j/i)
        if candidate>cn:
            cn=candidate
    return cn
def epsilon():
    A=[2] # level-2 Gijswijt sequence
    number=1 # number of S strings encountered
    position=0 # position of end of last S
    value=mpf(1) # approximation for epsilon1
    for i in range(1,6000):
        k=Cn(A)
        A.append(max(2,k))
        if k<2:
            value=value+mpf(i-position)/mpf(2**number)
            position=mpf(i)
            number+=1
    return value
print("epsilon_1: ",epsilon())

