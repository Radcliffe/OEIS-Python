# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A370531

from sympy import isprime
from sympy.ntheory import digits
from itertools import combinations, count, product
def fromdigits(d, b): return sum(di*b**i for i, di in enumerate(d[::-1]))
def PEN(base, k):
    if isprime(k): return 0
    d = digits(k, base)[1:]
    for j in range(1, len(d)+1):
        for c in combinations(range(len(d)), j):
            for p in product(*[[i for i in range(base) if i!=d[c[m]]] for m in range(j)]):
                dd = d[:]
                for i in range(j): dd[c[i]] = p[i]
                if isprime(fromdigits(dd, base)): return j
def a(n): return next(k for k in count(n) if PEN(n, k) == 2)
print([a(n) for n in range(2, 32)]) # _Michael S. Branicky_, Feb 21 2024

