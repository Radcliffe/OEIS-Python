# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A093826

from itertools import count, takewhile
def count_overlaps(subs, s):
  c = i = 0
  while i != -1:
    i = s.find(subs, i)
    if i != -1: c += 1; i += 1
  return c
def afind(limit):
  kfact, adict = 1, dict()
  for k in range(1, limit+1):
    kb, kfact = bin(k)[2:], kfact * k
    kfactb = bin(kfact)[2:]
    n = count_overlaps(kb, kfactb)
    if n not in adict: adict[n] = k
  return [adict[n] for n in takewhile(lambda i: i in adict, count(0))]
print(afind(16000))  # _Michael S. Branicky_, May 01 2021

