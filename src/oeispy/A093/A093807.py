# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A093807

from sympy import isprime, nextprime
from itertools import count, islice, product
def pals(d): # all d-digit palindromes with odd middle digit, as strings
    for p in product("0123456789", repeat=d//2):
        if d//2 > 0 and p[0] == "0": continue
        left = "".join(p); right = left[::-1]
        for mid in [[""], "13579"][d%2]: yield left + mid + right
def agen(): # generator of terms
    for d in count(3, 2):
        yield from (int(p) for p in pals(d) if isprime(sum(1 for s in p if s in "2357")) and isprime(sum(map(int, p))))
print(list(islice(agen(), 38))) # _Michael S. Branicky_, Jul 26 2024

