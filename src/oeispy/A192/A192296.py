# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A192296

from itertools import product, combinations
def a(n):
  if n<=1: return 3**n
  range2n, set2n = list(range(2*n)), set(range(2*n))
  allset, ssw = set(), [0 for i in range(2*n)]
  for w in product("012", repeat=n-1):
    w = "0" + "".join(w)
    if w.count("1") > w.count("2"): continue
    for s in combinations(range2n, n):
      nots = sorted(set2n-set(s))
      for i, c in enumerate(w): ssw[s[i]] = ssw[nots[i]] = c
      allset.add("".join(ssw))
  num2g1 = sum(w.count("1") < w.count("2") for w in allset)
  return 3*(len(allset) + num2g1)
print([a(n) for n in range(8)]) # _Michael S. Branicky_, Jan 03 2021

