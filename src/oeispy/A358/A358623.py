# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A358623

# recursion over rows
from functools import cache
@cache
def StirlingSetOrd2(n: int) -> list[int]:
    if n == 0: return [1]
    if n == 1: return [0, 0]
    rov: list[int] = StirlingSetOrd2(n - 2)
    row: list[int] = StirlingSetOrd2(n - 1) + [0]
    for k in range(1, n // 2 + 1):
        row[k] = (n - 1) * rov[k - 1] + k * row[k]
    return row
for n in range(9): print(StirlingSetOrd2(n))
# Alternative, using function BellMatrix from A264428.
def f(k: int) -> int:
    return 1 if k > 0 else 0
print(BellMatrix(f, 9))

