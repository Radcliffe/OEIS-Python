# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A358838

def a(n: int) -> int:
    import itertools
    if n < 0: raise Exception("n must be a nonnegative integer")
    if n == 0: return 0
    if n == 1: return 1
    visited = {0, 1}  # the slabs we have visited so far
    rings = [{0}, {1}]  # the slabs ordered by depth (min length of path from 0)
    for depth in itertools.count(2):
        new_ring = set()
        for slab in rings[depth - 1]:
            label = (slab >> 1) + 1
            for next_slab in {slab - label, slab + label}:
                if not next_slab in visited:
                    if next_slab == n: return depth
                    visited.add(next_slab)
                    new_ring.add(next_slab)
        rings.append(new_ring)

