# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A389533

# see linked programs to generate larger terms
from sympy.ntheory import digits
from itertools import permutations
def to_digits(k, base): return tuple(digits(k, base)[1:])
def from_digits(t, base): return sum(ti*base**i for i, ti in enumerate(t[::-1]))
def ok(t1, t2, base): return base == len(t1+t2) == len(set(t1+t2))
def a(n):
    first = list(range(n//2, n)) if n&1 else list(range(n//2))
    return next((k for f in first[::-1] for p in permutations(sorted(set(range(n))-{f})[::-1], n//2-1) if ok((f,)+p, to_digits(2*(k:=from_digits((f,)+p, n)), n), n)), 0)
print([a(n) for n in range(2, 14)]) # _Michael S. Branicky_, Oct 10 2025

