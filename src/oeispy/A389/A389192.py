# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A389192

from itertools import count, islice
def agen(): # generator of terms
    a, diffs = {0:0}, set(); yield 0
    for n in count(1):
        if n in a:
            an = a[n]
        else:
            an = n
            while True:
                while an-a[n-1] in diffs or an in a:
                    an += 1
                b = {k: a[k] for k in {n-1, n+1, an-1, an+1} if k in a}
                b[n], b[an] = an, n
                newdiffs = [b[k+1]-b[k] for k in b if k+1 in b]
                s = set(newdiffs)
                if len(newdiffs) == len(s) and diffs & s == set():
                    break
                an += 1
            a[n], a[an] = an, n
            diffs |= s
        yield an
print(list(islice(agen(), 68))) # _Michael S. Branicky_, Sep 25 2025

