# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A389925

from gmpy2 import is_prime
from itertools import islice
def agen(): # generator of terms
    an, aset = 1, {1}
    while an != -1:
        yield an
        aset.add(an)
        b = bin(an)[2:]
        D = set(p for i in range(len(b)) if len(t:=b[:i]+b[i+1:]) and is_prime(p:=int(t, 2)))
        if D and (Dcands:=D-aset):
            an = min(D - aset)
            continue
        A = set(p for i in range(len(b)+1) for d in "01" if is_prime(p:=int(b[:i]+d+b[i:], 2)))
        an = min(Acands) if A and (Acands:=A-aset) else -1
    print(f"Last term is a({len(aset)}).")
print(list(islice(agen(), 45))) # _Michael S. Branicky_, Oct 21 2025

