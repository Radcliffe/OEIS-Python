# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A389927

from gmpy2 import is_prime
from functools import cache
def f(n, avoid):
    s = str(n)
    D = set(p for i in range(len(s)) if len(t:=s[:i]+s[i+1:]) and is_prime(p:=int(t)))
    if D and (Dcands:=D-avoid):
        return min(Dcands)
    A = set(p for i in range(len(s)+1) for d in "0123456789" if is_prime(p:=int(s[:i]+d+s[i:])))
    return min(Acands) if A and (Acands:=A-avoid) else 0
@cache
def a(n):
    if n > 1 and not is_prime(n):
        fn = f(n, set())
        return 1 if (fn:=f(n, set())) == 0 else 1 + a(fn)
    an, aset = n, {n}
    while an != 0:
        aset.add(an)
        an = f(an, aset)
    return len(aset)
# _Michael S. Branicky_, Oct 22 2025

