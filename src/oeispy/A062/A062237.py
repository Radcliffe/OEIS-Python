# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A062237

from math import prod
from sympy.utilities.iterables import multiset_permutations as mp
from itertools import count, islice, combinations_with_replacement as mc
def c(s):
    d = list(map(int, s))
    return sorted(s) == sorted(str(sum(d)) + str(prod(d)))
def ok(s):
    d = list(map(int, s))
    return s[0] != '0' and "".join(s) == str(sum(d)) + str(prod(d))
def nd(d): yield from ("".join(m) for m in mc("0123456789", d))
def b(): yield from (s for d in count(1) for s in nd(d) if c(s))
def a(): yield from (int("".join(p)) for s in b() for p in mp(s) if ok(p))
print(list(islice(a(), 16))) # _Michael S. Branicky_, Jun 30 2022

