# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A362261

from math import comb
def F(i,j,k):
    # total number of tilings using i, j, and 2*j+3*k squares of side lengths 3, 2, and 1, respectively
    return comb(i+j+k,i)*comb(j+k,j)*2**j
def F0(i,j,k):
    # number of inequivalent tilings
    x = F(i,j,k)
    if j == 0: x += comb(i+k,i) # horizontal line of symmetry
    if i%2+j%2+k%2 <= 1: x += 2*F(i//2,j//2,k//2) # vertical line of symmetry or rotational symmetry
    return x//4
def A362261(n):
    return max(F0(i,j,n-3*i-2*j) for i in range(n//3+1) for j in range((n-3*i)//2+1))

