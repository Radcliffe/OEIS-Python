# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A321366

from itertools import combinations
from math import prod
from sympy import factorint, divisors
from sympy.ntheory.modular import crt
def A321366(n):
    plist = [p**q for p, q in factorint(2*n).items()]
    if len(plist) == 1:
        return int((2 - plist[0] % 2)*n)
    return 1+int(min(min(crt([m,2*n//m],[0,-1])[0],crt([2*n//m,m],[0,-1])[0]) for m in (prod(d) for l in range(1,len(plist)//2+1) for d in combinations(plist,l)))) # _Chai Wah Wu_, Jun 03 2021

