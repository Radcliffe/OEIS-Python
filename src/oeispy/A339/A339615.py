# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A339615

from functools import lru_cache
def perf_cube(n): return round(n**(1/3))**3 ==n
@lru_cache(maxsize=None)
def b(n, soc, c):
  if n == 0:
    if perf_cube(soc): return 1
    return 0
  return b(n-1, soc, c) + b(n-1, soc+n*n*n, c+1)
a = lambda n: b(n-1, n*n*n, 1)
print([a(n) for n in range(1, 21)]) # _Michael S. Branicky_, Dec 10 2020

