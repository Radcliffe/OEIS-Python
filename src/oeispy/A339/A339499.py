# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A339499

from mpmath import * #high precision computations
                     #nsum function
from sympy import * # to generate prime numbers
mp.dps = 10000
#function that generates constant that encodes all composite numbers
#cnt - number of prime numbers
def composconst(cnt):
    if cnt==1:
        return 4-1
    primlist=list()
    i=0
    while (i<cnt):
        primlist.append(prime(i+1))
        i=i+1
    prims=set(primlist)
    alllist=range(2,primlist[-1]+2) #all numbers [2..prime(cnt)+1]
    alls=set(alllist)
    comps=alls-prims #all composite numbers [4..prime(cnt)+1]
    complist=list(comps)
    cnt2 = len(complist)
    return nsum(lambda k: (complist[int(k)]-1)/nprod(lambda l: complist[int(l)],[0,k-1]),[0,cnt2-1])
composconst(50)

