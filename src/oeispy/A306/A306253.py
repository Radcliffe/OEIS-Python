# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A306253

def gcd(x, y):
    # Euclid's Algorithm
    while(y):
        x, y = y, x % y
    return x
roots = [0]
for n in range(2, 140):
    # find U(n)
    un = [i for i in range(n, 0, -1) if (gcd(i, n) == 1)]
    # for each element in U(n), check if it's a generator
    order = len(un)
    is_cyclic = False
    for cand in un:
        is_gen = True
        run = 1
        # If it cand^x = 1 for some x < order, it's not a generator
        for _ in range(order-1):
            run = (run * cand) % n
            if run == 1:
                is_gen = False
                break
        if is_gen:
            roots.append(cand)
            is_cyclic = True
            break
print("roots:", roots)

