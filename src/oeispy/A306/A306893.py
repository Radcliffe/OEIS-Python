# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A306893

from itertools import combinations
def s(x, y):
    lxy, setxy = len(x) + len(y), set()
    setlxy, sxy = set(range(lxy)), [0 for i in range(lxy)]
    for xinds in combinations(range(lxy), len(x)):
        yinds = sorted(setlxy-set(xinds))
        for i, c in enumerate(x): sxy[xinds[i]] = c
        for i, c in enumerate(y): sxy[yinds[i]] = c
        setxy.add("".join(sxy))
    return setxy
def aupto(n):
    Xnm2, Xnm1, alst = {'0'}, {'01'}, [1, 1]
    while len(alst) < n:
        Xn = set()
        for i, x in enumerate(Xnm2, start=1):
            for y in Xnm1:
                Xn |= s(x, y)
        Xnm2, Xnm1 = Xnm1, Xn
        alst.append(len(Xn))
    return alst[:n]
print(aupto(6)) # _Michael S. Branicky_, Jun 07 2022

