# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A050412

# designed specifically for n = 104917
from labmath import primegen, isprime, mpz, count
from multiprocessing import Pool
primes = list(primegen(1000000))
def test(n):
    for p in primes:
        if (104917 * pow(2, n, p)) % p == 1:
            return (n, False)
    return (n, isprime(104917 * mpz(2)**n - 1, tb=[]))
with Pool(24) as P:
    for (n, result) in P.imap(test, count()):
        print('\b'*80, n, end='', flush=True)
        if result:
            break # _Lucas A. Brown_, Aug 01 2024

