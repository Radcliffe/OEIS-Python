# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A384616

import itertools
import numpy as np
def max_difference_sum(m, n):
    nums = list(range(1, m * n + 1))
    max_sum = 0
    best_matrix = None
    for perm in itertools.permutations(nums):
        matrix = np.array(perm).reshape((m, n))
        diff_sum = np.sum(np.abs(matrix[:,1:]-matrix[:,:-1])) + np.sum(np.abs(matrix[1:,:]-matrix[:-1,:]))
        if diff_sum > max_sum:
            max_sum = diff_sum
            best_matrix = matrix.copy()
    return max_sum, best_matrix
for m in range(1, 10):
    for n in range(1, m+1):
        max_sum, best = max_difference_sum(m, n)
        print(max_sum, end=', ')

