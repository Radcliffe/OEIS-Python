# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A115941

from sympy import isprime
from itertools import product
def pals_to_test(n, odd=True):
  if n <= 2: yield [2, 11][n-1]
  if odd: ruled_out = "024568" # can't be even or multiple of 5
  else: ruled_out = "0"
  midrange = [[""], [str(i) for i in range(10)]]
  for p in product("0123456789", repeat=n//2):
    left = "".join(p)
    if len(left):
      if left[0] in ruled_out: continue
    for middle in midrange[n%2]:
        out = left+middle+left[::-1]
        if odd: yield out
        else:
          for last in "1379": yield out+last
def a(n):
  palsgen = pals_to_test(n, n%2 == 1)
  while True:
    strpal = next(palsgen)
    pal = int(strpal)
    if isprime(pal): return pal
print([a(n) for n in range(1, 18)]) # _Michael S. Branicky_, Feb 11 2021

