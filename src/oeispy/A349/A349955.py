# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A349955

from sympy.ntheory.digits import digits
def hascube(s):
    for l in range(1, len(s)//3 + 1):
      for i in range(len(s) - 3*l + 1):
          if s[i:i+l] == s[i+l:i+2*l] == s[i+2*l:i+3*l]: return True
    return False
def ok(n):
    if n < 7: return True
    b = 2
    d = digits(n, b)[1:]
    while len(d) >= 3:
        if hascube(d):
            return False
        b += 1
        d = digits(n, b)[1:]
    return True
print([k for k in range(331) if ok(k)]) # _Michael S. Branicky_, Mar 27 2022

