# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A291883

from sympy.core.cache import cacheit
from sympy import Poly, Symbol, flatten
z=Symbol('z')
@cacheit
def b(x, y, k): return z**k if x==0 else (b(x - 1, y + 1, max(y + 1, k)) if y<x - 1 else 0) + (b(x - 1, y - 1, k) if y>0 else 0)
@cacheit
def g(x, y, k): return z**k if x==0 else (g(x - 2, y - 1, k) if y>0 else 0) + g(x - 2, y + 1, max(y + 1, k))
def T(n): return 1 if n==0 else [i//2 for i in Poly(b(2*n, 0, 0) + g(2*n, 0, 0)).all_coeffs()[::-1]]
print(flatten(map(T, range(15)))) # _Indranil Ghosh_, Sep 06 2017

