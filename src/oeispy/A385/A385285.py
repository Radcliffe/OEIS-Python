# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A385285

def A385285(n):
    if n==0: return 1
    s = '0'+bin(n)[2:]
    n1 = n>>1
    n2 = n1>>1
    n3 = n2>>1
    np = ~n
    n1111 = (n3&n2&n1&n).bit_count()
    n11 = (n1&n).bit_count()
    n101 = (n2&(~n1)&n).bit_count()
    n100 = (n2&(~n1)&np).bit_count()
    n110 = (n2&n1&np).bit_count()
    n10 = (n1&np).bit_count()
    n1100 = (n3&n2&(~n1)&np).bit_count()
    m11 = s.count('0110')
    m111 = s.endswith('0111')
    c = (n100<<2)+n110+(n10*(n10-1)>>1)
    if n11==0:
        c += n10+(n100<<1)
    elif n11==1:
        c += (n10-n1100<<1)+n110
    else:
        c += n10<<1
    if not (n1111 or n11 or n101):
        c += 1
    elif not (n1111 or n11) and n101:
        c += 3
    elif m111:
        c += 4
    elif not (n1111 or n101 or m11) and n11:
        c += 2
    else:
        c += 4
    return c<<n.bit_count() # _Chai Wah Wu_, Jun 26 2025

