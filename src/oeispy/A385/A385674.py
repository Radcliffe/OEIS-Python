# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A385674

from functools import reduce
ORsum=lambda l: reduce(int.__or__,l,0)
A351995=lambda n,k: ORsum(map(lambda i: (n>>i&1)<<(i*k),range(n.bit_length()))) if k else n.bit_count()
T=lambda n,k: 2*~(~0<<k)*A351995(d:=n//(k+1),k)+((r:=n%(k+1))==k or (d&-d)**k*2*(1+2**r-2**k))
#corollary 1:
T=lambda n,k: T(n-(k+1<<(l:=(d:=n//(k+1)).bit_length()-1)),k)|(~(~0<<k) if d&d-1 or (r:=n%(k+1))==k else 1<<r)<<l*k+1 if n>k else int(n==k)
bit=lambda n,k,i: (i%k==n%(k+1) if n%(k+1)<k and i//k==((d:=n//(k+1))&-d).bit_length()-1 else d>>i//k&1) if i else n%(k+1)==k #returns i-th bit of T(n,k)

