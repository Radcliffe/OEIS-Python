# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A255562

import math
def sieve(n):
    r = int(math.floor(math.sqrt(n)))
    composites = [j for i in range(2,r+1) for j in range(2*i, n, i)]
    primes = set(range(2,n)).difference(set(composites))
    return sorted(primes)
Primes = sieve(1000000)
Odd_primes = Primes[1:]
def find_smallest_odd_div(n):
    for p in Odd_primes:
        if n % p == 0:
            return p
def next_term(a,b):
    for p in Odd_primes:
        if (p + b) % a == 0:
            if find_smallest_odd_div(p+b) == a:
                return p
def compute_reversed_seq(a,b):
    seq = [a,b]
    while seq[-1] != None:
        seq.append(next_term(seq[-2],seq[-1]))
    return seq[:len(seq)-1]
print(compute_reversed_seq(3,5))

