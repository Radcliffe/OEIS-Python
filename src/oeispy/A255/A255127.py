# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A255127

a255127 = lambda n: A255127(A002260(k-1), A004736(k-1))
def A255127(n, k):
    A = A255127; R = A.rows
    while len(R) <= n or len(R[n]) < min(k, A.P[n]): A255127_extend(2*n)
    return R[n][(k-1) % A.P[n]] + (k-1)//A.P[n] * A.S[n]
A=A255127; A.rows=[[1],[2],[3]]; A.P=[1]*3; A.S=[0,2,6]; A.limit=30
def A255127_extend(rMax=9, A=A255127):
    A.limit *= 2; L = [x+5-x%2 for x in range(0, A.limit, 3)]
    for r in range(3, rMax):
        if len(A.P) == r:
            A.P += [ A.P[-1] * (A.rows[-1][0] - 1) ]  # A377469
            A.rows += [[]]; A.S += [ A.S[-1] * L[0] ] # ludic factorials
        if len(R := A.rows[r]) < A.P[r]: # append more terms to this row
            R += L[ L[0]*len(R) : A.S[r] : L[0] ]
        L = [x for i, x in enumerate(L) if i%L[0]] # _M. F. Hasler_, Nov 17 2024

