# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A135603

from itertools import count, islice
def ok3(n):
    if n < 100: return False
    d = list(map(int, str(n)))
    m1, m2 = (d[1]-d[0], d[-1]-d[-2])
    return len({m1, m2}) == 2 and m1*m2 >= 0
def agen():
    seeds = [k for k in range(100, 1000) if ok3(k)]
    for digits in count(4):
        yield from sorted(seeds)
        new, pow10 = set(), 10**(digits-1)
        for q in seeds:
            d = list(map(int, str(q)))
            e1, e2 = d[0] - (d[1]-d[0]), d[-1] + (d[-1]-d[-2])
            if 9 >= e1 > 0: new.add(e1*pow10 + q)
            if 9 >= e2 >= 0: new.add(10*q + e2)
        seeds = new
print(list(islice(agen(), 54))) # _Michael S. Branicky_, Aug 03 2022

