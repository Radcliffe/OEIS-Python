# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A371948

from itertools import count, islice
from sympy import isprime, primefactors, factorint, integer_log
def A371948_gen(startvalue=2): # generator of terms >= startvalue
    for n in count(max(startvalue,2)):
        if not isprime(n+1):
            q = min(primefactors(n+1))
            for m in range(4,q**2):
                f = factorint(m)
                if sum(f.values()) > 1:
                    c = 0
                    for p in sorted(f,reverse=True):
                        a = pow(n,integer_log(p,n)[0]+1,m)
                        for _ in range(f[p]):
                            c = (c*a+p)%m
                    if not c:
                        yield n
                        break
A371948_list = list(islice(A371948_gen(), 30))

