# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A371513

from sympy import divisors
from itertools import count, islice
def f(n, divs): return sum(1 for d in divs if pow(d, n, n) == d%n)
def agen(verbose=False): # generator of terms
    adict, n = dict(), 0
    for k in count(1):
        divs = divisors(k)[1:]
        if len(divs) < n: continue
        v = f(k, divs)
        if v not in adict:
            adict[v] = k
            if verbose: print("FOUND", v, k)
        while n in adict: yield adict[n]; n += 1
print(list(islice(agen(), 15))) # _Michael S. Branicky_, Apr 10 2024, updated Apr 17 2024 after _Jon E. Schoenfield_

