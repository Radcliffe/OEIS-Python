# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A225592

def isTriangular(a):
    sr = 1 << (a.bit_length() >> 1)
    a += a
    while a < sr*(sr+1):  sr>>=1
    b = sr>>1
    while b:
      s = sr+b
      if a >= s*(s+1):  sr = s
      b>>=1
    return (a==sr*(sr+1))
network = [0]*1000
readPos = writePos = 0
def addConnection(R):
  global writePos
  if isTriangular(R):
    for j in range(readPos):
      if network[j]==R:  return
    network[writePos] = R
    writePos += 1
for i in range(1, 1000000):
    readPos, writePos = 0, 1
    network[0] = i*(i+1)//2
    while readPos < writePos:
      T = network[readPos]
      readPos += 1
      n = k = 3
      while k < T:
        addConnection(T*k)
        if T % k == 0 and T//k > k:  addConnection(T//k)
        k += n
        n += 1
    print(readPos, end=', ')

