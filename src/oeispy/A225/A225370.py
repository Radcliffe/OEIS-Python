# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A225370

from itertools import combinations, product
def ok(u, v):
    i = j = 0
    while i < len(u) and j < len(v):
        if u[i] == v[j]:
            i += 1
        j += 1
    return i == len(u)
def f(s):
    n = len(s)
    for l in range(n//2, n//3, -1):
        for I in combinations(range(n), l):
            u = "".join(s[i] for i in I)
            r = "".join(s[_] for _ in range(n) if _ not in I)
            if ok(u, r): return l
    return n//3
def a(n): return min(f("1"+"".join(s)) for s in product("01", repeat=n-1))
print([a(n) for n in range(1, 14)]) # _Michael S. Branicky_, Aug 29 2025

