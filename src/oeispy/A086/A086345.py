# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A086345

from fractions import Fraction
from functools import cache
from itertools import combinations
from math import factorial, gcd, prod
from sympy import divisors
from sympy.functions.combinatorial.numbers import mobius
from sympy.utilities.iterables import partitions
def A086345(n): return sum(mobius(d)*c(n//d) for d in divisors(n,generator=True))//n if n else 1
@cache
def b(n): return sum(Fraction(3**(sum(v1*v2*gcd(t1,t2) for (t1,v1),(t2,v2) in combinations(p.items(),2))+sum((q-1>>1)*r+(q*r*(r-1)>>1) for q,r in p.items())),prod(q**r*factorial(r) for q,r in p.items())) for p in partitions(n))
@cache
def c(n): return n*b(n)-sum(c(k)*b(n-k) for k in range(1,n)) # _Chai Wah Wu_, Jul 15 2024. Updated by _Hunter Hogan_, Oct 02 2025.

