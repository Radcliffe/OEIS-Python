# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A162393

from math import isqrt
from itertools import count, islice
def promics(d): # generator of promic numbers with d digits
    ilb, lb, ub = isqrt(10**(d-1)-1), 10**(d-1), 10**d
    if d == 1: yield 0
    for i in count(ilb):
        p = i*(i+1)
        if p < lb: continue
        elif p >= ub: break
        yield p
def agen(): # generator of sequence terms
    # yield 0  # uncomment if 0 is inserted
    f, g, n, adict = 1, 2, 1, dict()
    for d in count(1):
        P = set("".join(sorted(str(p))) for p in promics(d))
        while f < 10**d:
            if "".join(sorted(str(f))) in P: yield f
            f, g = g, f+g
print(list(islice(agen(), 16))) # _Michael S. Branicky_, Feb 19 2024

