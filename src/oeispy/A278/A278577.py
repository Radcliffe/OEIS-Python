# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A278577

from itertools import count, islice
from sympy import primefactors, divisor_sigma
def A278577_gen(): # generator of terms
    yield 1
    for n in count(2):
        f = primefactors(n)
        if len(f) == 1:
            p, m = f[0], n+1>>1
            yield (q:=n**4)*(p*n-1)//(p-1)-24*((0 if n&1 else (m*(35*m - 52*n) + 18*n**2)*(m*divisor_sigma(m))**2)+sum((i*(i*(i*(70*i - 140*n) + 90*n**2) - 20*n**3) + q)*divisor_sigma(i)*divisor_sigma(n-i) for i in range(1,m)))
A278577_list = list(islice(A278577_gen(),10)) # _Chai Wah Wu_, Nov 11 2022

