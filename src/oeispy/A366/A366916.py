# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A366916

import numpy as np
import sys
def String_generate(n, k, x, final_list):
    if n == 0:
        final_list.append(x[:])
    else:
        for j in range(0, k):
            x.append(j)
            String_generate(n-1, k, x, final_list)
            x.pop()
    return x
def Vi_generate(n, s, v):
    for i in range(0, n):
        for j in range(1, s+1):
            v[i] += v[i-j] if (i-j >= 0) else 0
def find_M(v, s, n):
    m = 1
    for i in range(1, s+1):
        m += v[n-i]
    return m
def func(num, v, m, n, ans):
    sum = 0
    for i in range(0, n):
        sum += v[i]*num[i]
    sum = sum % m
    if sum not in ans:
        ans[sum] = []
    ans[sum].append(num)
def a(n):
    x = []
    final_list = []
    q = 2
    s = 2
    v = np.ones(n)
    ans = {}
    if s < n:
        String_generate(n, q, x, final_list)
        x = final_list
        x = np.array(x)
        Vi_generate(n, s, v)
        m = find_M(v, s, n)
        for i in x:
            func(i, v, m, n, ans)
    else:
        ans[0] = []
    return max(len(v) for v in ans.values())

