# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A334246

from collections import Counter
from functools import reduce
def partitions(n, I=1):
    yield (n,)
    for i in range(I, n//2 + 1):
        for p in partitions(n-i, i):
            yield (i,) + p
def p(i): #ret partitions of i, sorted by part number and product of parts
    return sorted(
        [
            (
                len(p),
                reduce(
                    (lambda x, y: x * y), p)
            )
            for p in partitions(i)
        ]
    )
def a(p_list): #returns number of pairs appearing more than once
    return len([x for x,y in Counter(p_list).most_common() if y > 1])
print(a(p(i))) # Will print the value of a(i)

