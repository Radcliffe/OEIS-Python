# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A372295

from sympy import factorint, isprime
from itertools import count, islice, combinations_with_replacement as mc
def nd(s): return s == "".join(sorted(s))
def bgen(d):
    yield from ("".join(m) for m in mc("9876543210", d) if m[0]!="0")
def agen(): # generator of terms
    for d in count(1):
        out = set()
        for s in bgen(d):
            t = int(s)
            if t < 4 or isprime(t): continue
            f = factorint(t)
            if len(f) < sum(f.values()): continue
            if nd("".join(str(p) for p in f)):
                out.add(t)
        yield from sorted(out)
print(list(islice(agen(), 29))) # _Michael S. Branicky_, Apr 26 2024

