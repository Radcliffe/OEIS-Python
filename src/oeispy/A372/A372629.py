# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A372629

import sympy
def sum_of_digits(n):
    return sum(int(digit) for digit in str(n))
def is_palindrome(n):
    return str(n) == str(n)[::-1]
# Find prime numbers between 1 and 10000 whose sum of digits is a palindrome
prime_palindrome_numbers = []
for num in range(1,10000):
    if sympy.isprime(num):
        digit_sum = sum_of_digits(num)
        if is_palindrome(digit_sum):
            prime_palindrome_numbers.append(num)
print(prime_palindrome_numbers)

