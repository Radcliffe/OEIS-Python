# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A252865

from math import gcd
from sympy import factorint
from itertools import count, islice
def issquarefree(n): return max(factorint(n).values()) == 1
def agen(): # generator of terms
    aset, an2, an1, m = {1, 2, 3}, 2, 3, 4
    yield from sorted(aset)
    while True:
        an = next(k for k in count(m) if k not in aset and gcd(k, an2) > 1 and gcd(k, an1) == 1 and issquarefree(k))
        an2, an1 = an1, an
        while m in aset or not issquarefree(m): m += 1
        aset.add(an)
        yield an
print(list(islice(agen(), 64))) # _Michael S. Branicky_, Jan 10 2025

