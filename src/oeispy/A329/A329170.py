# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A329170

# A list of squares of integers. Currently contains 0 and 1; will be added elements below when calling 'procedure':
squaresList = [0,1]
# We define a function that, given k**2+2, finds if it is a sum of two of the squares stored in the list:
def find_if_sum (a_var):
  for a_squared in range (0, len(squaresList)):
    for b_squared in range (a_squared, len(squaresList)):
      if (a_var == squaresList[a_squared] + squaresList[b_squared]):
        print (str(a_var) + ", " + "a_squared: " + str(squaresList[a_squared]) + " and b_squared: " + str(squaresList[b_squared]), sep = '',)
# We call this function on the base cases.
my_var = 0**2 + 2               # Here we directly compute k**2 + 2 for k = 0
find_if_sum (my_var)            # This is the call to the function
my_var = 1**2 + 2               # Here we directly compute k**2 + 2 for k = 1
find_if_sum (my_var)            # This is the call to the function
def procedure ():
  for k in range (2,1501):      # Check all integers up to 1500, including
    my_var = k**2
    squaresList.append(my_var)
    my_var += 2                 # Add 2 to the square of k
    find_if_sum (my_var)        # This is the call to the function
procedure()                     # Call the procedure

