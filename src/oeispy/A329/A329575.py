# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A329575

from itertools import count
from sympy import integer_log
def A329575(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        c = n+x
        for i in range(integer_log(x,9)[0]+1):
            i2 = 9**i
            for j in count(0,2):
                k = i2<<j
                if k>x:
                    break
                m = x//k
                c -= (m-1)//6+(m-5)//6+2
        return c
    return 3*bisection(f,n,n) # _Chai Wah Wu_, Apr 10 2025

