# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A375727

from sympy.ntheory import digits
from sympy import factorint, isprime
from itertools import count, islice
def sd(n, base=10): return sum(digits(n, base)[1:])
def f(n, factors):
    for b in count(2):
        if sd(n, base=b) != sum(sd(p, base=b)*factors[p] for p in factors):
            break
    return b-1
def agen(): # generator of terms
    adict, n = dict(), 2
    for k in count(1):
        if isprime(k): continue
        v = f(k, factorint(k))
        if v not in adict: adict[v] = k
        while n in adict: yield adict[n]; n += 1
print(list(islice(agen(), 4))) # _Michael S. Branicky_, Aug 25 2024

