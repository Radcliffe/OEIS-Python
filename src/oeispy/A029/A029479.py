# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A029479

def concat_mod(base, k, mod):
  total, offset, digits, n1 = 0, 0, 1, 1
  while n1 <= k:
    n2, p = min(n1*base-1, k), n1*base
    # Compute ((p-1)*n2-1)*p**(n2-n1+1)-(n1-1)*p+n1 divided by (p-1)**2.
    # Since (a//b)%mod == (a%(b*mod))//b, compute the numerator mod (p-1)**2*mod.
    tmp = pow(p,n2-n1+1,(p-1)**2*mod)
    tmp = ((p-1)*n2-1)*tmp-(n1-1)*p+n1
    tmp = (tmp%((p-1)**2*mod))//(p-1)**2
    total += tmp*pow(base,offset,mod)
    offset, digits, n1 = offset+digits*(n2-n1+1), digits+1, p
  return total%mod
for k in range(1,10**10):
  if concat_mod(10, k, k) == 0: print(k) # _Jason Yuen_, Jan 14 2024

