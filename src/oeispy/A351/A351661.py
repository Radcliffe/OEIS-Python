# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A351661

from itertools import product, combinations
def check(M):
    for L in product(*M):
        for i in range(1, len(L)+1):
            for c in set(combinations(L, i)):
                s = sum(c); W.add(s)
                if s == m: return 1
m_max, R = 10**8, [1]
for n in range(1, 10):
    N, W = [], set()
    for m in range(n, 2*n + 1): N.append({m})
    for m in range(2*n + 1, m_max):
        for i in range(len(N)):
            t = max(N[i])*min(N[i])
            while 1 < t <= m:
                if t == m: W.add(t)
                N[i].add(t); t = max(N[i])*min(N[i])
        if m in W or check(N): continue
        R.append(m); break
print(*R, sep = ', ')

