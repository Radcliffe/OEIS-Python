# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A351426

from itertools import count, product
from sympy.utilities.iterables import multiset_permutations
from gmpy2 import digits, mpz
def A351426(n): # assumes n <= 62
    if n == 2:
        return 1
    dlist = tuple(digits(d,n) for d in range(n))
    for l in count(n-2):
        for d in range(1,n):
            c = None
            for t in product(dlist,repeat=l-n+2):
                for u in multiset_permutations(sorted(t+dlist[1:d]+dlist[d+1:])):
                    m = mpz(''.join((dlist[d],)+tuple(u)),n)
                    for b in range(n-1,1,-1):
                        if len(set(digits(m,b))|{'0'}) < b:
                            break
                    else:
                        if c != None:
                            c = min(m,c)
                        else:
                            c = m
            if c != None:
                return int(c) # _Chai Wah Wu_, Mar 14 2022

