# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A381115

from math import gcd
from sympy import isprime
from itertools import count, islice
def agen(): # generator of terms
    alst, aset, an, m = [1], {1}, 1, 2
    for n in count(2):
        if an > 3 and not isprime(an):
            yield an
        an = next(k for k in count(m) if k not in aset and all(gcd(alst[-j], k) == 1 for j in range(1, min(k, n-1)+1)))
        alst.append(an)
        aset.add(an)
        while m in aset: m += 1
print(list(islice(agen(), 64))) # _Michael S. Branicky_, Feb 14 2025

