# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A381612

from itertools import permutations
def count_l1_sums(n):
    nm1     = n-1
    a000982 = (((nm1*nm1)+1)//2) # from OEIS
    tally   = a000982*[0]    # number of different totals
    perms   = permutations([i for i in range(n)]) # length is factorial(n)
    # Compute each permutation's first difference
    for perm in perms:
        l1_norm = 0
        for i in range(nm1):
            diff = perm[i+1]-perm[i]
            if diff>0: l1_norm += diff
            else:      l1_norm -= diff
        tally[l1_norm-nm1] += 1 # diff==(n-1) goes into first position
    return tally

