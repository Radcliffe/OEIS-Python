# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A381978

import math
def divisors(n):
    divs = set()
    for i in range(1, int(math.sqrt(n)) + 1):
        if n % i == 0:
            divs.add(i)
            divs.add(n // i)
    return sorted(divs)
def smallest_l(k):
    for l in range(1, 3*k):
        divs = divisors(l)
        if len(divs) < 3:
            continue
        for i in range(len(divs)):
            for j in range(i+1, len(divs)):
                for m in range(j+1, len(divs)):
                    if divs[i] + divs[j] + divs[m] == k:
                        return l
    return None
results = [smallest_l(k) for k in range(6, 100)]
print(results)

