# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A085927

from sympy import isprime
from itertools import count, product
def f(s): return int("".join(str(abs(9 - 2*int(c))) for c in s))
def pals(base=10): # all (nonzero) palindromes as strings
    digits = "".join(str(i) for i in range(base))
    for d in count(1):
        for p in product(digits, repeat=d//2):
            if d > 1 and p[0] == "0": continue
            left = "".join(p); right = left[::-1]
            for mid in [[""], digits][d%2]:
                t = left + mid + right
                if t != '0': yield t
def aupton(nn): p = pals(); return [f(next(p)) for i in range(nn)]
print(aupton(58)) # _Michael S. Branicky_, Jul 05 2021

