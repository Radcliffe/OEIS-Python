# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A347977

from itertools import count, islice
from sympy import integer_log, isprime
def A347977_gen(): # generator of terms
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        c = x
        for i in range(integer_log(x,7)[0]+1):
            for j in range(integer_log(m:=x//7**i,5)[0]+1):
                for k in range(integer_log(r:=m//5**j,3)[0]+1):
                    c -= (r//3**k).bit_length()
        return c
    yield from filter(isprime,(bisection(lambda k:n+f(k),n,n)-1 for n in count(1)))
A347977_list = list(islice(A347977_gen(),30)) # _Chai Wah Wu_, Mar 31 2025

