# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A337252

from math import isqrt
def ok(n, verbose=True):
    s = str(2**n)
    L, target, hi = len(s), sorted(s), int("".join(sorted(s, reverse=True)))
    if '0' not in s: lo = int("".join(target))
    else:
        lownzd, targetcopy = min(set(s) - {'0'}), target[:]
        targetcopy.remove(lownzd)
        rest = "".join(targetcopy)
        lo = int(lownzd + rest)
    for r in range(isqrt(lo), isqrt(hi)+1):
        rr = r*r
        if sorted(str(rr)) == target:
            brr = bin(rr)[2:]
            if brr != '1' + '0'*(len(brr)-1):
                if verbose: print(f"2^{n}, {r}^2")
                return r
    return 0
print(list(filter(ok, range(2, 73, 2)))) # _Michael S. Branicky_, Aug 10 2021

