# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A348169

from itertools import islice, count
from math import gcd
from sympy import divisors, integer_nthroot
def A348169(): # generator of terms
    for n in count(1):
        for d in divisors(n,generator=False):
            x, x2 = 1, 1
            while 3*x2 <= d:
                y, y2 = x, x2
                z2 = d-x2-y2
                while z2 >= y2:
                    z, w = integer_nthroot(z2,2)
                    if w:
                        A = n//d
                        B, u = divmod(n,x*(y+z)+y*z)
                        if u == 0 and gcd(A,B) == 1:
                            yield n
                            break
                    y += 1
                    y2 += 2*y-1
                    z2 -= 2*y-1
                else:
                    x += 1
                    x2 += 2*x-1
                    continue
                break
            else:
                continue
            break
A348169_list = list(islice(A348169(),57)) # _Chai Wah Wu_, Nov 26 2021

