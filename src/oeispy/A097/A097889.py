# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A097889

import heapq
from sympy import sieve
sieve.extend(10**6)
primes = list(sieve._list)
def prime(n): return primes[n-1]
def aupton(terms, verbose=False):
    p = prime(1)*prime(2); h = [(p, 1, 2)]; nextcount = 3; alst = []
    while len(alst) < terms:
        (v, s, l) = heapq.heappop(h)
        alst.append(v)
        if verbose: print(f"{v}, [= Prod_{{i = {s}..{l}}} prime(i)]")
        if v >= p:
            p *= prime(nextcount)
            heapq.heappush(h, (p, 1, nextcount))
            nextcount += 1
        v //= prime(s); s += 1; l += 1; v *= prime(l)
        heapq.heappush(h, (v, s, l))
    return alst
print(aupton(45)) # _Michael S. Branicky_, Jun 15 2021

