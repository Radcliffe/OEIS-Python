# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A036966

from math import gcd
from sympy import integer_nthroot, factorint
def A036966(n):
    def f(x):
        c = n+x
        for w in range(1,integer_nthroot(x,5)[0]+1):
            if all(d<=1 for d in factorint(w).values()):
                for y in range(1,integer_nthroot(z:=x//w**5,4)[0]+1):
                    if gcd(w,y)==1 and all(d<=1 for d in factorint(y).values()):
                        c -= integer_nthroot(z//y**4,3)[0]
        return c
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    return bisection(f,n,n) # _Chai Wah Wu_, Sep 10 2024

