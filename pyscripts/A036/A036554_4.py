# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A036554

def ok(n):
  c = 0
  while n%2 == 0: n //= 2; c += 1
  return c%2 == 1
print([m for m in range(1, 175) if ok(m)]) # _Michael S. Branicky_, Feb 06 2021
from itertools import count, islice
def A036554_gen(startvalue=1): return filter(lambda n:(~n & n-1).bit_length()&1,count(max(startvalue,1))) # generator of terms >= startvalue
A036554_list = list(islice(A036554_gen(),30)) # _Chai Wah Wu_, Jul 05 2022
 is_A036554 = lambda n: A001511(n)&1==0 # _M. F. Hasler_, Nov 26 2024
def A036554(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        c, s = n+x, bin(x)[2:]
        l = len(s)
        for i in range(l&1,l,2):
            c -= int(s[i])+int('0'+s[:i],2)
        return c
    return bisection(f,n,n) # _Chai Wah Wu_, Jan 29 2025

