# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A002385

from itertools import chain
from sympy import isprime
A002385 = sorted((n for n in chain((int(str(x)+str(x)[::-1]) for x in range(1,10**5)),(int(str(x)+str(x)[-2::-1]) for x in range(1,10**5))) if isprime(n))) # _Chai Wah Wu_, Aug 16 2014
from sympy import isprime
A002385 = [*filter(isprime, (int(str(x) + str(x)[-2::-1]) for x in range(10**5)))]
A002385.insert(4, 11)  # _Yunhan Shi_, Mar 03 2023
from sympy import isprime
from itertools import count, islice, product
def A002385gen(): # generator of palprimes
    yield from [2, 3, 5, 7, 11]
    for d in count(3, 2):
        for last in "1379":
            for p in product("0123456789", repeat=d//2-1):
                left = "".join(p)
                for mid in [[""], "0123456789"][d&1]:
                    t = int(last + left + mid + left[::-1] + last)
                    if isprime(t):
                        yield t
print(list(islice(A002385gen(), 46))) # _Michael S. Branicky_, Apr 13 2025

