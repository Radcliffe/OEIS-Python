# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A029455

def concat_mod(base, k, mod):
  total, digits, n1 = 0, 1, 1
  while n1 <= k:
    n2, p = min(n1*base-1, k), n1*base
    # Compute ((p-1)*n1+1)*p**(n2-n1+1)-(n2+1)*p+n2 divided by (p-1)**2.
    # Since (a//b)%mod == (a%(b*mod))//b, compute the numerator mod (p-1)**2*mod.
    tmp = pow(p, n2-n1+1, (p-1)**2*mod)
    tmp = ((p-1)*n1+1)*tmp-(n2+1)*p+n2
    tmp = (tmp%((p-1)**2*mod))//(p-1)**2
    total = (total*pow(p, n2-n1+1, mod)+tmp)%mod
    digits, n1 = digits+1, p
  return total
for k in range(1, 10**10+1):
  if concat_mod(10, k, k) == 0: print(k) # _Jason Yuen_, Jan 27 2024

