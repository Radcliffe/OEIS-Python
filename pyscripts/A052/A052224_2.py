# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A052224

from sympy.utilities.iterables import multiset_permutations
def auptodigs(maxdigits, b=10, sod=10): # works for any base, sum-of-digits
    alst = [sod] if 0 <= sod < b else []
    nzdigs = [i for i in range(1, b) if i <= sod]
    nzmultiset = []
    for d in range(1, b):
        nzmultiset += [d]*(sod//d)
    for d in range(2, maxdigits + 1):
        fullmultiset = [0]*(d-1-(sod-1)//(b-1)) + nzmultiset
        for firstdig in nzdigs:
            target_sum, restmultiset = sod - int(firstdig), fullmultiset[:]
            restmultiset.remove(firstdig)
            for p in multiset_permutations(restmultiset, d-1):
              if sum(p) == target_sum:
                  alst.append(int("".join(map(str, [firstdig]+p)), b))
                  if p[0] == target_sum:
                      break
    return alst
print(auptodigs(4)) # _Michael S. Branicky_, Sep 14 2021
def A052224(N = 19):
    """Return a generator of the sequence of all integers >= N with the same
    digit sum as N."""
    while True:
        yield N
        N = A228915(N) # skip to next larger integer with the same digit sum
a = A052224(); [next(a) for _ in range(50)] # _M. F. Hasler_, Mar 16 2022

