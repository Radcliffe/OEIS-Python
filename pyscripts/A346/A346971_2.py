# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A346971

from sympy import divisors
from itertools import count
def cond(a, b, c, n):
    return set(divisors(a)+divisors(b)+divisors(c)) >= set(range(1, n+1))
def a(n):
    if n == 1: return 1
    for c in count(1):
        for a in range(1, c//2+1):
            if cond(a, c-a, c, n): return c
print([a(n) for n in range(1, 17)]) # _Michael S. Branicky_, Aug 13 2021
def A346971(n):
    c, nlist = 1, list(range(1,n+1))
    while True:
        mlist = [m for m in nlist if c % m]
        if len(mlist) == 0: return c
        p = max(mlist)
        for a in range(p,c,p):
            for m in mlist:
                if a % m and (c-a) % m:
                    break
            else:
                return c
        c += 1 # _Chai Wah Wu_, Oct 13 2021

