# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A352329

from itertools import permutations
def pmap(s, m): return sum(s[i-1]*10**(m-i) for i in range(1, len(s)+1))
def agen():
  m = 1
  while True:
    for s in permutations(range(1, m+1)): yield pmap(s, m)
    m += 1
def aupton(terms):
  alst, g = [], agen()
  while len(alst) < terms: alst += [next(g)]
  return alst
def is_perfect_square(n):
        return round(n ** 0.5) ** 2 == n
print([x for x in aupton(5000000) if is_perfect_square(x)])

