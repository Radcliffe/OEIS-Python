# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A352687

# The recursion with cache is (much) faster:
from functools import cache
@cache
def T_row(n):
    if n < 3: return ([1], [0, 1], [0, 1, 1])[n]
    A = T_row(n - 2) + [0, 0]
    B = T_row(n - 1) + [1]
    for k in range(n - 1, 1, -1):
        B[k] = (((B[k] + B[k - 1]) * (2 * n - 3)
               - (A[k] - 2 * A[k - 1] + A[k - 2]) * (n - 3)) // n)
    return B
for n in range(10): print(T_row(n))

