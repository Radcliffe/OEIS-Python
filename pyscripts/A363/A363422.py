# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A363422

# Find numbers with a de-concatenation that multiplies to their reverse.
import math
def digits(x):
    y = []
    while x>0:
        y = [x%10] + y
        x//=10
    return y
def check(x):
    xx = digits(x)
    if xx[0] < xx[-1]:
        return
    for i in range(1,2**(len(xx)-1)):
        for dnum,digit in enumerate(xx):
            if dnum==0:
                thisProd = [xx[0]]
            elif i&(2**(dnum-1)):
                if digit==0:
                    break
                thisProd += [digit]
            else:
                thisProd[-1] = thisProd[-1]*10+digit
        answer = math.prod(thisProd)
        if not answer%10==xx[0]:
            continue
        if digits(answer)[-1::-1]==xx:
            print('\r'+str(thisProd).replace(', ','x')[1:-1])
            return
    return
i=0
while True:
    i += 1
    if not i%10000:
        print('\r'+str(i),end='')
    check(i)

