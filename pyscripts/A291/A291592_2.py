# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A291592

from sympy.ntheory import count_digits
def ok(n, b): return False if n <= b**2 else len(count_digits(n, b)) == 1
def a(n): return sum(ok(2**n-1, b) for b in range(2, 2**n))
print([a(n) for n in range(1, 21)]) # _Michael S. Branicky_, May 27 2021
 # Faster version suitable for extension
def is_repdigit(n, b):
  if n < b: return True
  n, r = divmod(n, b)
  onlyd = r
  while n > b:
    n, r = divmod(n, b)
    if r != onlyd: return False
  return n == onlyd
def a(n):
  c, target = 0, 2**n - 1
  for b in range(2, 2**n):
    if target < b**2: break # not 3 digits
    c += is_repdigit(target, b)
  return c
print([a(n) for n in range(1, 41)]) # _Michael S. Branicky_, May 27 2021

