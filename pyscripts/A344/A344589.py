# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A344589

from itertools import combinations
from functools import reduce
from operator import mul
from sympy import factorint, divisors
from sympy.ntheory.modular import crt
def A011772(n):
    plist = [p**q for p, q in factorint(2*n).items()]
    if len(plist) == 1:
        return n-1 if plist[0] % 2 else 2*n-1
    return min(min(crt([m,2*n//m],[0,-1])[0],crt([2*n//m,m],[0,-1])[0]) for m in (reduce(mul, d) for l in range(1,len(plist)//2+1) for d in combinations(plist,l)))
def A344589(n):
    m = A011772(n)
    return sum(1 for d in divisors(n) if A011772(d) < m) # _Chai Wah Wu_, Jun 02 2021

