# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A351987

def facbase(n, i=2): return [n] if n < i else [*facbase(n//i, i=i+1), n%i]
def ok(n): return (fb:=facbase(n)) == sorted(fb, reverse=True)
print([k for k in range(151) if ok(k)]) # _Michael S. Branicky_, Mar 09 2025
 # faster for initial segment of sequence
from math import factorial
from itertools import count, islice, product
def bgen(d, first, last): # generator of non-increasing factorial base tuples
    yield from ((i,) + t for i in range(first, last+1) for t in bgen(d-1, first=0, last=min(i, d-1))) if d else (tuple(),)
def A351987_gen(): # generator of terms
    yield from (sum(dj*factorial(j) for j, dj in enumerate(t[::-1], 1)) for d in count(0) for t in bgen(d, 1, d))
print(list(islice(A351987_gen(), 63))) # _Michael S. Branicky_, Mar 09 2025

