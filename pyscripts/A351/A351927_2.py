# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A351927

from sympy.ntheory.digits import digits
def a(n, startk=1):
    k = max(startk, len(bin(3**(n-1))[2:]))
    pow2 = 2**k
    while 0 in digits(pow2, 3)[-n:]:
        k += 1
        pow2 *= 2
    return k
an = 0
for n in range(1, 32):
    an = a(n, an)
    print(an, end=", ") # _Michael S. Branicky_, Mar 10 2022
from itertools import count
def A351927(n):
    kmax, m = 3**n, (3**(n-1)).bit_length()
    k2 = pow(2,m,kmax)
    for k in count(m):
        a = k2
        if 3*a >= kmax:
            while a > 0:
                a, b = divmod(a,3)
                if b == 0:
                    break
            else:
                return k
        k2 = 2*k2 % kmax # _Chai Wah Wu_, Mar 19 2022

