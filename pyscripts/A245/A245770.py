# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A245770

def arccot(x, unity):
    sum = xpower = unity // x
    n = 3
    sign = -1
    while 1:
        xpower = xpower // (x*x)
        term = xpower // n
        if not term:
            break
        sum += sign * term
        sign = -sign
        n += 2
    return sum
def pi(digits):
    unity = 10**(digits + 10)
    pi = 4 * (4*arccot(5, unity) - arccot(239, unity))
    return pi // 10**10
def primes(n):
    """ Returns  a list of primes < n """
    sieve = [True] * n
    for i in range(3,int(n**0.5)+1,2):
        if sieve[i]:
            sieve[i*i::2*i]=[False]*((n-i*i-1)/(2*i)+1)
    return [2] + [i for i in range(3,n,2) if sieve[i]]
a = pi(370)
b = primes(100000000)
y = str(a)
for x in b:
    if str(x) in y:
        y = y.replace(str(x)," ",1)#replace first occurrence only
........
while "  " in y:
    y = y.replace("  "," ")#replace long chains of spaces with a single space
z = y.split(" ")#split terms into a list
z = filter(None, z)#remove null terms
f = map(int,z)#convert to integers
print(f[0:-1])
# _David Consiglio, Jr._, Jan 03 2015

