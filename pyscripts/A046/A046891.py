# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A046891

from sympy import prime
from gmpy2 import is_prime
from sympy.utilities.iterables import multiset_permutations as mp
from itertools import count, islice, combinations_with_replacement as mc
def f(n): return sum(1 for p in mp(str(n)) if is_prime(t:=int("".join(p))))
def bgen(d):
    for f in "123456789":
        yield from map(int, (f+"".join(m) for m in mc("0123456789", d-1)))
def agen():
    record = -1
    for d in count(1):
        for k in bgen(d):
            v = f(k)
            if v > record:
                record = v
                yield k
print(list(islice(agen(), 30))) # _Michael S. Branicky_, Feb 17 2024

