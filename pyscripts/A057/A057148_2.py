# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A057148

from itertools import count, islice, product
def agen(): # generator of terms
    yield from [0, 1]
    for d in count(2):
        for rest in product("01", repeat=d//2-1):
            left = "1" + "".join(rest)
            for mid in [[""], ["0", "1"]][d%2]:
                yield int(left + mid + left[::-1])
print(list(islice(agen(), 32))) # _Michael S. Branicky_, Mar 29 2022
def A057148(n):
    if n == 1: return 0
    a = 1<<n.bit_length()-2
    s = bin(a|(n&a-1))[2:]
    return int(s+(s[::-1] if a&n else s[-2::-1])) # _Chai Wah Wu_, Jun 10 2024

