# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A006995

from itertools import count, islice, product
def bin_pals(): # generator of binary palindromes in base 10
    yield from [0, 1]
    digits, midrange = 2, [[""], ["0", "1"]]
    for digits in count(2):
        for p in product("01", repeat=digits//2-1):
            left = "1"+"".join(p)
            for middle in midrange[digits%2]:
                yield int(left + middle + left[::-1], 2)
print(list(islice(bin_pals(), 58))) # _Michael S. Branicky_, Jan 09 2023
def A006995(n):
    if n == 1: return 0
    a = 1<<(l:=n.bit_length()-2)
    m = a|(n&a-1)
    return (m<<l+1)+int(bin(m)[-1:1:-1]or'0',2) if a&n else (m<<l)+int(bin(m)[-2:1:-1]or'0',2) # _Chai Wah Wu_, Jun 10 2024

