# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A006509

from sympy import primerange, prime
def aupton(terms):
  alst = [1]
  for n, pn in enumerate(primerange(1, prime(terms)+1), start=1):
    x, y = alst[-1] - pn, alst[-1] + pn
    if x > 0 and x not in alst: alst.append(x)
    elif y > 0 and y not in alst: alst.append(y)
    else: alst.append(0)
  return alst
print(aupton(130)) # _Michael S. Branicky_, May 30 2021
from sympy import nextprime
from itertools import islice
def agen(): # generator of terms
    pn, an, aset = 2, 1, {1}
    while True:
        yield an
        an = m if (m:=an-pn) > 0 and m not in aset else p if (p:=an+pn) not in aset else 0
        aset.add(an)
        pn = nextprime(pn)
print(list(islice(agen(), 131))) # _Michael S. Branicky_, Mar 07 2024

