# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A106195

from sympy import Poly, symbols
x = symbols('x')
def u(n, x): return 1 if n==1 else u(n - 1, x) + v(n - 1, x)
def v(n, x): return 1 if n==1 else u(n - 1, x) + (x + 1)*v(n - 1, x)
def a(n): return Poly(v(n, x), x).all_coeffs()[::-1]
for n in range(1, 13): print(a(n)) # _Indranil Ghosh_, May 28 2017
from mpmath import hyp2f1, nprint
def T(n, k): return hyp2f1(k - n, k + 1, 1, -1)
for n in range(13): nprint([int(T(n, k)) for k in range(n + 1)]) # _Indranil Ghosh_, May 28 2017, after formula from _Peter Luschny_

