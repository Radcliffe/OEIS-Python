# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A377351

from fractions import Fraction
from itertools import count, islice
def agen(): # generator of terms
    alst, means_seen = [1], {1}
    while True:
        yield alst[-1]
        for k in count(1):
            if k in means_seen: continue
            mk, failed, sk = {k}, False, k
            for j in range(1, len(alst)+1):
                sk += alst[-j]
                m = Fraction(sk, j+1)
                if m in means_seen or m in mk: failed = True; break
                mk.add(m)
            if not failed: break
        means_seen |= mk
        alst.append(k)
print(list(islice(agen(), 60))) # _Michael S. Branicky_, Oct 26 2024, Oct 28 2024

