# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A375380

from itertools import count, islice, combinations
def f(k, last10):
    d = list(map(int, str(k)))
    if len(d) >= 10: return d[-10:]
    else: return last10[len(d):] + d
def c(k, last10):
    for pick9 in combinations(f(k, last10), 9):
        if sum(pick9) in {0, 1, 4, 9, 16, 25, 36, 49, 64, 81}:
            return True
    return False
def agen(): # generator of terms
    an, seen, last10, mink = 1000000000, set(), [], 0
    while True:
        yield an
        seen.add(an)
        last10 = f(an, last10)
        an = next(k for k in count(mink) if k not in seen and c(k, last10))
        while mink in seen: mink += 1
print(list(islice(agen(), 66))) # _Michael S. Branicky_, Aug 14 2024

