# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A375925

def square_number(z): return int(4*y**2-y-x if (y := z.imag) >= abs(x := z.real)
    else 4*x**2-x-y if -x>=abs(y) else (4*y-3)*y+x if -y>=abs(x) else (4*x-3)*x+y)
def A375925(n):
    if not hasattr(A:=A375925, 'terms'): A.terms=[1]; A.pos=0
    while len(A.terms) < n:
        s,d = min((s,d) for d in (1, 1+1j, 1j, 1j-1, -1, -1-1j, -1j, 1-1j) if
            abs((s:=1+square_number(A.pos+d))-A.terms[-1]) > 2 and s not in A.terms)
        A.terms.append(s); A.pos += d
    return A.terms[n-1] # _M. F. Hasler_, May 07 2025

