# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A375089

from functools import lru_cache
from math import gcd, lcm
from sympy import factorint, divisors, fibonacci
def A375089(n):
    @lru_cache(maxsize=None)
    def A001175(n):
        if n == 1:
            return 1
        f = factorint(n).items()
        if len(f) > 1:
            return lcm(*(A001175(a**b) for a,b in f))
        else:
            k,x = 1, (1,1)
            while x != (0,1):
                k += 1
                x = (x[1], (x[0]+x[1]) % n)
            return k
    a, b = fibonacci((m:=n<<1)+1), fibonacci(m)
    return sum(1 for d in divisors(gcd(a-1,b),generator=True) if A001175(d)==m) # _Chai Wah Wu_, Aug 28 2024

