# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A375614

from sympy import isprime
from itertools import islice
def ip(s, t): return int("".join(x+v for x, v in zip(s, t))+s[-1])
def agen(): # generator of terms
    seen, an, found = set(), 0, True
    while found:
        yield an
        seen.add(an)
        s = str(an)
        d, found = len(s), False
        if s[-1] in "1379" and d > 1:
            for k in range(10**(d-2), 10**(d-1)):
                if k not in seen and isprime(ip(s, str(k))):
                    an, found = k, True
                    break
        if not found:
            for k in range(10**d, 10**(d+1)):
                if k not in seen and isprime(ip(str(k), s)):
                    an, found = k, True
                    break
print(list(islice(agen(), 90))) # _Michael S. Branicky_, Aug 22 2024

