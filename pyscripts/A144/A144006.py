# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A144006

#This is only correct if the observation in the comment from 2024/08/20 is true.
def T(n,k):
    if 0 <= n <= 1:
        return 1 if k == 0 else 0
    c = {(-1,):1} #Polynomial in infinitely many variables (function iterates)
    for _ in range(n-1):
        cnext = {}
        for key, value in c.items():
            key += (0,)
            for i, ni in enumerate(key):
                term = tuple(nj-2 if j==i else nj-1 if j<=i+1 else nj
                             for j,nj in enumerate(key))
                cnext[term] = cnext.get(term,0) + value*ni
                if cnext[term] == 0:
                    del cnext[term]
        c = cnext
    pairs = {} #Reduction to single variable (evaluation at fixpoint)
    for key, value in c.items():
        s = -sum(key)
        pairs[s] = pairs.get(s,0) + value
    _, row = zip(*sorted(pairs.items())) #Coefficients
    if 0 <= k-n+1 < len(row): #Correcting number of leading 0s
        return (-1)**(n+k+1)*abs(row[k-n+1]) #Correcting signs
    else:
        return 0
# _Lucas Larsen_, Aug 22 2024

