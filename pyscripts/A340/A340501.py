# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A340501

from sympy import integer_nthroot
def digits(n, b):
  out = []
  while n >= b: n, r = divmod(n, b); out.append(r)
  return [n] + out[::-1]
def a(n):
  b, b2b = n, n**n
  r, a = integer_nthroot(b**(b-1), 2); s = r**2
  while s < b**(b-1): s += 2*r + 1; r += 1
  while s < b2b:
    if len(set(digits(s, b))) == n: return s
    s += 2*r + 1; r += 1
  return -1
print([a(n) for n in range(2, 13)]) # _Michael S. Branicky_, Jan 13 2021

