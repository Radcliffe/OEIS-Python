# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A340311

from functools import lru_cache
from itertools import product
def ispal(w): return w == w[::-1]
@lru_cache(maxsize=None)
def pal_len(w):
  if len(w) <= 1: return len(w)
  return min(1+pal_len(w[i:]) for i in range(len(w), 0, -1) if ispal(w[:i]))
def plp(w): # palindrome length profile
  return tuple(pal_len(w[:i]) for i in range(1, len(w) + 1))
def a(n):   # only search strings starting with 0 by symmetry
  return len(set(plp("0"+"".join(u)) for u in product("01", repeat=n-1)))
print([a(n) for n in range(1, 18)])  # _Michael S. Branicky_, Jan 04 2021

