# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A374191

from sympy import primefactors
from itertools import permutations
def test(a: int, b: int, p: int) -> bool:
    return (a % p == 0) == (b % p == 0)
def isSolution(S: tuple[int,...]) -> bool:
    if len(S) == 1: return True
    if not all(test(S[-2], S[-1], p)
           for p in primefactors(S[-1])):
        return False
    return all(not any(test(S[i-1], S[i+1], p)
           for p in primefactors(S[i]))
           for i in range(1, len(S) - 1))
def Trow(r: int) -> tuple[int,...] | None:
    C = list(range(r + 1))
    for P in permutations(C):
        if isSolution(P): return P
for n in range(9): print(Trow(n))

