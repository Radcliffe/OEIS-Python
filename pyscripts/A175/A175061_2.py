# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A175061

from itertools import groupby
def ok(n):
  runlengths = [len(list(g)) for k, g in groupby(bin(n)[2:])]
  return sorted(runlengths) == list(range(1, len(runlengths)+1))
print([n for n in range(1, 17952) if ok(n)]) # _Michael S. Branicky_, Jan 04 2021
 # alternate that directly generates terms
from itertools import permutations
def runlength(r): # all terms with runlengths a permutation of 1, ..., r
  c = ['1', '0']
  return sorted([int("".join([c[j%2]*p[j] for j in range(r)]), 2)
    for p in permutations(range(1, r+1))])
def aupto(nn):
  r, out = 1, []
  while len(out) < nn:
    out += runlength(r)
    r += 1
  return out[:nn]
print(aupto(47)) # _Michael S. Branicky_, Jan 04 2021

