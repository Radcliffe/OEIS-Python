# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A131323

from itertools import count, islice
def A131323_gen(startvalue=3): # generator of terms >= startvalue
    return map(lambda n:(n<<1)+1,filter(lambda n:(~(n+1)&n).bit_length()&1,count(max(startvalue>>1,1))))
A131323_list = list(islice(A131323_gen(),30)) # _Chai Wah Wu_, Sep 11 2024
def A131323(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        c, s = n+x, bin(x+1)[2:]
        l = len(s)
        for i in range(l&1,l,2):
            c -= int(s[i])+int('0'+s[:i],2)
        return c
    return bisection(f,n,n)<<1|1 # _Chai Wah Wu_, Jan 29 2025

