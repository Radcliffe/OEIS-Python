# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A174980

 # Generating the partitions.
def SDBinaryPartition(n):
    def Double(W, T):
        B = []
        for L in W:
            A = [a*2 for a in L]
            if T > 0: A += [1]*T
            B.append(A)
        return B
    if n == 2: return [[2]]
    if n <  4: return []
    h = n // 2
    H = SDBinaryPartition(h)
    B = Double(H, n % 2)
    if n % 2 == 0:
        H = SDBinaryPartition(h - 1)
        if H != []: B += Double(H, 2)
        if (n & (n - 1)) == 0: B.append([2]*h)
    return B
for n in range(25): print([n], SDBinaryPartition(n)) # _Peter Luschny_, Sep 02 2019

