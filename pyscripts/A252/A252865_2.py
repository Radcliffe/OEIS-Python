# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A252865

from math import gcd
from sympy import factorint
A252865_list, l1, l2, s, b = [1,2,3], 3, 2, 4, set()
for _ in range(10**2):
    i = s
    while True:
        if max(factorint(i).values()) == 1:
            if not i in b and gcd(i,l1) == 1 and gcd(i,l2) > 1:
                A252865_list.append(i)
                l2, l1 = l1, i
                b.add(i)
                while s in b:
                    b.remove(s)
                    s += 1
                break
        else:
            b.add(i)
        i += 1 # _Chai Wah Wu_, Dec 24 2014
from math import gcd
from sympy import factorint
from itertools import count, islice
def issquarefree(n): return max(factorint(n).values()) == 1
def agen(): # generator of terms
    aset, an2, an1, m = {1, 2, 3}, 2, 3, 4
    yield from sorted(aset)
    while True:
        an = next(k for k in count(m) if k not in aset and gcd(k, an2) > 1 and gcd(k, an1) == 1 and issquarefree(k))
        an2, an1 = an1, an
        while m in aset or not issquarefree(m): m += 1
        aset.add(an)
        yield an
print(list(islice(agen(), 64))) # _Michael S. Branicky_, Jan 10 2025

