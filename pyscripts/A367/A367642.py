# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A367642

from sympy import mobius, integer_nthroot, perfect_power
def A367642(n):
    if n == 1: return 2
    def f(x): return int(1-sum(mobius(k)*(integer_nthroot(x,k)[0]-1) for k in range(2,x.bit_length())))
    m = (f(n)<<1)-bool(perfect_power(n))
    def g(x): return m+x-f(x)
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    return bisection(g,m,m)+1 # _Chai Wah Wu_, Sep 09 2024

