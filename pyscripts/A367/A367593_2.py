# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A367593

def digit_reversal(n):
    return int(str(n)[::-1])
def find_integers():
    result = []
    for k in range(0, 10**10):
        reversed_k = digit_reversal(k)
        if (reversed_k - 1) % (k + 1) == 0:
            result.append(k)
    return result
integers_list = find_integers()
print(integers_list)
from itertools import product, count, islice
def A367593_gen(): # generator of terms
    yield from (0,1,10)
    for l in count(1):
        m = 10**(l+1)
        for d in product('0123456789',repeat=l):
            for a, b, c in ((1, 0, 0), (1, 1, 0), (1, 4, 2), (1, 5, 5), (1, 7, 5)):
                k = a*m+int(s:=''.join(d))*10+b
                r = b*m+int(s[::-1])*10+a
                if c*(k+1)==r-1:
                    yield k
            a,b = 1,9
            k = a*m+int(s:=''.join(d))*10+b
            r = b*m+int(s[::-1])*10+a
            if not (r-1)%(k+1):
                yield k
        a,b,c=2,6,3
        for d in product('0123456789',repeat=l):
            k = a*m+int(s:=''.join(d))*10+b
            r = b*m+int(s[::-1])*10+a
            if c*(k+1)==r-1:
                yield k
A367593_list = list(islice(A367593_gen(),20)) # _Chai Wah Wu_, Dec 01 2023

