# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A192274

from sympy import divisors
from sympy.combinatorics.subsets import Subset
def antidivisors(n):
    return [2*d for d in divisors(n) if n > 2*d and n % (2*d)] + \
           [d for d in divisors(2*n-1) if n > d >=2 and n % d] + \
           [d for d in divisors(2*n+1) if n > d >=2 and n % d]
for n in range(1, 10**3):
    d = divisors(n)
    s = sum(d)
    if not s % 2 and max(d) <= s/2:
        for x in range(1, 2**len(d)):
            if sum(Subset.unrank_binary(x, d).subset) == s/2:
                d = antidivisors(n)
                s = sum(d)
                if not s % 2 and max(d) <= s/2:
                    for x in range(1, 2**len(d)):
                        if sum(Subset.unrank_binary(x, d).subset) == s/2:
                            print(n, end=', ')
                            break
                break
# _Chai Wah Wu_, Aug 14 2014

