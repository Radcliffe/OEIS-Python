# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A096245

from sympy import isprime
from sympy.ntheory.digits import digits
def strmap(d):
    return str(d) if d < 10 else "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[d-10]
def ok(n, prevset, base=12): # works for bases 2-36
    if not isprime(n): return False
    s = "".join(strmap(d) for d in digits(n, base)[1:])
    si = (s[:i]+s[i+1:] for i in range(len(s)))
    return any(t[0] != '0' and int(t, base) in prevset for t in si)
def afind(terms, base=12): # works for bases 3-36
    s = set([p for p in range(1, base) if isprime(p)])
    alst, snxt = [len(s)], set()
    print(len(s), end=", ")
    for n in range(2, terms+1):
        for i in range(base**(n-1), base**n):
            if ok(i, s):
                snxt.add(i)
        s, snxt = snxt, set()
        print(len(s), end=", ")
afind(6) # _Michael S. Branicky_, Jan 17 2022

