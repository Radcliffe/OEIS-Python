# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A213059

from itertools import chain, combinations as C
def powerset(s): # in decreasing size
  return chain.from_iterable(C(s, r) for r in range(len(s), -1, -1))
def agen():
  m = 1 # largest element
  while True:
    for p in powerset(range(1, m)): yield int("".join(map(str, p+(m,))))
    m += 1
def aupton(terms):
  alst, g = [], agen()
  while len(alst) < terms: alst += [next(g)]
  return alst
print(aupton(63)) # _Michael S. Branicky_, Jan 12 2021

