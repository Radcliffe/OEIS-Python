# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A361990

from math import isqrt
from itertools import count, islice
from sympy.ntheory.primetest import is_square
from sympy import fibonacci
def A361990_gen(): # generator of terms
    for l in count(2):
        c = set()
        for i in range(1,isqrt(10**(l-1)-1)+1):
            i2 = i**2
            k = 10**(l-len(str(i2))-1)
            for j in count(0):
                f = int(fibonacci(j))
                if f>=10*k:
                    break
                if (f==0 and k==1) or f>=k:
                    n = i2*10*k+f
                    for w in range(1,len(str(n))):
                        w2 = 10**(w-1)
                        a, b = divmod(n,w2*10)
                        if w==1 or b>=w2:
                            if (is_square(b) and (is_square(r:=5*a**2-4) or is_square(r+8))):
                                c.add(n)
        yield from sorted(c)
A361990_list = list(islice(A361990_gen(),30)) # _Chai Wah Wu_, Apr 05 2023

