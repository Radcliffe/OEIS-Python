# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A035310

from sympy.core.cache import cacheit
from sympy import divisors, isprime, prime
from operator import mul
@cacheit
def g(n, k):
    return (0 if n > k else 1) + (0 if isprime(n) else sum(g(n//d, d) for d in divisors(n)[1:-1] if d <= k))
@cacheit
def b(n, i, l):
    if n==0:
        p = reduce(mul, (prime(t + 1)**l[t] for t in range(len(l))))
        return g(p, p)
    else:
        return 0 if i<1 else sum([b(n - i*j, i - 1, l + [i]*j) for j in range(n//i + 1)])
def a(n):
    return b(n, n, [])
for n in range(1, 11): print(a(n)) # _Indranil Ghosh_, Aug 19 2017, after Maple code

