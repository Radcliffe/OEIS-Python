# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A345396

from itertools import count, islice
from sympy import isprime
from sympy.utilities.iterables import multiset_permutations
def isbalanced(n): b = bin(n)[2:]; return b.count("0") == b.count("1")
def A066196gen():
    yield from filter(isprime, (int("1"+"".join(p), 2) for n in count(1) for p in multiset_permutations("0"*n+"1"*(n-1))))
def a(n):
    for p in A066196gen():
        if all(isbalanced(p**i) for i in range(2, n+1)):
            return p
print([a(n) for n in range(1, 6)]) # _Michael S. Branicky_, May 15 2022

