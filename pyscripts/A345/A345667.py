# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A345667

def trojan_composites_records(limit_maxval=None, limit_terms=None, verbose=True):
    from sympy import isprime
    num = 1
    found = []
    while (not limit_maxval or not found or found[-1] <= limit_maxval) and (not limit_terms or len(found) < limit_terms):
        num += 1
        if not isprime(num):
            string = str(num)
            for length in range(len(string), len(str(found[-1])) if found else 1, -1):
                candidate = max(filter(isprime, {int(string[i:i + length - 1]) for i in range(len(string) - length + 2)}), default=0)
                if candidate:
                    if not found or candidate > found[-1]:
                        if limit_maxval and candidate > limit_maxval:
                            if verbose:
                                print()
                            return found
                        found.append(candidate)
                        if verbose:
                            print(candidate, end=', ', flush=True)
                break
    if verbose:
        print()
    return found
trojan_composites_records(limit_terms=7) # [2, 5, 7, 11, 17, 19, 23]

