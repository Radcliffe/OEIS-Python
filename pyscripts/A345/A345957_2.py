# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A345957

from sympy import divisors, factorint
def a(n):
    npf = len(factorint(n, multiple=True))
    divs = divisors(n)
    return sum(2*len(factorint(d, multiple=True)) == npf for d in divs)
print([a(n) for n in range(1, 88)]) # _Michael S. Branicky_, Aug 17 2021
from sympy import factorint
from sympy.utilities.iterables import multiset_combinations
def A345957(n):
    if n == 1:
        return 1
    fs = factorint(n,multiple=True)
    q, r = divmod(len(fs),2)
    return 0 if r else len(list(multiset_combinations(fs,q))) # _Chai Wah Wu_, Aug 20 2021

