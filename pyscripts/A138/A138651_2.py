# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A138651

from itertools import product
def a(n): return len(set(eval("1" + "".join(op+str(i) for op, i in zip(ops, range(2, n+1)))) for ops in product("+*", repeat=n-1)))
print([a(n) for n in range(1, 16)]) # _Michael S. Branicky_, Jan 14 2022
 # faster version for initial segment of sequence (see Comments)
def afindn(terms):
    vset, vpset = {1}, {(1, 1)}
    print(len(vset), end=", ")
    for n in range(2, terms+1):
        newvset, newvpset = set(), set()
        for v, p in vpset:
            newvs = [v+n, v+p*(n-1)]
            newvset.update(newvs)
            if n != terms: # saves memory for that last term
                newvpset.update([(newvs[0], n), (newvs[1], p*n)])
        vset, vpset = newvset, newvpset
        print(len(vset), end=", ")
afindn(26) # _Michael S. Branicky_, Jan 14 2022

