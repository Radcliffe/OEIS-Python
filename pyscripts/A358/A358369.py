# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A358369

from typing import Callable
from functools import cache
from sympy import divisors
def BinaryRecurrenceSequence(b:int, c:int, u0:int=0, u1:int=1) -> Callable:
    @cache
    def u(n: int) -> int:
        if n < 2:
            return [u0, u1][n]
        return b * u(n - 1) + c * u(n - 2)
    return u
def EulerTransform(a: Callable) -> Callable:
    @cache
    def b(n: int) -> int:
        if n == 0:
            return 1
        s = sum(sum(d * a(d) for d in divisors(j)) * b(n - j)
            for j in range(1, n + 1))
        return s // n
    return b
b = BinaryRecurrenceSequence(0, 2, 1)
a = EulerTransform(b)
print([a(n) for n in range(37)])

