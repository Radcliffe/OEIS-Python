# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A109938

from sympy import prime, prevprime
def a(n):
    pn = prime(n); k = len(str(pn))
    p = prevprime(10**k); lb = max(10**(k-1), 2)
    while p > lb and p%pn != 1: p = prevprime(p)
    return p if p > lb else 0
print([a(n) for n in range(1, 81)]) # _Michael S. Branicky_, Jul 07 2021
 # faster version for initial segment of sequence
from sympy import prime, primerange
def aupto(limit):
    alst, primeswithkdigs, plimit = [], dict(), prime(limit)
    for k in range(1, len(str(plimit))+1):
        primeswithkdigs[k] = list(primerange(10**(k-1), 10**k))[::-1]
    for pn in primerange(1, plimit+1):
        k, found = len(str(pn)), False
        for pk in primeswithkdigs[k]:
            if pk%pn == 1: alst.append(pk); found = True; break
        if not found: alst.append(0)
    return alst
print(aupto(80)) # _Michael S. Branicky_, Jul 07 2021

