# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A098834

from sympy import factorint
from itertools import product
def sd(n): return sum(map(int, str(n)))
def smith(n):
  f = factorint(n)
  return sum(f[p] for p in f) > 1 and sd(n) == sum(sd(p)*f[p] for p in f)
def palsto(limit):
  yield from range(min(limit, 9)+1)
  midrange = [[""], [str(i) for i in range(10)]]
  for digs in range(2, 10**len(str(limit))):
    for p in product("0123456789", repeat=digs//2):
      left = "".join(p)
      if left[0] == '0': continue
      for middle in midrange[digs%2]:
        out = int(left + middle + left[::-1])
        if out > limit: return
        yield out
print(list(filter(smith, palsto(164461)))) # _Michael S. Branicky_, Apr 22 2021

