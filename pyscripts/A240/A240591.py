# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A240591

from itertools import count, islice
from math import isqrt
from sympy import mobius, integer_nthroot, nextprime
def A240591_gen(): # generator of terms
    def squarefreepi(n): return int(sum(mobius(k)*(n//k**2) for k in range(1, isqrt(n)+1)))
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        c, l, j = x-squarefreepi(integer_nthroot(x,3)[0]), 0, isqrt(x)
        while j>1:
            k2 = integer_nthroot(x//j**2,3)[0]+1
            w = squarefreepi(k2-1)
            c -= j*(w-l)
            l, j = w, isqrt(x//k2**3)
        return c+l
    m = 1
    for n in count(2):
        k = bisection(lambda x:f(x)+n,m,m)
        if nextprime(m) > k:
            yield m
        m = k
A240591_list = list(islice(A240591_gen(),30)) # _Chai Wah Wu_, Sep 14 2024

