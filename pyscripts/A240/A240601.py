# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A240601

from itertools import product
def pals(d, base=10): # all d-digit palindromes as strings
  digits = "".join(str(i) for i in range(base))
  for p in product(digits, repeat=d//2):
    if d//2 > 0 and p[0] == "0": continue
    left = "".join(p); right = left[::-1]
    for mid in [[""], digits][d%2]: yield left + mid + right
def auptod(dd):
  for d in range(1, dd+1):
    for p in pals(d//2):
      if d//2 == 0: p = ""
      elif p[0] == "0": continue
      for mid in [[""], "0123456789"][d%2]: yield int(p+mid+p[::-1])
print([rp for rp in auptod(6)]) # _Michael S. Branicky_, May 22 2021

