# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A366067

from itertools import islice
from sympy import divisor_count
def f(n): return n//dn if n%(dn:=divisor_count(n)) == 0 else n*dn
def agen(x=578): # generator of terms
    while True: yield x; x = f(x)
print(list(islice(agen(), 18))) # _Michael S. Branicky_, Oct 03 2023
from math import prod
from collections import Counter
from itertools import islice
from sympy import factorint
def A366067_gen(): # generator of terms
    a, b = 578, Counter({2:1,17:2})
    while True:
        yield a
        c = prod((e+1 for e in b.values()))
        if (d:=sum((Counter(factorint(e+1)) for e in b.values()),start=Counter()))<=b:
            a //= c
            b -=d
        else:
            a *= c
            b += d
A366067_list = list(islice(A366067_gen(),20)) # _Chai Wah Wu_, Oct 03 2023

