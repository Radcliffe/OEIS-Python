# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A186637

from math import isqrt
from sympy import primepi, primerange, integer_nthroot, factorint
def A186637(n):
    def A072000(n): return int(-((t:=primepi(s:=isqrt(n)))*(t-1)>>1)+sum(primepi(n//p) for p in primerange(s+1)))
    def f(x): return int(n+x-sum(A072000(integer_nthroot(x, p-1)[0]) for p in range(4,x.bit_length()+1) if sum(factorint(p).values())==2))
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    return bisection(f,n,n) # _Chai Wah Wu_, Sep 12 2024

