# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A072978

from math import prod, isqrt
from sympy import primerange, integer_nthroot, primepi
def A072978(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def g(x,a,b,c,m): yield from (((d,) for d in enumerate(primerange(b,isqrt(x//c)+1),a)) if m==2 else (((a2,b2),)+d for a2,b2 in enumerate(primerange(b,integer_nthroot(x//c,m)[0]+1),a) for d in g(x,a2,b2,c*b2,m-1)))
    def h(x,n): return sum(primepi(x//prod(c[1] for c in a))-a[-1][0] for a in g(x,1,3,1,n))
    def f(x): return int(n+x-primepi(x>>1)-sum(h(x>>m,m) for m in range(2,x.bit_length()+1))) if x>1 else 1
    return bisection(f,n,n) # _Chai Wah Wu_, Apr 10 2025

