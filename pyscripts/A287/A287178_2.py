# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A287178

a, isums, lsums, rsums, xsums = [], set(), set([0]), set([0]), set([0])
for i in range(100):
    for new in range(1, sum(a)+2):
        nrsums, nxsums = set([0]), set([0])
        for x in rsums:
            xn = x+new
            if xn in isums or xn in lsums:
                break
            nrsums.add(xn)
        else:
            for x in xsums.union(lsums):
                xn = x+new
                if xn in isums or xn in rsums or xn in lsums:
                    break
                nxsums.add(xn)
            else:
                a.append(new)
                isums.update(rsums)
                xsums, rsums = nxsums, nrsums
                lsums.add(sum(a))
                break
print(a)
# _Andrey Zabolotskiy_, May 30 2017
from itertools import count, islice
def A287178_gen(): # generator of terms
    aset1, aset2, alist, n = set(), set(), [], 0
    for k in count(1,2):
        bset2 = {k<<1}
        if (k<<1) not in aset2:
            for d in aset1:
                if (m:=d+k) in aset2:
                    break
                bset2.add(m)
            else:
                yield k-n
                n = k
                alist.append(k)
                aset1.add(k)
                aset2.update(bset2)
A287178_list = list(islice(A287178_gen(),41)) # _Chai Wah Wu_, Sep 05 2023

