# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A283940

r = 3 ** 0.5
def s(n): return 1 if n<1 else s(n - 1) + 1 + int(n*r)
def p(n): return n + 1 + sum([int((n - k)/r) for k in range(0, n+1)])
v=[s(n) for n in range(0, 101)]
u=[p(n) for n in range(0, 101)]
def w(i,j): return u[i - 1] + v[j - 1] + (i - 1) * (j - 1) - 1
for n in range(1, 11):
    print ([w(k, n - k + 1) for k in range(1, n + 1)]) # _Indranil Ghosh_, Mar 21 2017
import numpy as np
r = np.sqrt(3)
x = np.arange(11)
u = np.cumsum(np.ceil(x / r)).astype(int)
v = np.cumsum(np.ceil(x * r)).astype(int)
print(*[1 + u[k] + v[n-k] + k*(n-k) for n in range(11) for k in range(n+1)], sep=', ')
# _David Radcliffe_, May 10 2025

