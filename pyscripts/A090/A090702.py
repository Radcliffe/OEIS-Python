# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A090702

from itertools import product
from functools import lru_cache
def ispal(w): return all(w[i] == w[-1-i] for i in range(len(w)//2+1))
def isantipal(w): return all(w[i] != w[-1-i] for i in range(len(w)//2+1))
@lru_cache(maxsize=None)
def d(w): # min deletions needed to transform w into a pal or antipal
    if ispal(w) or isantipal(w): return 0
    ch = set(w[:i] + w[i+1:] for i in range(len(w)))
    return 1 + min(d(wc) for wc in ch)
def a(n): return max(d("0"+"".join(w)) for w in product("01", repeat=n-1))
print([a(n) for n in range(1, 18)]) # _Michael S. Branicky_, Jul 25 2022

