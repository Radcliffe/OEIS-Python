# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A080426

def A080426(nmax):
    a, s = "1", "".maketrans({"1":"131", "3":"13331"})
    while len(a) < nmax: a = a.translate(s)
    return list(map(int, a[:nmax]))
print(A080426(100)) # _Paolo Xausa_, Aug 30 2022, using method (1) from comments
def A080426(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        c, s = x, bin(x)[2:]
        l = len(s)
        for i in range(l&1,l,2):
            c -= int(s[i])+int('0'+s[:i],2)
        return c
    return bisection(lambda x:f(x)+n,n,n)-bisection(lambda x:f(x)+n-1,n-1,n-1)-1 # _Chai Wah Wu_, Jan 29 2025

