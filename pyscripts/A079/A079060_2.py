# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A079060

from sympy import nextprime, primitive_root
def a(n):
    k, pk, pn = 1, 2, prime(n)
    while primitive_root(pk) != pn: k += 1; pk = nextprime(pk)
    return k
print([a(n) for n in range(1, 19)]) # _Michael S. Branicky_, Feb 13 2023
 # faster version for segments of sequence
from itertools import count, islice
from sympy import isprime, nextprime, prime, primepi, primitive_root
def agen(startk=1, startn=1): # generator of terms
    p, vdict, adict, n = prime(startk), dict(), dict(), startn
    for k in count(startk):
        v = primitive_root(p)
        if v not in vdict and isprime(v):
            vdict[v] = k
            adict[primepi(v)] = k
        while n in adict: yield adict[n]; n += 1
        p = nextprime(p)
print(list(islice(agen(), 18))) # _Michael S. Branicky_, Feb 14 2023

