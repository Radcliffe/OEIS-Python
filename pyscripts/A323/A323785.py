# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A323785

def a(n):
    np = swap_prime_factors_with_exponents(n)
    npp = swap_prime_factors_with_exponents(np)
    return max(n, np) if n == npp else a(npp)
def swap_prime_factors_with_exponents(n):
    np = 1
    for p in primes:
        q = 0
        while n % p == 0:
            q += 1
            n = n // p
        if q > 1: np *= q ** p
        if q == 1: np *= p
    if n > 1: np *= n
    return np
N = 200
primes = []
for n in range(2, int(N ** (1/2)) + 1):
    if all(n % p > 0 for p in primes):
        primes.append(n)
for n in range(1,N+1):
    print(n, a(n))

