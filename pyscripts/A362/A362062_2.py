# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A362062

from sympy import primefactors
from collections import Counter
from itertools import count, islice
def agen(): # generator of terms
    an, c, d, d2, k = 1, Counter(), dict(), dict(), 0
    for n in count(1):
        if an in d: dpf = d[an]
        else: dpf, d2[dpf] = len(primefactors(an)), n
        c[dpf] += 1
        an = c[dpf]
        if k in d2: yield d2[k]; k += 1
print(list(islice(agen(), 7))) # _Michael S. Branicky_, Apr 06 2023
from itertools import count
from sympy import primenu
def A362062(n):
    a, b, c = {}, {}, 1
    for m in count(1):
        d = b[c] = b.get(c,primenu(c))
        if d == n: return m
        c = a[d] = a.get(d,0)+1 # _Chai Wah Wu_, Apr 07 2023

