# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A382746

from functools import lru_cache
@lru_cache(maxsize=None, typed=True)
def in_sieve(n, S):
    if n == 1:
        return True
    elif n in S:
        return False
    else:
        L = [s for s in S if (n % s) == 0]
        return all(not in_sieve(n/ell, S) for ell in L )
def nth_in_sieve(n, S):
    if n == 1:
        return 1
    else:
        i, m = 1, 1
        while i < n:
            m = m+1
            if in_sieve(m, S):
                i = i+1
    return m
def a(n):
    return nth_in_sieve(n, tuple([8]))

