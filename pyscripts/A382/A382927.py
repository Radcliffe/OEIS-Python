# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A382927

from sympy import isprime
from itertools import count, islice, product
def palprimes(): # generator of palprimes
    yield from [2, 3, 5, 7, 11]
    for d in count(3, 2):
        for last in "1379":
            for p in product("0123456789", repeat=d//2-1):
                left = "".join(p)
                for mid in [[""], "0123456789"][d&1]:
                    t = int(last + left + mid + left[::-1] + last)
                    if isprime(t):
                        yield t
def agen(): # generator of terms
    adict, n, lastdigit, vlst = dict(), 1, 0, [2]
    for p in palprimes():
        if p%10 == lastdigit:
            vlst.append(p)
        else:
            if len(vlst) >= n:
                for i in range(n, len(vlst)+1):
                    if i not in adict:
                        adict[i] = vlst[-i]
                while n in adict: yield adict[n]; n += 1
            lastdigit, vlst = p%10, [p]
print(list(islice(agen(), 40))) # _Michael S. Branicky_, Apr 13 2025

