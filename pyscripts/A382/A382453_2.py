# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A382453

from itertools import count, islice
def agen():    # generator of terms
    slst, alst, an = [], [], 1
    S = ["2"]  # strings of sums of two terms (including self sums)
    while True:
        alst.append(an)
        slst.append(str(an))
        yield an
        for k in count(an+1):
            sk = str(k)
            if any(sk in s for s in S): continue
            Pk = [str(ai+k) for ai in alst] + [str(k+k)]
            if any(si in s for s in Pk for si in slst+[sk]): continue
            an = k
            S += Pk
            break
print(list(islice(agen(), 48))) # _Michael S. Branicky_, Mar 26 2025

