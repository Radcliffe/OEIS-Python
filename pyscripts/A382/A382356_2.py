# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A382356

def T(n, A):
    return invPerm(J(n,A))
def J(n,A):
    l=[]
    for i in range(n):
        l.append(i+1)
    index = 0
    P=[]
    for i in range(n):
        index+=A[i]
        index=index%len(l)
        P.append(l[index])
        l.pop(index)
    return P
def invPerm(p):
    inv = []
    for i in range(len(p)):
        inv.append(None)
    for i in range(len(p)):
        inv[p[i]-1]=i+1
    return inv
def firstPersonElimOrder(n, A):
    return T(n, A)[0]
def UDU(n):
    return [1] + [2 for i in range(n)]
seq = []
for i in range(1,88):
    seq += [firstPersonElimOrder(i, UDU(i))]
print(", ".join([str(v) for v in seq]))
def a(n):
    c, i, J = 1, 0, list(range(1, n+1))
    while len(J) > 0:
        i = (i + 1)%len(J)
        q = J.pop(i)
        if q == 1: return c
        i = (i + 1)%len(J) # skip the third
        c = c+1
print([a(n) for n in range(1, 71)]) # _Michael S. Branicky_, Mar 24 2025

