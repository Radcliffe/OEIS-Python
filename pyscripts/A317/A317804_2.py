# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A317804

from heapq import heappush, heappop
def sequence():
    pq = [1]
    seen = set(pq)
    while True:
        value = heappop(pq)
        yield value
        seen.remove(value)
        for x in 2 * value, 12 * value:
            if x not in seen:
                heappush(pq, x)
                seen.add(x)
seq = sequence()
finalsequence_list = [next(seq) for i in range(100)]  # _Dario Ch_, Sep 01 2018
from sympy import integer_log
def A317804(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return n+x-sum((x//12**i).bit_length() for i in range(integer_log(x,12)[0]+1))
    return bisection(f,n,n) # _Chai Wah Wu_, Mar 26 2025

