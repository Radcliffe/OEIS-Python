# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A001006

from gmpy2 import divexact
A001006 = [1, 1]
for n in range(2, 10**3):
    A001006.append(divexact(A001006[-1]*(2*n+1)+(3*n-3)*A001006[-2],n+2))
# _Chai Wah Wu_, Sep 01 2014
def mot():
    a, b, n = 0, 1, 1
    while True:
        yield b//n
        n += 1
        a, b = b, (3*(n-1)*n*a+(2*n-1)*n*b)//((n+1)*(n-1))
A001006 = mot()
print([next(A001006) for n in range(30)]) # _Peter Luschny_, May 16 2016
# A simple generator of Motzkin-paths (see the first comment of _David Callan_).
C = str.count
def aGen(n: int):
    a = [""]
    for w in a:
        if len(w) == n:
            if C(w, "U") == C(w, "D"): yield w
        else:
            for j in "UDF":
                u = w + j
                if C(u, "U") >= C(u, "D"): a += [u]
    return a
for n in range(6):
    MP = [w for w in aGen(n)];
    print(len(MP), ":", MP)  # _Peter Luschny_, Dec 03 2024

