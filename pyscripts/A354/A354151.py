# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A354151

from math import gcd, prod
from sympy import isprime
from itertools import count, islice
def agen(): # generator of terms
    alst, aset, mink, run = [1], {1}, 2, 0
    for n in count(2):
        k, s = mink, n - n//2
        prodall = prod(alst[n-n//2-1:n-1])
        while k in aset or gcd(prodall, k) != 1: k += 1
        alst.append(k); aset.add(k)
        if isprime(k): run += 1
        elif run > 0: yield run; run = 0
        while mink in aset: mink += 1
print(list(islice(agen(), 45))) # _Michael S. Branicky_, May 28 2022

