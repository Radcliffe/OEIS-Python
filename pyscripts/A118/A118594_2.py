# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A118594

from itertools import count, islice, product
def agen(): # generator of terms
    yield from [0, 1, 2]
    for d in count(2):
        for start in "12":
            for rest in product("012", repeat=d//2-1):
                left = start + "".join(rest)
                for mid in [[""], ["0", "1", "2"]][d%2]:
                    yield int(left + mid + left[::-1])
print(list(islice(agen(), 42))) # _Michael S. Branicky_, Mar 29 2022
from sympy import integer_log
from gmpy2 import digits
def A118594(n):
    if n == 1: return 0
    y = 3*(x:=3**integer_log(n>>1,3)[0])
    return int((s:=digits(n-x,3))+s[-2::-1] if n<x+y else (s:=digits(n-y,3))+s[::-1]) # _Chai Wah Wu_, Jun 14 2024

