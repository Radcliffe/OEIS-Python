# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A376703

from sympy import factorint
def ok(n):
    f = factorint(n)
    return sum(f.values()) == 3 and len(set([len(str(p)) for p in f])) == 1
print([k for k in range(5100) if ok(k)]) # _Michael S. Branicky_, Oct 05 2024
from math import prod
from sympy import primerange
from itertools import count, combinations_with_replacement as cwr, islice
def bgen(d): # generator of terms that are products of d-digit primes
    primes, out = list(primerange(10**(d-1), 10**d)), set()
    for t in cwr(primes, 3): out.add(prod(t))
    yield from sorted(out)
def agen(): # generator of terms
    for d in count(1): yield from bgen(d)
print(list(islice(agen(), 50))) # _Michael S. Branicky_, Oct 05 2024

