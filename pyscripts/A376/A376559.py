# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A376559

from sympy import mobius, integer_nthroot
def A376559(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return int(n-1+x+sum(mobius(k)*(integer_nthroot(x,k)[0]-1) for k in range(2,x.bit_length())))
    a = bisection(f,n,n)
    b = bisection(lambda x:f(x)+1,a,a)
    return a+bisection(lambda x:f(x)+2,b,b)-(b<<1) # _Chai Wah Wu_, Oct 02 2024

