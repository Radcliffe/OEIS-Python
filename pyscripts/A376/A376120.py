# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A376120

from itertools import count, islice
from math import prod
from sympy import mobius, integer_nthroot, factorint
def A376120_gen(): # generator of terms
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return int(x-1+sum(mobius(k)*(integer_nthroot(x,k)[0]-1) for k in range(2,x.bit_length())))
    m = 1
    for n in count(1):
        m = bisection(lambda x:f(x)+n,m,m)
        if not m%prod(e+1 for e in factorint(m).values()): yield m
A376120_list = list(islice(A376120_gen(),40)) # _Chai Wah Wu_, Oct 04 2024

