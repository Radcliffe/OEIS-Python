# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A244423

import sympy
from sympy import isprime
from sympy import divisors
def rev(n):
  r = ""
  for i in str(n):
    r = i + r
  return int(r)
def a():
  for n in range(1,10**8):
    if rev(n) == n and not isprime(n):
      p = 1
      for i in divisors(n):
        p*=i
      if rev(p)==p:
        print(n,end=', ')
a()
from sympy import divisor_count, sqrt
def palgen(l,b=10): # generator of palindromes in base b of length <= 2*l
    if l > 0:
        yield 0
        for x in range(1,l+1):
            n = b**(x-1)
            n2 = n*b
            for y in range(n,n2):
                k, m = y//b, 0
                while k >= b:
                    k, r = divmod(k,b)
                    m = b*m + r
                yield y*n + b*m + k
            for y in range(n,n2):
                k, m = y, 0
                while k >= b:
                    k, r = divmod(k,b)
                    m = b*m + r
                yield y*n2 + b*m + k
A244423_list = [1]
for n in palgen(6):
    d = divisor_count(n)
    if d > 2:
        q, r = divmod(d,2)
        s = str(n**q*(sqrt(n) if r else 1))
        if s == s[::-1]:
            A244423_list.append(n) # _Chai Wah Wu_, Aug 25 2015

