# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A116608

from math import isqrt
from itertools import count, islice
from sympy.utilities.iterables import partitions
def A116608_gen(): # generator of terms
    return (sum(1 for p in partitions(n) if len(p)==k) for n in count(1) for k in range(1,(isqrt((n<<3)+1)-1>>1)+1))
A116608_list = list(islice(A116608_gen(),30)) # _Chai Wah Wu_, Sep 14 2023
from functools import cache
@cache
def P(n: int, k: int, r: int) -> int:
    if n == 0: return 1 if k == 0 else 0
    if k == 0: return 0
    if r == 0: return 0
    return sum(P(n - r * j, k - 1, r - 1)
               for j in range(1, n // r + 1)) + P(n, k, r - 1)
def A116608triangle(rows: int) -> list[int]:
    return list(filter(None, [P(n, k, n) for n in range(1, rows)
                              for k in range(1, n + 1)]))
print(A116608triangle(22)) # _Peter Luschny_, Sep 14 2023, courtesy of Amir Livne Bar-on

