# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A209252

from sympy import isprime
def A209252(n):
    return len([1 for i in range(len(str(n))) for d in '0123456789' if d != str(n)[i] and isprime(int(str(n)[:i]+d+str(n)[i+1:]))]) # _Chai Wah Wu_, Sep 19 2016
from gmpy2 import digits, is_prime
def a(n):
    s, c = list(map(int, digits(n))), 0
    if len(s) > 1 and s[-1] not in {1, 3, 7, 9}:
        z = int(is_prime(s[-1])) if all(c == 0 for c in s[1:-1]) else 0
        return z + sum(1 for e in {1, 3, 7, 9} if is_prime(n + e - s[-1]))
    for i in range(len(s)):
        b = 10**(len(s)-1-i)
        for j in range(10):
            if j != s[i]:
                t = n + (j-s[i])*b
                if is_prime(t):
                    c += 1
    return c
print([a(n) for n in range(100)]) # _Michael S. Branicky_, Apr 22 2025

