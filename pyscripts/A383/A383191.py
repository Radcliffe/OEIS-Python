# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A383191

class A383191(A383190): # use A383191(n) or a=A383191(); a(n); a[m:n]; print(a)
    def __call__(self, n: int) -> int:
        "Return A383191(n)."
        if isinstance(n, int) and n >= 0:
            while n not in self.terms: self.extend()
            return self.terms.index(n) # this is the inverse permutation of 'terms'
        if n is None: return self # because A383191() => A383190(n=None) => a(n)
        raise ValueError(f"Expected non-negative index n, got {n = !r}.")
A383191()[:50]   # list [a(0) .. a(49)]
print(A383191()) # displays the grid filled so far (same as A383190)

