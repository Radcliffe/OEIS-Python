# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A164791

from num2words import num2words
from itertools import count, islice
def n2w(n):
  return "".join(c for c in num2words(n).replace(" and", "") if c.isalpha())
def a(n):
    return next(i for i in count(0) if len(w:=n2w(i))>=n and w[n-1]=="n")
print([a(n) for n in range(1, 41)]) # _Michael S. Branicky_, Apr 21 2023
 # faster for initial segment of sequence; uses n2w, imports above
def agen(): # generator of terms
    adict, n = dict(), 1
    for i in count(0):
        w = n2w(i)
        if "n" in w:
            locs = [i+1 for i, c in enumerate(w) if w[i] == "n"]
            for v in locs:
                if v not in adict: adict[v] = i
        while n in adict: yield adict[n]; n += 1
print(list(islice(agen(), 50))) # _Michael S. Branicky_, Apr 21 2023

