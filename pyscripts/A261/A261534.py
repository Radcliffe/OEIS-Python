# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A261534

from __future__ import division
from sympy import divisor_count
from gmpy2 import isqrt, t_divmod, digits
def palgen(l,b=10): # generator of palindromes in base b of length <= 2*l
    if l > 0:
        yield 0
        for x in range(1,l+1):
            n = b**(x-1)
            n2 = n*b
            for y in range(n,n2):
                k, m = y//b, 0
                while k >= b:
                    k, r = t_divmod(k,b)
                    m = b*m + r
                yield y*n + b*m + k
            for y in range(n,n2):
                k, m = y, 0
                while k >= b:
                    k, r = t_divmod(k,b)
                    m = b*m + r
                yield y*n2 + b*m + k
A261534_list = [1]
for m in palgen(17,3):
    n = int(digits(m,3))
    d = int(divisor_count(n))
    if d > 2:
        q, r = t_divmod(d,2)
        s = digits(n**q*(isqrt(n) if r else 1))
        if s == s[::-1]:
            A261534_list.append(n)

