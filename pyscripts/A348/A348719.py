# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A348719

from itertools import count, islice, combinations
from sympy import divisors
def A348719_gen(): # generator of terms
    c = 0
    yield 1
    for n in count(2):
        divs = tuple(divisors(n, generator=True))
        l, b = len(divs), sum(divs)
        if l>=4 and 2**(l-1)-l>c:
            m = sum(1 for k in range(2,(l-1>>1)+1) for p in combinations(divs,k) if not ((s:=sum(p))%k or (b-s)%(l-k)))
            if l&1 == 0:
                k = l>>1
                m += sum(1 for p in combinations(divs,k) if 1 in p and not ((s:=sum(p))%k or (b-s)%k))
            if m > c:
                yield n
                c = m
A348719_list = list(islice(A348719_gen(),10)) # _Chai Wah Wu_, Sep 24 2023

