# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A071848

from functools import lru_cache
def a(n):
    @lru_cache()
    def f(m):
        if m == 1: return {n}
        out = set()
        for j in range(1, m//2+1):
            for x in f(j):
                for y in f(m-j):
                    out.update([x + y, x - y, y - x, x * y])
                    if y and x%y == 0: out.add(x//y)
                    if x and y%x == 0: out.add(y//x)
        return out
    k, s = 1, set.union(*(f(i) for i in range(1, n+1)))
    while k in s: k += 1
    return k
print([a(n) for n in range(1, 14)]) # _Michael S. Branicky_, Jul 28 2022

