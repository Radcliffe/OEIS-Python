# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A339668

# needs subroutines in A339391
from itertools import product, combinations
def lsa_is_2(w): # length of smallest attractor of w  is 2
  for r in range(1, 3):
    for s in combinations(range(len(w)), r):
      if is_attractor(set(s), w): return r == 2
  return False
def a(n):  # twice value of strings starting with 0 by symmetry
  return 2*sum(lsa_is_2("0"+"".join(u)) for u in product("01", repeat=n-1))
print([a(n) for n in range(1, 12)]) # _Michael S. Branicky_, Dec 20 2020

