# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A339453

from itertools import chain, combinations
from fractions import Fraction
def powerset(s): # skip empty set
    return chain.from_iterable(combinations(s, r) for r in range(1,len(s)+1))
def hm(s):
    ss = sum(Fraction(1, i) for i in s)
    return Fraction(len(s)*ss.denominator, ss.numerator)
def a(n):
    return sum(hm(s).denominator==1 for s in powerset(range(1,n+1)))
print([a(n) for n in range(1, 16)]) # _Michael S. Branicky_, Dec 06 2020
from math import lcm
from itertools import combinations
def A339453(n):
    m = lcm(*range(2,n+1))
    return sum(1 for i in range(1,n+1) for d in combinations((m//i for i in range(1,n+1)),i) if m*i % sum(d) == 0) # _Chai Wah Wu_, Dec 02 2021

