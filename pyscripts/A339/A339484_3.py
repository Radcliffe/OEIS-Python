# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A339484

from itertools import combinations
def a(n):
    ss, s = 0, range(1, n+1)
    for r in range(1, n+1):
        rr = r*r
        ss += sum(sum(subs)==rr for subs in combinations(s, r))
    return ss
print([a(n) for n in range(1, 21)]) # _Michael S. Branicky_, Dec 06 2020
from functools import lru_cache
from itertools import combinations
@lru_cache(maxsize=None)
def A339484(n):
    return 1 if n == 1 else A339484(n-1)+sum(sum(d)+n==(i+1)**2 for i in range(1,n) for d in combinations(range(1,n),i)) # _Chai Wah Wu_, Dec 07 2020
from functools import lru_cache
@lru_cache(maxsize=None)
def b(n, s, c):
    if n == 0: return c and int(s == c*c)
    return b(n-1, s, c) + b(n-1, s+n, c+1)
a = lambda n: b(n, 0, 0)
print([a(n) for n in range(1, 101)]) # _Michael S. Branicky_, Oct 06 2022

