# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A145522

from itertools import count
from sympy import integer_nthroot, isprime, primepi
def A145522(n):
    total = 0
    for p in count(2):
        if 2**p > A145521(n): break
        if isprime(p): total += primepi(integer_nthroot(A145521(n), p)[0])
    return total # _Jason Yuen_, Jan 31 2024
from math import prod
from sympy import primepi, integer_nthroot, primerange, factorint
def A145522(n):
    def f(x): return int(n+x-sum(primepi(integer_nthroot(x, p)[0]) for p in primerange(x.bit_length())))
    m, k = n, f(n)
    while m != k:
        m, k = k, f(k)
    a = prod(e**p for p,e in factorint(m).items())
    return sum(primepi(integer_nthroot(a, p)[0]) for p in primerange(a.bit_length())) # _Chai Wah Wu_, Aug 10 2024

