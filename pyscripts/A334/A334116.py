# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A334116

from sympy import floor, S, sqrt
def coeff(w,m):
    a, p, s, vv = m, 0, w, []
    while a < 2*m:
        p += 1
        s = S.One/(s-floor(s))
        a = floor(s)
        if a < 2*m:
            vv.append(a)
    j = (p-1)//2
    v = [0,1,1] if p % 2 else [1, 0, vv[j]]
    for i in range(j-1,-1,-1):
        h = vv[i]
        v = [v[0]+h*v[2], v[2], 2*h*v[0]+v[1]+h**2*v[2]]
    return v
def A334116(n):
    w = sqrt(n)
    m = floor(w)
    if w == m:
        return n
    else:
        x, y, z = coeff(w,m)
        if z % 2:
            x *= 2
        else:
            z //= 2
            y //= 2
        return (m+z)**2+x+(x*m+y)//z # _Chai Wah Wu_, Sep 30 2021, after Maxima code

