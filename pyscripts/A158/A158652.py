# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A158652

from itertools import count, islice
allowed = {"0":"2357", "1":"1246", "2":"01359", "3":"0248", "4":"1379", "5":"0268", "6":"157", "7":"046", "8":"359", "9":"248"}
def cgen(seed, digits, geq="0"): # numbers satisfying the condition
    if digits == 1:
        yield from (c for c in allowed[seed] if c >= geq); return
    for f in (c for c in allowed[seed] if c >= geq):
        yield from (f + r for r in cgen(f, digits-1))
def nextc(k): # next element of cgen greater than k
    s = str(k)
    for d in count(len(s)):
        geq = s[0] if d == len(s) else "1"
        for c in map(int, cgen(s[-1], d, geq=geq)):
            if c > k: return c
def agen():
    an = 1
    for n in count(1): yield an; an = nextc(an)
print(list(islice(agen(), 40))) # _Michael S. Branicky_, Jul 12 2022

