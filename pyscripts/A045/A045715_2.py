# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A045715

from itertools import chain, count, islice
def A045715_gen(): # generator of terms
    return chain.from_iterable(primerange(9*(m:=10**l),10*m) for l in count(0))
A045715_list = list(islice(A045715_gen(),40)) # _Chai Wah Wu_, Dec 08 2024
from sympy import primepi
def A045715(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return n+x+primepi(min(9*(m:=10**(l:=len(str(x))-1))-1,x))-primepi(min(10*m-1,x))+sum(primepi(9*(m:=10**i)-1)-primepi(10*m-1) for i in range(l))
    return bisection(f,n,n) # _Chai Wah Wu_, Dec 08 2024

