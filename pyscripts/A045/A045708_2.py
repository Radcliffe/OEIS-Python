# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A045708

from sympy import isprime
def agen(limit=float('inf')):
  yield 2
  digits, adder = 1, 20
  while True:
    for i in range(1, 10**digits, 2):
      test = adder + i
      if test > limit: return
      if isprime(test): yield test
    digits, adder = digits+1, adder*10
agento = lambda lim: agen(limit=lim)
print(list(agento(2222))) # _Michael S. Branicky_, Feb 23 2021
from sympy import primepi
def A045708(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return n+x+primepi(min(((m:=10**(l:=len(str(x))-1))<<1)-1,x))-primepi(min(3*m-1,x))+sum(primepi(((m:=10**i)<<1)-1)-primepi(3*m-1) for i in range(l))
    return bisection(f,n,n) # _Chai Wah Wu_, Dec 07 2024

