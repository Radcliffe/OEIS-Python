# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A365339

import math
def phi(n):
    result = n
    for i in range(2, math.isqrt(n) + 1):
        if n % i == 0:
            while n % i == 0:
                n //= i
            result -= result // i
    if n > 1:
        result -= result // n
    return result
# This code uses dynamic programming to print the first N=100 values of M.
N=100
M = [0 for i in range(N)]
dynamic = [0 for i in range(N+1)]
for n in range(1,N+1):
    i = phi(n)
    new = dynamic[i] + 1
    while (i<=N and dynamic[i] < new):
        dynamic[i] = new
        i+= 1
    M[n-1] = dynamic[N]
print(M)
from bisect import bisect
from sympy import totient
def A365339(n):
    plist, qlist, c = tuple(totient(i) for i in range(1,n+1)), [0]*(n+1), 0
    for i in range(n):
        qlist[a:=bisect(qlist,plist[i],lo=1,hi=c+1,key=lambda x:plist[x])]=i
        c = max(c,a)
    return c # _Chai Wah Wu_, Sep 03 2023

