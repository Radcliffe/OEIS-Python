# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A365249

from sympy import isprime
a=[]
for n in range(3,1000):
  for m in range(1,(n-1)//2+1):
   if (n**2+m)%(n-m)==0:
    if m==(n-1)/2 and not isprime(n):
     a.append(n)
    break
print(a)
from itertools import count, islice
from sympy import isprime
from sympy.abc import x, y
from sympy.solvers.diophantine.diophantine import diop_quadratic
def A365249_gen(startvalue=3): # generator of terms >= startvalue
    return filter(lambda n:not isprime(n) and min(int(x) for x,y in diop_quadratic(n*(n-y)+x*(y+1)) if x>0)==n-1>>1, count(max(startvalue+startvalue&1^1,3),2))
A365249_list = list(islice(A365249_gen(),30)) # _Chai Wah Wu_, Oct 06 2023

