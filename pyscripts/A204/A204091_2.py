# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A204091

from itertools import product
def Lprint(n):
    print("The following generate boards with a unique solution")
    s = 0
    for x in product(["Z", "V", "G", "/", "|"], repeat=n):
        if x[-1] == "/" or x[-1] == "|":
            y = list(x) # Splitting x up into a list pieces
            z = list()
            while y:
                if "/" in y or "|" in y:
                    if "/" in y and "|" in y:
                        m = min(y.index("/"), y.index("|"))
                    else:
                        if "/" in y:
                            m = y.index("/")
                        else:
                            m = y.index("|")
                    if y[0] not in ["/", "|"]:
                        z.append(y[:m])
                    y = y[m + 1 :]
                else:
                    z.append(y)
                    y = []
            goodword = True
            for w in z: # For each element in the list checking for Z&V together
                if "Z" in w and "V" in w:
                    goodword = False
            if goodword:
                s += 1
                print(x)
    return s
print(Lprint(5))

