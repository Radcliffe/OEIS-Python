# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A204089

def a(n, d={0:1, 1:4}):
    if n in d: return d[n]
    d[n] = 4*a(n-1) - 2*a(n-2)
    return d[n]
print([1]+[a(n) for n in range(31)])
#Produces a(n) through enumeration and also displays boards:
def Mprint(n):
 print('The following generate boards with a unique solution')
 s=0
 for x in product(['Z', 'V', 'G', '/'], repeat=n):
  if x[-1]=='/':
   #Splitting x up into a list pieces
   y=list(x)
   z=list()
   while y:
    #print(y)
    if '/' in y:
     if y[0] != '/': #Don't need to add blank pieces to z
      z.append(y[:y.index('/')])
     y=y[y.index('/')+1:]
    else:
     z.append(y)
     y=[]
   #For each element in the list checking for Z&V together
   goodword=True
   for w in z:
    if 'Z' in w and 'V' in w:
     goodword=False
   if goodword:
    s+=1
    print(x)
 return s

