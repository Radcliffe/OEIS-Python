# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A182987

def A182987(n): # becomes slow for n >= 28, but not slower than memory-hungry
   # sum(divisors(primorial(n))[2**(n-1)-1:2**(n-1)+1]) if n else 2
   "Compute A182987(n) = sum of the two central divisors of primorial(n)."
   if n < 2: return n+2
   from math import isqrt # = A000196
   from sympy import primorial # = A002110
   from sympy.ntheory.primetest import is_square # = A010052
   m = primorial(n)*4; a = isqrt(m)|1  ### ceil(sqrt(m))**2 < m  for n = 26..27 !!
   while True:
      if is_square(a*a - m): return a
      a += 2
# _M. F. Hasler_, Mar 21 2022

