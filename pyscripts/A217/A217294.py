# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A217294

SIZE = 29    # must be 4k+1
grid = [0] * (SIZE*SIZE)
posX = posY = SIZE//2
grid[posY*SIZE+posX]=1
n = 2
def walk(stepX, stepY, chkX, chkY):
  global posX, posY, n
  while 1:
    posX+=stepX
    posY+=stepY
    grid[posY*SIZE+posX]=n
    n+=1
    if grid[(posY+chkY)*SIZE+posX+chkX]==0:
        return
while posX:
    walk(0, -1, 1, 0)    # up
    walk(1, 0, 0, 1)     # right
    walk(0, 1, -1, 0)    # down
    walk(-1, 0, 0, -1)   # left
import sys
grid2 = [0] * (SIZE*SIZE)
posX = posY = SIZE//2
grid2[posY*SIZE+posX]=1
def walk2(stepX, stepY, chkX, chkY):
  global posX, posY
  while 1:
    a = grid[posY*SIZE+posX]
    if a==0:
        sys.exit(1)
    print(a, end=', ')
    posX+=stepX
    posY+=stepY
    grid2[posY*SIZE+posX]=1
    if grid2[(posY+chkY)*SIZE+posX+chkX]==0:
        return
while posX<SIZE-2:
    walk2(-1, 0,  1, -1)    # left
    walk2(1, -1,  1,  1)    # up-right
    walk2(1,  1, -1,  0)    # down-right
    walk2(-1, 0,  1, -1)    # left

