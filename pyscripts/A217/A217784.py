# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A217784

from math import isqrt
from sympy import primepi, primerange, integer_nthroot, factorint
def A217784(n):
    def g(x): return int(sum(primepi(x//(k*m))-b for a, k in enumerate(primerange(integer_nthroot(x, 3)[0]+1)) for b, m in enumerate(primerange(k, isqrt(x//k)+1), a)))
    def f(x): return int(n+x-sum(g(integer_nthroot(x, k)[0]) for k in range(1,x.bit_length()) if sum(factorint(k).values())==3))
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    return bisection(f,n,n) # _Chai Wah Wu_, Sep 12 2024

