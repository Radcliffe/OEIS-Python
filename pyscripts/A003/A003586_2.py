# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A003586

from itertools import count, takewhile
def aupto(lim):
    pows2 = list(takewhile(lambda x: x<lim, (2**i for i in count(0))))
    pows3 = list(takewhile(lambda x: x<lim, (3**i for i in count(0))))
    return sorted(c*d for c in pows2 for d in pows3 if c*d <= lim)
print(aupto(10**4)) # _Michael S. Branicky_, Jul 08 2022
from sympy import integer_log
def A003586(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return n+x-sum((x//3**i).bit_length() for i in range(integer_log(x,3)[0]+1))
    return bisection(f,n,n) # _Chai Wah Wu_, Sep 15 2024

