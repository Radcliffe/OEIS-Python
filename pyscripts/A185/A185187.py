# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A185187

# exhaustive search
from sympy import integer_nthroot
def g(n): twon = (1 << n); return twon + 3**n//twon - 2
def greedy(k, n):
    if k < (1 << n): return k
    bigpow = integer_nthroot(k, n)[0]**n
    m, r = divmod(k, bigpow)
    return  m + greedy(r, n)
def a(n):
    k, gn = 2**n, g(n)
    while greedy(k, n) <= gn: k += 1
    return k
print([a(n) for n in range(2, 12)]) # _Michael S. Branicky_, Dec 15 2021

