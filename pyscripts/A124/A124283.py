# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A124283

from math import isqrt
from sympy import prime, primepi, integer_nthroot, primerange
def A124283(n):
    def f(x): return int(prime(n)+x-sum(primepi(x//(k*m*r))-c for a, k in enumerate(primerange(integer_nthroot(x, 4)[0]+1)) for b, m in enumerate(primerange(k, integer_nthroot(x//k, 3)[0]+1), a) for c, r in enumerate(primerange(m, isqrt(x//(k*m))+1), b)))
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    return bisection(f,n,n) # _Chai Wah Wu_, Sep 09 2024

