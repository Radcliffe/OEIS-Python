# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A379749

from sympy import isprime
from sympy.ntheory import digits
def nextsod(n, base):
    c, b, w = 0, base, 0
    while True:
        d = n%b
        if d+1 < b and c:
            return (n+1)*b**w + ((c-1)%(b-1)+1)*b**((c-1)//(b-1))-1
        c += d; n //= b; w += 1
def A226636gen(sod=3, base=3): # generator of terms for any sod, base
    an = (sod%(base-1)+1)*base**(sod//(base-1))-1
    while True: yield an; an = nextsod(an, base)
def a(n):
    for k in A226636gen(sod=n, base=n):
        if sum(digits(k, n+1)[1:]) == n+1 and isprime(k):
            return k
print([a(n) for n in range(2, 56)]) # _Michael S. Branicky_, Jan 04 2025

