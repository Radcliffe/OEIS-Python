# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A243535

from sympy import divisors
from itertools import count, islice, product
def ok(n):
    s = set("1"+str(n))
    if len(s) > 2: return False
    for d in divisors(n, generator=True):
        s |= set(str(d))
        if len(s) > 2: return False
    return len(s) == 2
def agen():
    yield from [2, 3, 5, 7]
    for d in count(2):
        s = set()
        for first, other in product("123456789", "0123456789"):
            for p in product(sorted(set(first+other)), repeat=d-1):
                if other not in p: continue
                t = int(first+"".join(p))
                if ok(t): s.add(t)
        yield from sorted(s)
print(list(islice(agen(), 52))) # _Michael S. Branicky_, Nov 16 2022

