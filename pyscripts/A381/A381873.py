# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A381873

from math import gcd
from sympy import factorint
from functools import cache
from itertools import count, islice
@cache
def omega(n): return len(factorint(n))
def agen(): # generator of terms
    yield 1
    aset, an, m = {1}, 2, 3
    while True:
        yield an
        aset.add(an)
        an = next(k for k in count(m) if k not in aset and gcd(an, k) > 1 and omega(k) <= 2)
        while m in aset or omega(m) > 2: m += 1
print(list(islice(agen(), 66))) # _Michael S. Branicky_, Mar 09 2025

