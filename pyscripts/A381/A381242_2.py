# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A381242

a = [2]
while len(a) < 20:
    a.append(a[-1]+1)
    while any(any(str(k) in str(a[i]*a[j]) for k in a) for i in range(len(a)) for j in range(i,len(a))): a[-1] += 1
print(a)
from itertools import count, islice
def agen():    # generator of terms
    slst, alst, an = [], [], 2
    S = {"4"}  # strings of products of two terms (including self products)
    while True:
        alst.append(an)
        slst.append(str(an))
        yield an
        for k in count(an+1):
            sk = str(k)
            if any(sk in s for s in S): continue
            Pk = [str(ai*k) for ai in alst] + [str(k*k)]
            if any(si in s for s in Pk for si in slst+[sk]): continue
            an = k
            S |= set(Pk)
            break
print(list(islice(agen(), 42))) # _Michael S. Branicky_, Mar 26 2025

