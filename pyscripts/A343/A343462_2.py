# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A343462

def aupton(terms):
  up, dn, alst = [0] + [1]*9, [0] + [1]*9, [9]
  for n in range(2, terms+1):
    up_next = [sum(dn[j] for j in range(i)) for i in range(10)]
    dn_next = [sum(up[j] for j in range(i+1, 10)) for i in range(10)]
    up, dn = up_next, dn_next
    alst.append(sum(up + dn))
  return alst
print(aupton(22)) # _Michael S. Branicky_, Apr 16 2021
 # alternate program as a linear system
import numpy as np
from sympy import Matrix
def aupton(terms):
  x = Matrix([0] + [1]*9 + [0] + [1]*9)
  c = Matrix([[1]*20])
  z10 = np.zeros((10, 10), dtype=np.int64)
  o10 = np.ones((10, 10), dtype=np.int64)
  A = Matrix(np.block([[z10, np.tril(o10, -1)], [np.triu(o10, +1), z10]]))
  alst = [9]
  for n in range(2, terms+1):
    x = A*x
    alst.append((c*x)[0])
  return alst
print(aupton(22)) # _Michael S. Branicky_, Apr 16 2021

