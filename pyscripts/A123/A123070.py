# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A123070

 # Emulate a breadth-first traversal of the tree defining the "flip-tree" of the Hofstadter G-sequence.
def gflip_iter():
    yield 0
    yield 1
    # Start on a left-branch node, parent node is 1.
    queue = [(1, 1)]
    n = 2
    while True:
        parent, state = queue.pop(0)
        yield parent
        if state == 0:
            # Root node. Add the two children.
            queue.append((n, 1))
            queue.append((n, 0))
        elif state == 1:
            # Left-branch node. Add a new root.
            queue.append((n, 0))
        n += 1
i = gflip_iter()
for n in range(0, 10001):
    print("%d %d" % (n, next(i)))
# David Fifield (david(AT)bamsoftware.com), Jan 17 2009

