# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A215470

SIZE = 3335  # must be odd
TOP = SIZE*SIZE
prime = [1]*TOP
prime[1]=0
for i in range(4,TOP,2):
    prime[i]=0
for i in range(3,TOP,2):
    if prime[i]==1:
        for j in range(i*3,TOP,i*2):
            prime[j]=0
grid = [0] * TOP
posX = posY = SIZE//2
grid[posY*SIZE+posX] = 1
n = 2
saveX = [0]* (TOP+1)
saveY = [0]* (TOP+1)
saveX[1]=posX
saveY[1]=posY
def walk(stepX, stepY, chkX, chkY):
  global posX, posY, n
  while 1:
    posX+=stepX
    posY+=stepY
    grid[posY*SIZE+posX]=n
    saveX[n]=posX
    saveY[n]=posY
    n+=1
    if posX*posY==0 or grid[(posY+chkY)*SIZE+posX+chkX]==0:
        return
while 1:
    walk(0, -1, 1, 0)   # up
    if posX*posY==0:
        break
    walk(1, 0, 0, 1)    # right
    walk(0, 1, -1, 0)   # down
    walk(-1, 0, 0, -1)  # left
for s in range(1, n):
  if prime[s]:
    posX = saveX[s]
    posY = saveY[s]
    a,b=(grid[(posY-1)*SIZE+posX-1]) , (grid[(posY-1)*SIZE+posX+1])
    c,d=(grid[(posY+1)*SIZE+posX-1]) , (grid[(posY+1)*SIZE+posX+1])
    if a*b==0 or c*d==0:
        break
    if prime[a]+prime[b]+prime[c]+prime[d]==4:
        print s,

