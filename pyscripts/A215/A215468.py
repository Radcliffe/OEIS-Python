# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A215468

SIZE=17  # must be odd
grid = [0] * (SIZE*SIZE)
posX = posY = SIZE//2
saveX = [0]* (SIZE*SIZE+1)
saveY = [0]* (SIZE*SIZE+1)
grid[posY*SIZE+posX]=1
saveX[1]=posX
saveY[1]=posY
posX += 1
grid[posY*SIZE+posX]=2
saveX[2]=posX
saveY[2]=posY
n = 3
def walk(stepX, stepY, chkX, chkY):
  global posX, posY, n
  while 1:
    posX+=stepX
    posY+=stepY
    grid[posY*SIZE+posX]=n
    saveX[n]=posX
    saveY[n]=posY
    n+=1
    if grid[(posY+chkY)*SIZE+posX+chkX]==0:
        return
while posX!=SIZE-1:
    walk(-1,  1, -1, -1)    # down-left
    walk(-1, -1,  1, -1)    # up-left
    walk( 1, -1,  1,  0)    # up-right
    walk( 1,  0,  1,  1)    # right
    walk( 1,  1, -1,  1)    # down-right
for s in range(1, n):
    posX = saveX[s]
    posY = saveY[s]
    i,j = grid[(posY-1)*SIZE+posX-1], grid[(posY-1)*SIZE+posX+1]
    u,v = grid[(posY+1)*SIZE+posX-1], grid[(posY+1)*SIZE+posX+1]
    if i==0 or j==0 or u==0 or v==0:
        break
    k = grid[(posY-1)*SIZE+posX  ] + grid[(posY+1)*SIZE+posX  ]
    k+= grid[ posY   *SIZE+posX-1] + grid[ posY   *SIZE+posX+1]
    print i+j+u+v+k,
print
for y in range(SIZE):
    for x in range(SIZE):
        print '%3d' % grid[y*SIZE+x],
    print

