# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A335972

def dead_end(k): return k%10 in {0, 9}
def aupto(n, seed=2):
  train, used = [seed], {seed}
  for n in range(2, n+1):
    caboose = train[-1]
    hook = caboose % 10
    low2, high2 = 10 + (hook + 1), 90 + (hook - 1)
    an, pow10b = low2, 1
    while an in used or dead_end(an): an += 1
    first2 = an//pow10b
    a2, b2 = divmod(first2, 10)
    while True:
      if a2 < hook < b2 or a2 > hook > b2:
        train.append(an)
        used.add(an)
        break
      if first2 > high2:
        pow10b *= 10
        an = low2*pow10b
      else:
        an += pow10b
        an -= an%pow10b
      while an in used or dead_end(an): an += 1
      first2 = an//pow10b
      a2, b2 = divmod(first2, 10)
  return train    # use train[n-1] for a(n)
print(aupto(66))  # _Michael S. Branicky_, Dec 14 2020

