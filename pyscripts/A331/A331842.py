# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A331842

import sympy
def A331842(n):
  c=0
  d=sympy.divisors(n)
  i=2
  while 2**i<=n*(1+i):
    for j in d:
      if sympy.gcd(i,j)==1:
        e=sympy.perfect_power(n+i*n//j,[i])
        if e and e[1]%i==0: # The divisibility test is not necessary from version 1.5 of sympy.
          c+=1 # Count the solution (x,y)=(m^j,m^(j+i)), where m=e[0]**(e[1]//i).
    i+=1
  return c+1+len(d) # Add the number of "standard" solutions.

