# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A338557

from itertools import filterfalse
from math import isqrt
from sympy import primepi, primerange, nextprime, integer_nthroot
def A338557(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return int(n+x-sum((primepi(x//(k*m))>>1)-(b>>1) for a,k in filterfalse(lambda x:x[0]&1,enumerate(primerange(3,integer_nthroot(x,3)[0]+1),2)) for b,m in filterfalse(lambda x:x[0]&1,enumerate(primerange(nextprime(k)+1,isqrt(x//k)+1),a+2))))
    return bisection(f,n,n) # _Chai Wah Wu_, Oct 18 2024

