# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A271329

from math import isqrt
from sympy import primepi, primerange, integer_nthroot, divisor_sigma
def A271329(n):
    def f(x): return int(n+x-sum(primepi(x//(k*m))-b for a,k in enumerate(primerange(integer_nthroot(x,3)[0]+1),1) for b,m in enumerate(primerange(k+1,isqrt(x//k)+1),a+1)))
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    return divisor_sigma(bisection(f)) # _Chai Wah Wu_, Aug 30 2024

