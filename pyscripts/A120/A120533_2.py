# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A120533

from itertools import islice
from sympy import isprime, nextprime
def agen(): # generator of terms
    d = 2
    while True:
        yield from (i for i in range(10**(d-1)+1, 10**d, 2) if isprime(i))
        d = nextprime(d)
print(list(islice(agen(), 57))) # _Michael S. Branicky_, Dec 27 2023
from sympy import primepi, primerange
def A272441(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return n+x-sum(primepi(min(x,(1<<i)-1))-primepi((1<<i-1)-1) for i in primerange(2,x.bit_length()+1))
    return bisection(f,n,n) # _Chai Wah Wu_, Feb 03 2025

