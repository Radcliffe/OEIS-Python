# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A276108

from sympy import mobius, integer_nthroot, isprime, divisor_count
def A276108(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return int(n+sum(mobius(k)*(integer_nthroot(x,k)[0]-1+sum(integer_nthroot(x,i*k)[0]-1 for i in range(2,(x//k).bit_length()) if isprime(i) or isprime(divisor_count(i)-1))) for k in range(1,x.bit_length())))
    return bisection(f,n,n) # _Chai Wah Wu_, Nov 25 2024

