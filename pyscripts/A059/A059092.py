# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A059092

from itertools import permutations
def zpan(n): s = str(n); return "0" not in s and len(s) == len(set(s)) == 9
def afind(verbose=False):
    aset = set()
    for p in permutations("987654321"):
        for mlocs in ["1234", "1235", "1236", "1246", "1357"]:
            ops = ["*" if str(i) in mlocs else "" for i in range(9)]
            e = "".join(ops[i]+p[i] for i in range(9))
            t = eval(e)
            if zpan(t) and t not in aset:
                aset.add(t)
                if verbose: print(f"{t} = {e}")
    return sorted(aset)
print(afind(verbose=True)) # _Michael S. Branicky_, Aug 05 2022

