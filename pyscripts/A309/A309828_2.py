# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A309828

def Test(n):
    s = str(n)
    ps, ss = s[0:len(s)//2], s[len(s)//2:len(s)]
    return int(ss) == 2*int(ps)+1 and s[len(s)//2] != "0"
n, a = 1, 4
while n < 23:
    if Test(a*a):
        print(n,a*a)
        n = n+1
    a = a+1 # _A.H.M. Smeets_, Aug 19 2019
from itertools import count, islice
from sympy.ntheory.primetest import is_square
def A309828_gen(): # generator of terms
    return filter(is_square,(int(str(k)+str((k<<1)+1)) for k in count(1)))
A309828_list = list(islice(A309828_gen(),20)) # _Chai Wah Wu_, Feb 20 2023

