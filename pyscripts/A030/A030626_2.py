# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A030626

from sympy import divisor_count
isok = lambda n: divisor_count(n) == 8
print([n for n in range(1, 400) if isok(n)]) # _DarÃ­o Clavijo_, Oct 17 2023
from math import isqrt
from sympy import primepi, primerange, integer_nthroot
def A030626(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return int(n+x-sum(primepi(x//(k*m))-b for a,k in enumerate(primerange(integer_nthroot(x,3)[0]+1),1) for b,m in enumerate(primerange(k+1,isqrt(x//k)+1),a+1))-sum(primepi(x//p**3) for p in primerange(integer_nthroot(x,3)[0]+1))+primepi(integer_nthroot(x,4)[0])-primepi(integer_nthroot(x,7)[0]))
    return bisection(f,n,n) # _Chai Wah Wu_, Feb 21 2025

