# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A030141

from itertools import count
def A030141_gen(startvalue=0): # generator of terms >= startvalue
    return filter(lambda n:all(int(a)+int(b)&1 for a, b in zip(str(n),str(n)[1:])),count(max(startvalue,0)))
A030141_list = list(islice(A030141_gen(),30)) # _Chai Wah Wu_, Jul 12 2022
from itertools import chain, count, islice
def altgen(seed, digits):
    allowed = "02468" if seed in "13579" else "13579"
    if digits == 1: yield from allowed; return
    for f in allowed: yield from (f + r for r in altgen(f, digits-1))
def agen(): yield from chain(range(10), (int(f+r) for d in count(2) for f in "123456789" for r in altgen(f, d-1)))
print(list(islice(agen(), 65))) # _Michael S. Branicky_, Jul 12 2022

