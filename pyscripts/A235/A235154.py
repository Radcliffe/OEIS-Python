# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A235154

from sympy import isprime
from sympy.utilities.iterables import multiset_permutations
from itertools import count, islice, combinations_with_replacement, product
def agen():
    for digits in count(2):
        s = set()
        for pair in product("0123456789", "1379"):
            if pair[0] == pair[1]: continue
            for c in combinations_with_replacement(pair, digits):
                if len(set(c)) < 2 or sum(int(ci) for ci in c)%3 == 0:
                    continue
                for p in multiset_permutations(c):
                    if p[0] == "0": continue
                    t = int("".join(p))
                    if isprime(t):
                        s.add(t)
        yield from sorted(s)
print(list(islice(agen(), 100))) # _Michael S. Branicky_, Jan 23 2022

