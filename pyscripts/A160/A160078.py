# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A160078

from sympy.ntheory.digits import digits
def make_int(l, b):
    return int(''.join(str(d) for d in l), b)
maxn = 102
it = []
for i in range( 1, maxn ) :
    d = digits( i, 2 )[1:]
    isLychrel = True
    for j in range( 1000 ) :
        d = digits( make_int( d, 2 ) + make_int( d[::-1], 2 ), 2 )[1:]
        if d == d[::-1] :
            it.append( j + 1 )
            isLychrel = False
            break
    if isLychrel :
        it.append( 0 )
print('Maximum iterations for non-seed numbers', max( it ))
Lychrel = []
for i in range( len(it) ) :
    if it[i] == 0 :
        Lychrel.append( i + 1 )
print('Count of binary Lychrel numbers', len( Lychrel ))
print('All binary lichler under', maxn)
print('Decimal form', Lychrel)
print('Binary form', list(map( lambda x: ''.join( map( str, toSystem( x, 2 ) ) ), Lychrel )))

