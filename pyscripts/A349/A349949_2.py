# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A349949

from sympy import divisors
def aupton(nn):
    alst, prevdivs, divs, nextdivs = [], set(), {1}, {1, 2}
    for n in range(2, nn+1):
        prevdivs, divs, nextdivs = divs, nextdivs, set(divisors(n+1))
        neighdivs = prevdivs | nextdivs
        an = sum(1 for d in divs if {d-1, d+1} & neighdivs != set())
        alst.append(an)
    return alst
print(aupton(88)) # _Michael S. Branicky_, Dec 06 2021
def A349949(n): return sum(1 for m in filter(lambda d:not (((n-1) % (d-1) if d > 1 else True) and (n-1) % (d+1) and ((n+1) % (d-1) if d > 1 else True) and (n+1) % (d+1)), divisors(n,generator=True))) # _Chai Wah Wu_, Dec 30 2021

