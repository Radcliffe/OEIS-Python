# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A373652

from sympy import integer_nthroot, gcd, isprime
def s(k):
  c = integer_nthroot(k, 4)[0]
  f = [1]*c
  for i in range(1, c+1):
    for j in range(c*i+1, c*(i+1)+1):
      f[i-1] = (f[i-1] * j) % k
    f[i-1] = gcd(f[i-1], k)
  return f
isok = lambda k: not isprime(k) and not any(k > x > 1 for x in s(k))
print([k for k in range(4, 7200) if isok(k)])
from itertools import count, islice
from math import gcd, prod
from sympy import isprime
def A373652_gen(): # generator of terms
    for c in count(1):
        g = [prod(i*c+j for j in range(1,c+1)) for i in range(1,c+1)]
        yield from filter(lambda k: not (k==1 or isprime(k) or any(1<gcd(d,k)<k for d in g)), range(c**4,(c+1)**4))
A373652_list = list(islice(A373652_gen(),20)) # _Chai Wah Wu_, Jul 16 2024

