# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A350404

from itertools import product
from sympy import prime, primerange
def a(n):
    if n == 0: return 1
    nn = ["0"] + [str(i) for i in primerange(2, prime(n)+1)]
    return sum(eval("".join([*sum(zip(nn, ops+("", )), ())])) in {0, 1} for ops in product("+-", repeat=n))
print([a(n) for n in range(18)]) # _Michael S. Branicky_, Jan 16 2022
from sympy import sieve, primerange
from functools import cache
@cache
def b(n, i):
    maxsum = 0 if i == 0 else sum(p for p in primerange(2, sieve[i]+1))
    if n > maxsum: return 0
    if i == 0: return 1
    return b(n+sieve[i], i-1) + b(abs(n-sieve[i]), i-1)
def a(n): return b(0, n) + b(1, n)
print([a(n) for n in range(43)]) # _Michael S. Branicky_, Jan 16 2022

