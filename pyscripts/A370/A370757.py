# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A370757

from itertools import count
from sympy import multiplicity, n_order
def A370757(n):
    m2, m5 = (~n & n-1).bit_length(), multiplicity(5,n)
    r = max(m2,m5)
    w, m = 10**r, 10**(t:=n_order(10,n2) if (n2:=(n>>m2)//5**m5)>1 else 1)-1
    c = w//n
    s = str(m*w//n-c*m).zfill(t)
    l = len(s)
    for k in count(1):
        m2, m5 = (~k & k-1).bit_length(), multiplicity(5,k)
        r = max(m2,m5)
        w, m = 10**r, 10**(t:=n_order(10,k2) if (k2:=(k>>m2)//5**m5)>1 else 1)-1
        c = w//k
        if any(s[i:]+s[:i] == str(m*w//k-c*m).zfill(t) for i in range(l)):
            return k # _Chai Wah Wu_, Mar 03 2024

