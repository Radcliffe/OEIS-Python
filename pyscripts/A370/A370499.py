# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A370499

from math import gcd
from sympy import factorint
from functools import cache
from itertools import count, islice
@cache
def sWd(n):
    f = factorint(n)
    return (sum(p*e for p,e in f.items()), sum(f.values()), str(n))
def agen(): # generator of terms
    yield 1
    aset, an, mink = {1, 20}, 20, 2
    while True:
        yield an
        s, W, d = sWd(an)
        an = next(k for k, sk, Wk, dk in ((k,)+sWd(k) for k in count(mink)) if k not in aset and gcd(k, an)==1 and gcd(sk, s)==1 and Wk!=W and len(dk)!=len(d) and set(dk)&set(d)==set())
        aset.add(an)
        while mink in aset: mink += 1
print(list(islice(agen(), 70))) # _Michael S. Branicky_, Feb 21 2024

