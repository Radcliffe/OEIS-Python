# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A356715

 # See Conrad link.
from itertools import islice
from sympy.ntheory import digits
def fd(d, b): return sum(b**i*di for i, di in enumerate(d[::-1]))
def cdb2(n, base=3):
    d, out = digits(n, base)[1:], {n}
    for l in range(1, len(d)+1):
        for i in range(len(d)+1-l):
            if d[i] == 0: continue
            t = fd(d[i:i+l], base)
            out.add(fd(d[:i] + digits(2*t, base)[1:] + d[i+l:], base))
            if t&1 == 0:
                out.add(fd(d[:i] + digits(t//2, base)[1:] + d[i+l:], base))
    return out
def agen():
    reach, expand = {1}, [1]
    while True:
        yield len(reach) #; print(reach); print([digits(t, 3)[1:] for t in sorted(reach)])
        newreach = {r for q in expand for r in cdb2(q) if r not in reach}
        reach |= newreach
        expand = list(newreach)
print(list(islice(agen(), 10))) # _Michael S. Branicky_, Aug 24 2022

