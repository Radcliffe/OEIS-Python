# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A356660

from sympy import divisors
def t_sum_of_n_div(n, target):
    out, p = [], divisors(n)[::-1][1:]
    def dfs(t, divs,  index_s, kk):
        if len(out)!=0 or kk>target:return
        if kk == target and t == 0:
            out.append(divs)
            return
        for i in range(index_s, len(p)):
            if t >= p[i]:
                temp_divs = divs.copy()
                temp_divs.append(p[i])
                dfs(t-p[i], temp_divs, i, kk+1)
    dfs(n, [], 0, 0)
    return out
terms = [i for i in range(2, 200) if len(t_sum_of_n_div(i,10))!=0]
print(terms) # _Gleb Ivanov_, Sep 02 2022

