# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A277549

from itertools import count, islice
def A277549_gen(startvalue=1): # generator of terms >= startvalue
    return filter(lambda n:(n>>((~n&n-1).bit_length()&-2))&3==1,count(max(startvalue,1)))
A277549_list = list(islice(A277549_gen(),30)) # _Chai Wah Wu_, Jul 09 2022
def A277549(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x): return n+x-sum(((x>>(i<<1))-1>>2)+1 for i in range((x.bit_length()>>1)+1))
    return bisection(f,n,n) # _Chai Wah Wu_, Mar 19 2025

