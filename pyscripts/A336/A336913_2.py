# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A336913

'''
Program that confirms that 3^x+1 trajectories end with 1.
We avoid the expensive 3^n+1 calculation based on the following:
- 3^n is not a power of two (for n >= 1).
- 3^n+1 is not a power of two (for n > 1) because of the Catalan Conjecture, which was proven in 2002.
- Thus, floor(log2(3^n+1)) == floor(log2(3^n)) == floor(n*log2(3)) for n > 1.
Thanks to Clark R. Lyons for this optimization.
'''
from math import floor, log
log2_of_3 = log(3, 2) # 16 digits after the decimal point.
max_n = 10**15 / 2    # Larger values multiplied by log2_of_3 may have rounding errors.
def check_trajectory(n):
    while n > 1:
        if n % 2 == 0:
            n = int(floor(log(n, 2)))
        else:
            if n > max_n:
                raise ValueError(str(n) + " is too large to be multiplied by log2_of_3")
            n = int(floor(n * log2_of_3))
n = 1
while n <= 1000000000:
    check_trajectory(n)
    n += 1

