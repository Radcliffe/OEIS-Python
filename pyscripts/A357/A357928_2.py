# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A357928

from gmpy2 import *
def fermat(n):
    a, rem = isqrt_rem(n)
    b2 = -rem
    c0 = (a << 1) + 1
    c = c0
    while not is_square(b2):
        b2 += c
        c += 2
    return (c-c0) >> 1
def A357928(n):
  if is_square(n):
      return 0
  elif ((n-2) % 4) != 0:
      return fermat(n)
  else:
      return -1
from math import isqrt
from itertools import takewhile
from sympy import divisors
def A357928(n): return -1 if n&3==2 else min((m>>1 for d in takewhile(lambda d:d**2<=n,divisors(n)) if not((m:=n//d+d) & 1)),default=0) - isqrt(n) # _Chai Wah Wu_, Oct 26 2022

