# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A357368

def ConvTriangle(dim: int, a) -> list[list[int]]:
    if callable(a): # Cache the input sequence.
        A = [a(i) for i in range(1, dim)]
    else:
        A = a
    print("In:", A)
    C = [[0 for k in range(m + 1)] for m in range(dim)]
    C[0][0] = 1
    for m in range(1, dim):
        C[m][m] = C[m - 1][m - 1] * A[0]
        for k in range(m - 1, 0, -1):
            C[m][k] = sum(A[i] * C[m - i - 1][k - 1] for i in range(m - k + 1))
    return C
from sympy import isprime, flatten
def a(n): return n if isprime(n) else 1
print(flatten(ConvTriangle(10, a)))

