# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A357044

from itertools import count, islice
def ispal(n): s = str(n); return s == s[::-1]
def nextpal(p): # next largest palindrome after palindrome p
    d = str(p)
    if set(d) == {'9'}: return int('1' + '0'*(len(d)-1) + '1')
    h = str(int(d[:(len(d)+1)//2]) + 1)
    return int(h + h[:-1][::-1]) if len(d)&1 else int(h + h[::-1])
def agen():
    aset, pal, minpal = {1}, 1, 2
    while True:
        an = pal; yield an; aset.add(an); pal = minpal
        while pal in aset or ispal(an+pal): pal = nextpal(pal)
        while minpal in aset: minpal = nextpal(minpal)
print(list(islice(agen(), 55))) # _Michael S. Branicky_, Sep 14 2022

