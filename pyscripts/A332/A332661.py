# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A332661

from itertools import count, islice, product
def ispal(n): s = str(n); return s == s[::-1]
def pals(): # generator of palindromes
    digits = "0123456789"
    for d in count(1):
        for p in product(digits, repeat=d//2):
            if d > 1 and p[0] == "0": continue
            left = "".join(p); right = left[::-1]
            for mid in [[""], digits][d%2]: yield int(left + mid + right)
def agen(): # generator of terms
    an, aset = 1, {0, 1} # 0 is not allowed
    yield 1
    while True:
        for p in pals():
            if p not in aset and ispal(an*p):
                an = p; aset.add(an); yield an; break
print(list(islice(agen(), 51))) # _Michael S. Branicky_, Apr 29 2022

