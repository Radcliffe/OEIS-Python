# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A289548

from sympy import factorint, nextprime
def is_semiprime(n):
    return sum(e for e in factorint(n).values()) == 2
def next_semiprime(n):
    nxt = n + 1
    while not is_semiprime(nxt): nxt += 1
    return nxt
def are_consecutive(p, q):
    return max(p, q) == nextprime(min(p, q))
def ok(n):
    if not is_semiprime(n): return False
    nextsp = next_semiprime(n)
    fn, fm = factorint(n, multiple=True), factorint(nextsp, multiple=True)
    return are_consecutive(fn[0], fm[0]) and are_consecutive(fn[1], fm[1])
print(list(filter(ok, range(150000)))) # _Michael S. Branicky_, Sep 14 2021

