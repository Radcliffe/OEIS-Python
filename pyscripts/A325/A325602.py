# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A325602

 def is_nxn(x,y,n):
    if all([gcd(x+a,y+b) != 1 for a in range(n) for b in range(n)]):
        return True
    return False
def insert_item(pts, item, index):
    N = len(pts)
    if N == 0:
      return [item]
    elif N == 1:
        if item[index] < pts[0][index]:
            pts.insert(0,item)
        else:
            pts.append(item)
        return pts
    else: #binary insertion
        left = 1
        right = N
        mid = ((left + right)/2).floor()
        if item[index] < pts[mid][index]:
        # item goes into first half
            return insert_item(pts[:mid], item, index) + pts[mid:N]
        else:
        # item goes into second half
            return pts[:mid] + insert_item(pts[mid:N], item, index)
B=1200
L=[]
for x in range(1,B):
    for y in range(x+1,B):
        if is_nxn(x,y,n=2):
            G=[x,y,x^2+y^2]
            L=insert_item(L, G, 2)

