# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A325112

from itertools import combinations
def A325112(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        c, l = 0, len(str(x))
        for i in range(l):
            k = 10**i
            for j in (1,2,4,5,7,8):
                if j*k<=x:
                    c += 1
        for a in combinations((10**i for i in range(l)),2):
            for b in ((1, 1), (1, 4), (1, 7), (2, 2), (2, 5), (2, 8), (4, 1), (4, 4), (4, 7), (5, 2), (5, 5), (5, 8), (7, 1), (7, 4), (7, 7), (8, 2), (8, 5), (8, 8)):
                if a[0]*b[0]+a[1]*b[1] <= x:
                    c += 1
        return n+x-c
    return bisection(f,n,n) # _Chai Wah Wu_, Sep 10 2024

