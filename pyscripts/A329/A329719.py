# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A329719

def isSegmentSum(digits,segment1=None,segment2=None):
    digits = str(digits)
    N = len(digits)
    if N == 0:
        return True
    else:
        if (segment1 is None) and (segment2 is None):
            for i in range(N):
                try:
                    slice1 = digits[:i+1]
                    for j in range(N-(i+1)):
                        slice2 = digits[i+1:i+1+j+1]
                        slice3 = digits[i+1+j+1:]
                        if (isSegmentSum(slice3,slice1,slice2) and
                         len(slice3)>0 and not (slice1.startswith("0") or
                         slice2.startswith("0") or
                         (slice3.startswith("0")))):
                            return True
                except:
                    return False
        else:
            sumOfDigits = str(int(segment1)+int(segment2))
            nS = len(sumOfDigits)
            try:
                if digits[:nS] == sumOfDigits:
                    return isSegmentSum(digits[nS:],segment2,digits[:nS])
                else:
                    return False
            except:
                return False
    return False
def findSegmentSum(lower,upper):
    for i in range(lower,upper+1):
        if isSegmentSum(i):
            print(str(i))
findSegmentSum(1, 5200)

