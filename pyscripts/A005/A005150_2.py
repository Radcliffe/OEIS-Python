# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A005150

def A005150(n):
    p = "1"
    seq = [1]
    while (n > 1):
        q = ''
        idx = 0 # Index
        l = len(p) # Length
        while idx < l:
            start = idx
            idx = idx + 1
            while idx < l and p[idx] == p[start]:
                idx = idx + 1
            q = q + str(idx-start) + p[start]
        n, p = n - 1, q
        seq.append(int(p))
    return seq
# Olivier Mengue (dolmen(AT)users.sourceforge.net), Jul 01 2005
def A005150(n):
    seq = [1] + [None] * (n - 1) # allocate entire array space
    def say(s):
        acc = '' # initialize accumulator
        while len(s) > 0:
            i = 0
            c = s[0] # char of first run
            while (i < len(s) and s[i] == c): # scan first digit run
                i += 1
            acc += str(i) + c # append description of first run
            if i == len(s):
                break # done
            else:
                s = s[i:] # trim leading run of digits
        return acc
    for i in range(1, n):
        seq[i] = int(say(str(seq[i-1])))
    return seq
# E. Johnson (ejohnso9(AT)earthlink.net), Mar 31 2008

