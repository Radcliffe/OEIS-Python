# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A005114

from sympy import divisor_sigma as sigma
from functools import cache
@cache
def f(m): return sigma(m)-m
def okA005114(n):
    if n < 2: return 0
    return not any(f(m) == n for m in range(1, (n-1)**2+1))
print([k for k in range(289) if okA005114(k)]) # _Michael S. Branicky_, Nov 16 2024
 # faster for intial segment of sequence
from itertools import count, islice
from sympy import divisor_sigma as sigma
def agen(): # generator of terms
    n, touchable, t = 2, {0, 1}, 1
    for m in count(2):
        touchable.add(sigma(m)-m)
        while m > t:
            if n not in touchable:
                yield n
            else:
                touchable.discard(n)
            n += 1
            t = (n-1)**2
print(list(islice(agen(), 20))) # _Michael S. Branicky_, Nov 16 2024

