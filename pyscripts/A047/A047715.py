# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A047715

limit = 1153
from functools import lru_cache
qd = [k**4 for k in range(1, int(limit**.25)+2) if k**4 + 3 <= limit]
qds = set(qd)
@lru_cache(maxsize=None)
def findsums(n, m):
  if m == 1: return {(n,)} if n in qds else set()
  return set(tuple(sorted(t+(q,))) for q in qds for t in findsums(n-q, m-1))
A003338s = set(n for n in range(4, limit+1) if len(findsums(n, 4)) >= 1)
A003337s = set(n for n in range(3, limit+1) if len(findsums(n, 3)) >= 1)
A003336s = set(n for n in range(2, limit+1) if len(findsums(n, 2)) >= 1)
print(sorted(A003338s - A003337s - A003336s - qds)) # _Michael S. Branicky_, Apr 19 2021

