# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A265640

from math import isqrt
from sympy.ntheory.factor_ import core, isprime
def ok(n): return isqrt(n)**2 == n or isprime(core(n))
print([k for k in range(1, 145) if ok(k)]) # _Michael S. Branicky_, Oct 03 2024
from math import isqrt
from sympy import primepi, mobius
def A265640(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def f(x):
        c = n-(a:=isqrt(x))
        for y in range(1,a+1):
            m = x//y**2
            c -= primepi(m)-sum(mobius(k)*(m//k**2) for k in range(1, isqrt(m)+1))
        return c
    return bisection(f,n,n) # _Chai Wah Wu_, Jan 30 2025

