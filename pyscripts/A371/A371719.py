# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A371719

from itertools import product
from collections import defaultdict
def sfs(w): # is strongly factor symmetric
    p, q, d = w.count('0'), w.count('1'), defaultdict(lambda: set())
    d[0, 0] = set([""])
    for b in range(len(w)):
        for e in range(b+1, len(w)+1):
            i, j = w[b:e].count('0'), w[b:e].count('1')
            d[i, j].add(w[b:e])
    return all(len(d[p-i, q-j])==len(d[i, j]) for i in range(p+1) for j in range(q+1))
def a(n):
    if n == 0: return 1
    return 2*sum(1 for w in product("01", repeat=n-1) if sfs("0"+"".join(w)))
print([a(n) for n in range(17)]) # _Michael S. Branicky_, Apr 04 2024

