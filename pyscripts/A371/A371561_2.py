# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A371561

from math import prod
from itertools import count, islice, combinations_with_replacement as mc
def A031347(n):
    while n > 9: n = prod(map(int, str(n)))
    return n
def bgen(): yield from (m for d in count(1) for m in mc((3,5,7,9), d))
def agen(): yield from (int("".join(map(str, t))) for t in bgen() if A031347(prod(t)) == 5)
print(list(islice(agen(), 19))) # _Michael S. Branicky_, Apr 17 2024, edited Apr 18 2024 after _Chai Wah Wu_
from math import prod
from itertools import count, islice
def A371561_gen(): # generator of terms
    for l in count(1):
        for a in range(l,-1,-1):
            a3 = 3**a
            for b in range(l-a,-1,-1):
                b3 = a3*5**b
                for c in range(l-a-b,-1,-1):
                    d = l-a-b-c
                    d3 = b3*7**c*9**d
                    while d3 > 9:
                        d3 = prod(int(x) for x in str(d3))
                    if d3==5:
                        yield (10**(a+b+c+d)-1)//3+(10**d*(10**c*(10**b+1)+1)-3)*2//9
A371561_list = list(islice(A371561_gen(),19)) # _Chai Wah Wu_, Apr 17 2024

