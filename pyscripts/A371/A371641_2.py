# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A371641

from itertools import count
from sympy.ntheory import digits
from sympy import factorint, isprime
def fromdigits(d, b):
    n = 0
    for di in d: n *= b; n += di
    return n
def a(n):
    for k in count(4):
        if isprime(k): continue
        sf = []
        for p, e in factorint(k).items():
            sf.extend(e*digits(p, n)[1:])
        if fromdigits(sf, n)%k == 0:
            return k
print([a(n) for n in range(2, 6)]) # _Michael S. Branicky_, Apr 01 2024
from itertools import count
from sympy import factorint, integer_log
def A371641(n):
    for m in count(4):
        f = factorint(m)
        if sum(f.values()) > 1:
            c = 0
            for p in sorted(f):
                a = pow(n,integer_log(p,n)[0]+1,m)
                for _ in range(f[p]):
                    c = (c*a+p)%m
            if not c:
                return m # _Chai Wah Wu_, Apr 11 2024

