# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A342546

from sympy import integer_nthroot
from numba import njit
@njit # works with 64 bits through a(12)
def digits1(n, b):
  count1 = 0
  while n >= b:
    n, r = divmod(n, b)
    count1 += (r==1)
  return count1 + (n==1)
def a(n):
  an = integer_nthroot(n**(n-1), 2)[0] + 1
  while digits1(an*an, n) != n: an += 1
  return an
print([a(n) for n in range(2, 10)]) # _Michael S. Branicky_, Apr 07 2021

