# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A372280

from sympy import factorint, isprime
from itertools import count, islice, combinations_with_replacement as mc
def ni(s): return s == "".join(sorted(s, reverse=True))
def bgen(d):
    yield from ("".join(m) for m in mc("0123456789", d) if m[0]!="0")
def agen(): # generator of terms
    for d in count(1):
        for s in bgen(d):
            t = int(s)
            if t < 4 or isprime(t): continue
            if ni("".join(str(p)*e for p,e in factorint(t).items())):
                yield t
print(list(islice(agen(), 41))) # _Michael S. Branicky_, Apr 26 2024

