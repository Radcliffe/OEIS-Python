# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A066411

from sympy import binomial
def partitionpairs(xlist): # generator of all partitions into pairs and at most 1 singleton, returning the sums of the pairs
    if len(xlist) <= 2:
        yield [sum(xlist)]
    else:
        m = len(xlist)
        for i in range(m-1):
            for j in range(i+1,m):
                rem = xlist[:i]+xlist[i+1:j]+xlist[j+1:]
                y = [xlist[i]+xlist[j]]
                for d in partitionpairs(rem):
                    yield y+d
def A066411(n):
    b = [binomial(n,k) for k in range(n//2+1)]
    return len(set((sum(d[i]*b[i] for i in range(n//2+1)) for d in partitionpairs(list(range(n+1)))))) # _Chai Wah Wu_, Oct 19 2021

