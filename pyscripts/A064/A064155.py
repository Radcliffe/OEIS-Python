# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A064155

from math import prod
from sympy import isprime
from sympy.utilities.iterables import multiset_permutations as mp
from itertools import count, islice, combinations_with_replacement as mc
def c(s):
    d = list(map(int, s))
    return prod(d) == len(d)*sum(d)
def agen():
    yield from (2, 3, 5, 7)
    for d in count(2):
        okset = set()
        for cand in ("".join(m) for m in mc("987654321", d)):
            if c(cand):
                for p in mp(cand, d):
                    t = int("".join(p))
                    if isprime(t): okset.add(t)
        yield from sorted(okset)
print(list(islice(agen(), 38))) # _Michael S. Branicky_, Nov 30 2022

