# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A360793

from math import isqrt
from sympy import mobius, primepi, integer_nthroot, primerange
def A360793(n):
    def bisection(f,kmin=0,kmax=1):
        while f(kmax) > kmax: kmax <<= 1
        kmin = kmax >> 1
        while kmax-kmin > 1:
            kmid = kmax+kmin>>1
            if f(kmid) <= kmid:
                kmax = kmid
            else:
                kmin = kmid
        return kmax
    def g(x): return sum(mobius(k)*(x//k**2) for k in range(1, isqrt(x)+1))
    def f(x): return int(n+x+primepi(integer_nthroot(x,3)[0])+sum(sum(-g(x//p**j) if j&1 else g(x//p**j) for j in range(3,x.bit_length())) for p in primerange(isqrt(x)+1)))
    return bisection(f,n,n) # _Chai Wah Wu_, Feb 25 2025

