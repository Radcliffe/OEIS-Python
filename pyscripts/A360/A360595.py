# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A360595

def A(lastn,times=3,mode=0):
  a,n=[0],0
  while n<lastn:
    d,i,v,o,g,r=[[n]],0,1,[],0,0
    while len(d)>0:
      if len(d[-1])>v: v,o=len(d[-1]),d[-1][:]
      if d[-1][-1]-a[d[-1][-1]]>=0:
        if d[-1].count(d[-1][-1]-a[d[-1][-1]])<times:g=1
      if d[-1][-1]+a[d[-1][-1]]<=n:
        if d[-1].count(d[-1][-1]+a[d[-1][-1]])<times:
          if g>0: d.append(d[-1][:])
          d[-1].append(d[-1][-1]+a[d[-1][-1]])
          r=1
      if g>0:
        if r>0: d[-2].append(d[-2][-1]-a[d[-2][-1]])
        else: d[-1].append(d[-1][-1]-a[d[-1][-1]])
        r=1
      if r==0: d.pop()
      r,g=0,0
    a.append(v)
    n+=1
    if mode==0: print(n+1,a[n])
    if mode>0:
      u,q=0,[]
      while u<len(o):
        q.append(a[o[u]])
        u+=1
      print(n+1,a[n],q,o)
  return a

