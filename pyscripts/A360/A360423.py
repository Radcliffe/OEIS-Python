# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A360423

def rotate(str):
    first_char = str[0 : 1]
    remaining_chars = str[1 :]
    return (remaining_chars + first_char)
def get_rotations(n):
    n_as_str = str(n)
    rotations = []
    rotation_as_str = n_as_str
    for i in range(len(n_as_str) - 1):
        rotation_as_str = rotate(rotation_as_str)
        rotations.append(int(rotation_as_str))
    return rotations
seq = []
max_n = 9999999
for n in range(1, max_n + 1):
    n_len = len(str(n))
    factor = 2
    while True:
        prod = n * factor
        prod_len = len(str(prod))
        if prod_len < n_len + 1:
            factor = factor + 1
        elif prod_len > n_len + 1:
            seq.append(n)
            break
        else:
            # prod_len == n_len + 1
            rotations = get_rotations(prod)
            if all(rotation % n == 0 for rotation in rotations):
                factor = factor + 1
            else:
                break
print(seq)

