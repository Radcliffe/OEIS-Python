# This file is auto-generated from OEIS data.
# Please do not edit this file directly.
# OEIS sequence: A068853

from sympy import isprime
from itertools import count, islice, product
def diffgen(n): # generator of numbers >n sharing no digits with n
    s = str(n)
    P = [list(str(d) for d in range(10) if str(d) != si) for si in s]
    if s[0] < '9':
        f = [d for d in P[0] if d > s[0]]
        for t in product(*([f]+P[1:])):
            yield int("".join(t))
    for e in count(1):
        for t in product("123456789", *(["0123456789"]*(e-1) + P)):
            yield int("".join(t))
def agen(): # generator of terms
    an = 2
    while True:
        yield an
        an = next(k for k in diffgen(an) if isprime(k))
print(list(islice(agen(), 47))) # _Michael S. Branicky_, Mar 19 2024

